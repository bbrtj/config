#!/usr/bin/env perl

use v5.30;
use warnings;

# REQUIRES: Mojolicious IO::Prompter
use Mojo::UserAgent;
use Mojo::URL;
use IO::Prompter;
use Mojo::JSON qw(decode_json);
use Mojo::File qw(path);
use MIME::Base64;

my $user = shift @ARGV // 'brtastic';
my $rt = 'https://rt.brtastic.xyz';
my $password_file = path($ENV{HOME} . "/.config/todo/$user");

my $subject = prompt 'Subject:';
my $content = prompt 'Content:' || $subject;

# NOTE: there's no encryption on the password file. It is only base64-encoded
# to avoid disclosing the password by accident
my $password;
if (-f $password_file) {
	$password = decode_base64($password_file->slurp);
}
else {
	$password = prompt 'RT password:', -echo => '*';
	$password_file->dirname->make_path;
	$password_file->spurt(encode_base64($password));
	$password_file->chmod(0600);
	say "Created $password_file";
}

my $url = Mojo::URL->new("$rt/REST/2.0/ticket")->userinfo("$user:$password");
my $data = {
	Queue => 'todo',
	Requestor => $user,
	Subject => $subject,
	Content => $content,
};

my $ua = Mojo::UserAgent->new;
my $res = $ua->post($url, json => $data)->res;

if ($res->is_success) {
	my $ret_data = decode_json($res->body);
	say 'OK ' . $ret_data->{id};
	my $open = prompt 'Open in Firefox?', -yes;
	`firefox $rt/Ticket/Display.html?id=$ret_data->{id}` if $open;
}
else {
	say 'Error occured: ' . ($res->code // '(no code)');
	say ' -> ' . $res->body if $res->body;
}
