affected_rows(mysqli $link)		
affected_rows(mysqli_stmt $stmt)		
client_info(mysqli $link)		
client_version(mysqli $link)		
connect_errno()		
connect_error()		
current_field(mysqli_result $result)		
errno(mysqli $link)		
errno(mysqli_stmt $stmt)		
error(mysqli $link)		
error(mysqli_stmt $stmt)		
errorBuffer(tidy $tidy)		
error_list(mysqli $link)		
error_list(mysqli_stmt $stmt)		
field_count(mysqli $link)		
field_count(mysqli_result $result)		
field_count(mysqli_stmt $stmt)		
host_info(mysqli $link)		
info(mysqli $link)		
insert_id(mysqli $link)		
insert_id(mysqli_stmt $stmt)		
lengths(mysqli_result $result)		
num_rows(mysqli_result $result)		
num_rows(mysqli_stmt $stmt)		
param_count(mysqli_stmt $stmt)		
protocol_version(mysqli $link)		
report_mode(int $flags)		
server_info(mysqli $link)		
server_version(mysqli $link)		
sqlstate(mysqli $link)		
sqlstate(mysqli_stmt $stmt)		
thread_id(mysqli $link)		
warning_count(mysqli $link)		
APCIterator(string $cache [, mixed $search = '' [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE]]]])		
APCUIterator([mixed $search = '' [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE]]]])		
AppendIterator()		
ArrayIterator()		
ArrayObject()		
Atomic([integer $value = ''])		
AtomicInteger([int $value = ''])		
Base(string $nsname)		
Binary(string $data, int $type)		
Box([int $orientation = UI\Controls\Box::Horizontal])		
Brush(int $color)		
Buffer([integer $size = ''])		
BulkWrite([array $options = ''])		
BulletList(int $tight, int $delimiter)		
Button(string $text)		
C14N([bool $exclusive = '' [, bool $with_comments = '' [, array $xpath = '' [, array $ns_prefixes = '']]]])		
C14NFile(string $uri [, bool $exclusive = '' [, bool $with_comments = '' [, array $xpath = '' [, array $ns_prefixes = '']]]])		
CQL(string $query)		
CURLFile(string $filename [, string $mimetype = '' [, string $postname = '']])		
CachingIterator(Iterator $iterator [, int $flags = self::CALL_TOSTRING])		
CairoContext(CairoSurface $surface)		
CairoFontFace()		
CairoFontOptions()		
CairoImageSurface(int $format, int $width, int $height)		
CairoLinearGradient(float $x0, float $y0, float $x1, float $y1)		
CairoMatrix([float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0]]]]]])		
CairoPattern()		
CairoPdfSurface(string $file, float $width, float $height)		
CairoPsSurface(string $file, float $width, float $height)		
CairoRadialGradient(float $x0, float $y0, float $r0, float $x1, float $y1, float $r1)		
CairoScaledFont(CairoFontFace $font_face, CairoMatrix $matrix, CairoMatrix $ctm, CairoFontOptions $options)		
CairoSolidPattern(float $red, float $green, float $blue [, float $alpha = ''])		
CairoSurface()		
CairoSurfacePattern(CairoSurface $surface)		
CairoSvgSurface(string $file, float $width, float $height)		
CallbackFilterIterator(Iterator $iterator, callable $callback)		
Channel(string $size)		
Check(string $text)		
Client()		
Client()		
Client(int $sock_type [, integer $is_async = ''])		
Client(string $host [, string $port = '' [, boolean $ssl = '']])		
CodeBlock(string $fence, string $literal)		
Collator(string $locale)		
Collection()		
CollectionAdd()		
CollectionFind()		
CollectionModify()		
CollectionRemove()		
Color([int $color = ''])		
ColumnResult()		
Command(array|object $document [, array $commandOptions = ''])		
Converter([array $settings = ''])		
Converter([string $buffer = '' [, array $settings = '']])		
Cursor()		
CursorId()		
DBPointer()		
DOMAttr(string $name [, string $value = ''])		
DOMCdataSection(string $value)		
DOMComment([string $value = ''])		
DOMDocument([string $version = '' [, string $encoding = '']])		
DOMElement(string $name [, string $value = '' [, string $namespaceURI = '']])		
DOMEntityReference(string $name)		
DOMImplementation()		
DOMProcessingInstruction(string $name [, string $value = ''])		
DOMText([string $value = ''])		
DOMXPath(DOMDocument $doc)		
DateInterval(string $interval_spec)		
DatePeriod(DateTimeInterface $start, DateInterval $interval, int $recurrences [, int $options = '', DateTimeInterface $end, string $isostr])		
DateTime([string $time = "now" [, DateTimeZone $timezone = '']])		
DateTimeImmutable([string $time = "now" [, DateTimeZone $timezone = '']])		
DateTimeZone(string $timezone)		
Decimal128([string $value = ''])		
Definition(string $name, string $parent, array $interfaces)		
Deque([mixed $values = ''])		
Descriptor(string $family, float $size [, int $weight = UI\Draw\Text\Font\Weight::Normal [, int $italic = UI\Draw\Text\Font\Italic::Normal [, int $stretch = UI\Draw\Text\Font\Stretch::Normal]]])		
DirectoryIterator(string $path)		
DocResult()		
Driver()		
Entry([int $type = UI\Controls\Entry::Normal])		
EvCheck(callable $callback [, mixed $data = '' [, int $priority = '']])		
EvChild(int $pid, bool $trace, callable $callback [, mixed $data = '' [, int $priority = '']])		
EvEmbed(object $other [, callable $callback = '' [, mixed $data = '' [, int $priority = '']]])		
EvFork(callable $callback [, mixed $data = '' [, int $priority = '']])		
EvIdle(callable $callback [, mixed $data = '' [, int $priority = '']])		
EvIo(mixed $fd, int $events, callable $callback [, mixed $data = '' [, int $priority = '']])		
EvLoop([int $flags = '' [, mixed $data = null [, float $io_interval = 0.0 [, float $timeout_interval = 0.0]]]])		
EvPeriodic(float $offset, string $interval, callable $reschedule_cb, callable $callback [, mixed $data = '' [, int $priority = '']])		
EvPrepare(string $callback [, string $data = '' [, string $priority = '']])		
EvSignal(int $signum, callable $callback [, mixed $data = '' [, int $priority = '']])		
EvStat(string $path, float $interval, callable $callback [, mixed $data = '' [, int $priority = '']])		
EvTimer(float $after, float $repeat, callable $callback [, mixed $data = '' [, int $priority = '']])		
EvWatcher()		
Event(EventBase $base, mixed $fd, int $what, callable $cb [, mixed $arg = null])		
EventBase([EventConfig $cfg = ''])		
EventBuffer()		
EventBufferEvent(EventBase $base [, mixed $socket = '' [, int $options = '' [, callable $readcb = '' [, callable $writecb = '' [, callable $eventcb = '']]]]])		
EventConfig()		
EventDnsBase(EventBase $base, bool $initialize)		
EventHttp(EventBase $base [, EventSslContext $ctx = ''])		
EventHttpConnection(EventBase $base, EventDnsBase $dns_base, string $address, int $port [, EventSslContext $ctx = ''])		
EventHttpRequest(callable $callback [, mixed $data = ''])		
EventListener(EventBase $base, callable $cb, mixed $data, int $flags, int $backlog, mixed $target)		
EventSslContext(string $method, string $options)		
EventUtil()		
Excel(array $config)		
ExecutionStatus()		
Executor(int $microseconds, int $seconds)		
Expression(string $expression)		
FANNConnection(int $from_neuron, int $to_neuron, float $weight)		
FieldMetadata()		
FilesystemIterator(string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS])		
FilterIterator(Iterator $iterator)		
Font(UI\Draw\Text\Font\Descriptor $descriptor)		
GearmanClient()		
GearmanJob()		
GearmanTask()		
GearmanWorker()		
Gender([string $dsn = ''])		
GlobIterator(string $pattern [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO])		
Gmagick([string $filename = ''])		
GmagickPixel([string $color = ''])		
Group(string $title)		
HTML(CommonMark\Node $node [, int $options = ''])		
HaruDoc()		
HashContext()		
Heading(int $level)		
Image(string $url, string $title)		
Imagick([mixed $files = ''])		
ImagickDraw()		
ImagickPixel([string $color = ''])		
ImagickPixelIterator(Imagick $wand)		
InfiniteIterator(Iterator $iterator)		
Int64()		
IntlBreakIterator()		
IntlCalendar()		
IntlDateFormatter(string $locale, int $datetype, int $timetype [, mixed $timezone = null [, mixed $calendar = null [, string $pattern = ""]]])		
IntlGregorianCalendar([IntlTimeZone $tz = '' [, string $locale = '', int $timeZoneOrYear, int $localeOrMonth, int $dayOfMonth, int $hour, int $minute [, int $second = '']]])		
IntlRuleBasedBreakIterator(string $rules [, string $areCompiled = ''])		
IteratorIterator(Traversable $iterator)		
Javascript(string $code [, array|object $scope = ''])		
Judy(int $judy_type)		
KTaglib_MPEG_File(string $filename)		
Label(string $text)		
Latex(CommonMark\Node $node [, int $options = '' [, int $width = '']])		
Layout(string $text, UI\Draw\Text\Font $font, float $width)		
LimitIterator(Iterator $iterator [, int $offset = '' [, int $count = -1]])		
LinearGradient(UI\Point $start, UI\Point $end)		
Link(string $url, string $title)		
Lock([string $type = '' [, string $file_lock_location = '']])		
Lua(string $lua_script_file)		
Man(CommonMark\Node $node [, int $options = '' [, int $width = '']])		
Manager()		
Map([mixed $...values = ''])		
MaxKey()		
Memcached([string $persistent_id = ''])		
Menu(string $name)		
MessageFormatter(string $locale, string $pattern)		
Method(\Closure $closure)		
MinKey()		
Mongo([string $server = '' [, array $options = '']])		
MongoBinData(string $data [, int $type = ''])		
MongoClient([string $server = "mongodb://localhost:27017" [, array $options = )		
MongoCode()		
MongoCollection(MongoDB $db, string $name)		
MongoCommandCursor(MongoClient $connection, string $ns, array $command)		
MongoCursor()		
MongoDB(MongoClient $conn, string $name)		
MongoDate()		
MongoDeleteBatch(MongoCollection $collection [, array $write_options = ''])		
MongoGridFS(MongoDB $db [, string $prefix = "fs" [, mixed $chunks = "fs"]])		
MongoGridFSCursor(MongoGridFS $gridfs, resource $connection, string $ns, array $query, array $fields)		
MongoGridfsFile(MongoGridFS $gridfs, array $file)		
MongoId([string|MongoId $id = ''])		
MongoInsertBatch(MongoCollection $collection [, array $write_options = ''])		
MongoInt32(string $value)		
MongoInt64(string $value)		
MongoRegex(string $regex)		
MongoTimestamp()		
MongoUpdateBatch(MongoCollection $collection [, array $write_options = ''])		
MongoWriteBatch(MongoCollection $collection [, string $batch_type = '' [, array $write_options = '']])		
MultilineEntry([int $type = ''])		
MultipleIterator([int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC])		
MySQL()		
MySQL()		
MysqlndUhConnection()		
MysqlndUhPreparedStatement()		
NoRewindIterator(Iterator $iterator)		
NumberFormatter(string $locale, int $style [, string $pattern = ''])		
OAuth(string $consumer_key, string $consumer_secret [, string $signature_method = '' [, int $auth_type = '']])		
OAuthProvider([array $params_array = ''])		
Object(string $buffer [, array $settings = ''])		
ObjectId([string $id = ''])		
OrderedList(int $tight, int $delimiter, int $start)		
PDF_activate_item(resource $pdfdoc, int $id)		
PDF_add_annotation()		
PDF_add_bookmark()		
PDF_add_launchlink(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename)		
PDF_add_locallink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, int $page, string $dest)		
PDF_add_nameddest(resource $pdfdoc, string $name, string $optlist)		
PDF_add_note(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open)		
PDF_add_outline()		
PDF_add_pdflink(resource $pdfdoc, float $bottom_left_x, float $bottom_left_y, float $up_right_x, float $up_right_y, string $filename, int $page, string $dest)		
PDF_add_table_cell(resource $pdfdoc, int $table, int $column, int $row, string $text, string $optlist)		
PDF_add_textflow(resource $pdfdoc, int $textflow, string $text, string $optlist)		
PDF_add_thumbnail(resource $pdfdoc, int $image)		
PDF_add_weblink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, string $url)		
PDF_arc(resource $p, float $x, float $y, float $r, float $alpha, float $beta)		
PDF_arcn(resource $p, float $x, float $y, float $r, float $alpha, float $beta)		
PDF_attach_file(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename, string $description, string $author, string $mimetype, string $icon)		
PDF_begin_document(resource $pdfdoc, string $filename, string $optlist)		
PDF_begin_font(resource $pdfdoc, string $filename, float $a, float $b, float $c, float $d, float $e, float $f, string $optlist)		
PDF_begin_glyph(resource $pdfdoc, string $glyphname, float $wx, float $llx, float $lly, float $urx, float $ury)		
PDF_begin_item(resource $pdfdoc, string $tag, string $optlist)		
PDF_begin_layer(resource $pdfdoc, int $layer)		
PDF_begin_page(resource $pdfdoc, float $width, float $height)		
PDF_begin_page_ext(resource $pdfdoc, float $width, float $height, string $optlist)		
PDF_begin_pattern(resource $pdfdoc, float $width, float $height, float $xstep, float $ystep, int $painttype)		
PDF_begin_template(resource $pdfdoc, float $width, float $height)		
PDF_begin_template_ext(resource $pdfdoc, float $width, float $height, string $optlist)		
PDF_circle(resource $pdfdoc, float $x, float $y, float $r)		
PDF_clip(resource $p)		
PDF_close(resource $p)		
PDF_close_image(resource $p, int $image)		
PDF_close_pdi(resource $p, int $doc)		
PDF_close_pdi_page(resource $p, int $page)		
PDF_closepath(resource $p)		
PDF_closepath_fill_stroke(resource $p)		
PDF_closepath_stroke(resource $p)		
PDF_concat(resource $p, float $a, float $b, float $c, float $d, float $e, float $f)		
PDF_continue_text(resource $p, string $text)		
PDF_create_3dview(resource $pdfdoc, string $username, string $optlist)		
PDF_create_action(resource $pdfdoc, string $type, string $optlist)		
PDF_create_annotation(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $type, string $optlist)		
PDF_create_bookmark(resource $pdfdoc, string $text, string $optlist)		
PDF_create_field(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $name, string $type, string $optlist)		
PDF_create_fieldgroup(resource $pdfdoc, string $name, string $optlist)		
PDF_create_gstate(resource $pdfdoc, string $optlist)		
PDF_create_pvf(resource $pdfdoc, string $filename, string $data, string $optlist)		
PDF_create_textflow(resource $pdfdoc, string $text, string $optlist)		
PDF_curveto(resource $p, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)		
PDF_define_layer(resource $pdfdoc, string $name, string $optlist)		
PDF_delete(resource $pdfdoc)		
PDF_delete_pvf(resource $pdfdoc, string $filename)		
PDF_delete_table(resource $pdfdoc, int $table, string $optlist)		
PDF_delete_textflow(resource $pdfdoc, int $textflow)		
PDF_encoding_set_char(resource $pdfdoc, string $encoding, int $slot, string $glyphname, int $uv)		
PDF_end_document(resource $pdfdoc, string $optlist)		
PDF_end_font(resource $pdfdoc)		
PDF_end_glyph(resource $pdfdoc)		
PDF_end_item(resource $pdfdoc, int $id)		
PDF_end_layer(resource $pdfdoc)		
PDF_end_page(resource $p)		
PDF_end_page_ext(resource $pdfdoc, string $optlist)		
PDF_end_pattern(resource $p)		
PDF_end_template(resource $p)		
PDF_endpath(resource $p)		
PDF_fill(resource $p)		
PDF_fill_imageblock(resource $pdfdoc, int $page, string $blockname, int $image, string $optlist)		
PDF_fill_pdfblock(resource $pdfdoc, int $page, string $blockname, int $contents, string $optlist)		
PDF_fill_stroke(resource $p)		
PDF_fill_textblock(resource $pdfdoc, int $page, string $blockname, string $text, string $optlist)		
PDF_findfont(resource $p, string $fontname, string $encoding, int $embed)		
PDF_fit_image(resource $pdfdoc, int $image, float $x, float $y, string $optlist)		
PDF_fit_pdi_page(resource $pdfdoc, int $page, float $x, float $y, string $optlist)		
PDF_fit_table(resource $pdfdoc, int $table, float $llx, float $lly, float $urx, float $ury, string $optlist)		
PDF_fit_textflow(resource $pdfdoc, int $textflow, float $llx, float $lly, float $urx, float $ury, string $optlist)		
PDF_fit_textline(resource $pdfdoc, string $text, float $x, float $y, string $optlist)		
PDF_get_apiname(resource $pdfdoc)		
PDF_get_buffer(resource $p)		
PDF_get_errmsg(resource $pdfdoc)		
PDF_get_errnum(resource $pdfdoc)		
PDF_get_font()		
PDF_get_fontname()		
PDF_get_fontsize()		
PDF_get_image_height()		
PDF_get_image_width()		
PDF_get_majorversion()		
PDF_get_minorversion()		
PDF_get_parameter(resource $p, string $key, float $modifier)		
PDF_get_pdi_parameter(resource $p, string $key, int $doc, int $page, int $reserved)		
PDF_get_pdi_value(resource $p, string $key, int $doc, int $page, int $reserved)		
PDF_get_value(resource $p, string $key, float $modifier)		
PDF_info_font(resource $pdfdoc, int $font, string $keyword, string $optlist)		
PDF_info_matchbox(resource $pdfdoc, string $boxname, int $num, string $keyword)		
PDF_info_table(resource $pdfdoc, int $table, string $keyword)		
PDF_info_textflow(resource $pdfdoc, int $textflow, string $keyword)		
PDF_info_textline(resource $pdfdoc, string $text, string $keyword, string $optlist)		
PDF_initgraphics(resource $p)		
PDF_lineto(resource $p, float $x, float $y)		
PDF_load_3ddata(resource $pdfdoc, string $filename, string $optlist)		
PDF_load_font(resource $pdfdoc, string $fontname, string $encoding, string $optlist)		
PDF_load_iccprofile(resource $pdfdoc, string $profilename, string $optlist)		
PDF_load_image(resource $pdfdoc, string $imagetype, string $filename, string $optlist)		
PDF_makespotcolor(resource $p, string $spotname)		
PDF_moveto(resource $p, float $x, float $y)		
PDF_new()		
PDF_open_ccitt(resource $pdfdoc, string $filename, int $width, int $height, int $BitReverse, int $k, int $Blackls1)		
PDF_open_file(resource $p, string $filename)		
PDF_open_gif()		
PDF_open_image(resource $p, string $imagetype, string $source, string $data, int $length, int $width, int $height, int $components, int $bpc, string $params)		
PDF_open_image_file(resource $p, string $imagetype, string $filename, string $stringparam, int $intparam)		
PDF_open_jpeg()		
PDF_open_memory_image(resource $p, resource $image)		
PDF_open_pdi(resource $pdfdoc, string $filename, string $optlist, int $len)		
PDF_open_pdi_document(resource $p, string $filename, string $optlist)		
PDF_open_pdi_page(resource $p, int $doc, int $pagenumber, string $optlist)		
PDF_open_tiff()		
PDF_pcos_get_number(resource $p, int $doc, string $path)		
PDF_pcos_get_stream(resource $p, int $doc, string $optlist, string $path)		
PDF_pcos_get_string(resource $p, int $doc, string $path)		
PDF_place_image(resource $pdfdoc, int $image, float $x, float $y, float $scale)		
PDF_place_pdi_page(resource $pdfdoc, int $page, float $x, float $y, float $sx, float $sy)		
PDF_process_pdi(resource $pdfdoc, int $doc, int $page, string $optlist)		
PDF_rect(resource $p, float $x, float $y, float $width, float $height)		
PDF_restore(resource $p)		
PDF_resume_page(resource $pdfdoc, string $optlist)		
PDF_rotate(resource $p, float $phi)		
PDF_save(resource $p)		
PDF_scale(resource $p, float $sx, float $sy)		
PDF_set_border_color(resource $p, float $red, float $green, float $blue)		
PDF_set_border_dash(resource $pdfdoc, float $black, float $white)		
PDF_set_border_style(resource $pdfdoc, string $style, float $width)		
PDF_set_char_spacing()		
PDF_set_duration()		
PDF_set_gstate(resource $pdfdoc, int $gstate)		
PDF_set_horiz_scaling()		
PDF_set_info(resource $p, string $key, string $value)		
PDF_set_info_author()		
PDF_set_info_creator()		
PDF_set_info_keywords()		
PDF_set_info_subject()		
PDF_set_info_title()		
PDF_set_layer_dependency(resource $pdfdoc, string $type, string $optlist)		
PDF_set_leading()		
PDF_set_parameter(resource $p, string $key, string $value)		
PDF_set_text_matrix()		
PDF_set_text_pos(resource $p, float $x, float $y)		
PDF_set_text_rendering()		
PDF_set_text_rise()		
PDF_set_value(resource $p, string $key, float $value)		
PDF_set_word_spacing()		
PDF_setcolor(resource $p, string $fstype, string $colorspace, float $c1, float $c2, float $c3, float $c4)		
PDF_setdash(resource $pdfdoc, float $b, float $w)		
PDF_setdashpattern(resource $pdfdoc, string $optlist)		
PDF_setflat(resource $pdfdoc, float $flatness)		
PDF_setfont(resource $pdfdoc, int $font, float $fontsize)		
PDF_setgray(resource $p, float $g)		
PDF_setgray_fill(resource $p, float $g)		
PDF_setgray_stroke(resource $p, float $g)		
PDF_setlinecap(resource $p, int $linecap)		
PDF_setlinejoin(resource $p, int $value)		
PDF_setlinewidth(resource $p, float $width)		
PDF_setmatrix(resource $p, float $a, float $b, float $c, float $d, float $e, float $f)		
PDF_setmiterlimit(resource $pdfdoc, float $miter)		
PDF_setpolydash()		
PDF_setrgbcolor(resource $p, float $red, float $green, float $blue)		
PDF_setrgbcolor_fill(resource $p, float $red, float $green, float $blue)		
PDF_setrgbcolor_stroke(resource $p, float $red, float $green, float $blue)		
PDF_shading(resource $pdfdoc, string $shtype, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist)		
PDF_shading_pattern(resource $pdfdoc, int $shading, string $optlist)		
PDF_shfill(resource $pdfdoc, int $shading)		
PDF_show(resource $pdfdoc, string $text)		
PDF_show_boxed(resource $p, string $text, float $left, float $top, float $width, float $height, string $mode, string $feature)		
PDF_show_xy(resource $p, string $text, float $x, float $y)		
PDF_skew(resource $p, float $alpha, float $beta)		
PDF_stringwidth(resource $p, string $text, int $font, float $fontsize)		
PDF_stroke(resource $p)		
PDF_suspend_page(resource $pdfdoc, string $optlist)		
PDF_translate(resource $p, float $tx, float $ty)		
PDF_utf16_to_utf8(resource $pdfdoc, string $utf16string)		
PDF_utf32_to_utf16(resource $pdfdoc, string $utf32string, string $ordering)		
PDF_utf8_to_utf16(resource $pdfdoc, string $utf8string, string $ordering)		
PDO(string $dsn [, string $username = '' [, string $passwd = '' [, array $options = '']]])		
Pair([mixed $key = '' [, mixed $value = '']])		
ParentIterator(RecursiveIterator $iterator)		
Parse(string $content [, int $options = ''])		
Parser([int $options = ''])		
Patch(object $instance, array $interfaces)		
Path([int $mode = UI\Draw\Path::Winding])		
Phar(string $fname [, int $flags = '' [, string $alias = '']])		
PharData(string $fname [, int $flags = '' [, string $alias = '' [, int $format = '']]])		
PharException()		
PharFileInfo(string $entry)		
Picker([int $type = UI\Controls\Picker::Date])		
Point(float $x, float $y)		
Pool(int $size [, string $class = '' [, array $ctor = '']])		
Port()		
PriorityQueue()		
Process(callable $callback [, boolean $redirect_stdin_and_stdout = '' [, integer $pipe_type = '']])		
Query(array|object $filter [, array $queryOptions = ''])		
Queue([mixed $values = ''])		
QuickHashIntHash(int $size [, int $options = ''])		
QuickHashIntSet(int $size [, int $options = ''])		
QuickHashIntStringHash(int $size [, int $options = ''])		
QuickHashStringIntHash(int $size [, int $options = ''])		
RRDCreator(string $path [, string $startTime = '' [, int $step = '']])		
RRDGraph(string $path)		
RRDUpdater(string $path)		
RadialGradient(UI\Point $start, UI\Point $outer, float $radius)		
ReadConcern([string $level = ''])		
ReadPreference()		
RecursiveCachingIterator(Iterator $iterator [, string $flags = self::CALL_TOSTRING])		
RecursiveCallbackFilterIterator(RecursiveIterator $iterator, string $callback)		
RecursiveDirectoryIterator(string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO])		
RecursiveFilterIterator(RecursiveIterator $iterator)		
RecursiveIteratorIterator(Traversable $iterator [, int $mode = RecursiveIteratorIterator::LEAVES_ONLY [, int $flags = '']])		
RecursiveRegexIterator(RecursiveIterator $iterator, string $regex [, int $mode = self::MATCH [, int $flags = '' [, int $preg_flags = '']]])		
RecursiveTreeIterator(RecursiveIterator|IteratorAggregate $it [, int $flags = RecursiveTreeIterator::BYPASS_KEY [, int $cit_flags = CachingIterator::CATCH_GET_CHILD [, int $mode = RecursiveIteratorIterator::SELF_FIRST]]])		
ReflectionClass(mixed $argument)		
ReflectionClassConstant(mixed $class, string $name)		
ReflectionExtension(string $name)		
ReflectionFunction(mixed $name)		
ReflectionGenerator(Generator $generator)		
ReflectionMethod(mixed $class, string $name, string $class_method)		
ReflectionObject(object $argument)		
ReflectionParameter(string $function, string $parameter)		
ReflectionProperty(mixed $class, string $name)		
ReflectionZendExtension(string $name)		
Regex(string $pattern [, string $flags = ""])		
RegexIterator(Iterator $iterator, string $regex [, int $mode = self::MATCH [, int $flags = '' [, int $preg_flags = '']]])		
Render(CommonMark\Node $node [, int $options = '' [, int $width = '']])		
ResourceBundle(string $locale, string $bundlename [, bool $fallback = ''])		
Result()		
RowResult()		
Runkit_Sandbox()		
Runkit_Sandbox_Parent()		
SAMConnection()		
SAMMessage([mixed $body = ''])		
SDO_DAS_Relational(array $database_metadata [, string $application_root_type = '' [, array $SDO_containment_references_metadata = '']])		
SDO_Model_ReflectionDataObject(SDO_DataObject $data_object)		
SNMP(int $version, string $hostname, string $community [, int $timeout = 1000000 [, int $retries = 5]])		
SQLite3(string $filename [, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE [, string $encryption_key = '']])		
SVM()		
SVMModel([string $filename = ''])		
SWFAction(string $script)		
SWFBitmap(mixed $file [, mixed $alphafile = ''])		
SWFButton()		
SWFFont(string $filename)		
SWFGradient()		
SWFMorph()		
SWFMovie([int $version = ''])		
SWFPrebuiltClip(mixed $file)		
SWFShape()		
SWFSound(string $filename [, int $flags = ''])		
SWFSprite()		
SWFText()		
SWFTextField([int $flags = ''])		
SWFVideoStream([string $file = ''])		
Schema()		
SeasLog()		
Separator([int $type = UI\Controls\Separator::Horizontal])		
Server()		
Server(string $host [, integer $port = '' [, integr $mode = '' [, integer $sock_type = '']]])		
Session()		
Session()		
Set([mixed $...values = ''])		
SimpleXMLElement(string $data [, int $options = '' [, bool $data_is_url = '' [, string $ns = "" [, bool $is_prefix = '']]]])		
Size(float $width, float $height)		
Slider(int $min, int $max)		
SoapClient(mixed $wsdl [, array $options = ''])		
SoapClient(mixed $wsdl [, array $options = ''])		
SoapFault(string $faultcode, string $faultstring [, string $faultactor = '' [, string $detail = '' [, string $faultname = '' [, string $headerfault = '']]]])		
SoapFault(string $faultcode, string $faultstring [, string $faultactor = '' [, string $detail = '' [, string $faultname = '' [, string $headerfault = '']]]])		
SoapHeader(string $namespace, string $name [, mixed $data = '' [, bool $mustunderstand = '' [, string $actor = '']]])		
SoapHeader(string $namespace, string $name [, mixed $data = '' [, bool $mustunderstand = '' [, string $actor = '']]])		
SoapParam(mixed $data, string $name)		
SoapParam(mixed $data, string $name)		
SoapServer(mixed $wsdl [, array $options = ''])		
SoapServer(mixed $wsdl [, array $options = ''])		
SoapVar(mixed $data, string $encoding [, string $type_name = '' [, string $type_namespace = '' [, string $node_name = '' [, string $node_namespace = '']]]])		
SoapVar(mixed $data, string $encoding [, string $type_name = '' [, string $type_namespace = '' [, string $node_name = '' [, string $node_namespace = '']]]])		
SolrClient(array $clientOptions)		
SolrCollapseFunction([string $field = ''])		
SolrDisMaxQuery([string $q = ''])		
SolrDocument()		
SolrDocumentField()		
SolrGenericResponse()		
SolrInputDocument()		
SolrModifiableParams()		
SolrObject()		
SolrPingResponse()		
SolrQuery([string $q = ''])		
SolrQueryResponse()		
SolrUpdateResponse()		
SphinxClient()		
Spin(int $min, int $max)		
SplDoublyLinkedList()		
SplFileInfo(string $file_name)		
SplFileObject(string $filename [, string $open_mode = "r" [, bool $use_include_path = '' [, resource $context = '']]])		
SplFixedArray([int $size = ''])		
SplHeap()		
SplPriorityQueue()		
SplQueue()		
SplStack()		
SplTempFileObject([int $max_memory = ''])		
SplType([mixed $initial_value = '' [, bool $strict = '']])		
Spoofchecker()		
SqlStatement()		
SqlStatementResult()		
Stack([mixed $values = ''])		
Statement()		
Stomp("stomp.default_broker_uri")		
StompFrame([string $command = '' [, array $headers = '' [, string $body = '']]])		
Stroke([int $cap = UI\Draw\Line\Cap::Flat [, int $join = UI\Draw\Line\Join::Miter [, float $thickness = 1 [, float $miterLimit = 10]]]])		
Swish(string $index_names)		
Symbol()		
SyncEvent([string $name = '' [, bool $manual = '' [, bool $prefire = '']]])		
SyncMutex([string $name = ''])		
SyncReaderWriter([string $name = '' [, bool $autounlock = '']])		
SyncSemaphore([string $name = '' [, int $initialval = 1 [, bool $autounlock = '']]])		
SyncSharedMemory(string $name, int $size)		
Table()		
Table(integer $table_size)		
TableDelete()		
TableInsert()		
TableSelect()		
TableUpdate()		
Text(string $literal)		
Timestamp(int $increment, int $timestamp)		
TokyoTyrant([string $host = '' [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options = '']]])		
TokyoTyrantIterator(mixed $object)		
TokyoTyrantQuery(TokyoTyrantTable $table)		
Transliterator()		
UConverter([string $destination_encoding = '' [, string $source_encoding = '']])		
UTCDateTime([integer|float|string|DateTimeInterface $milliseconds = ''])		
Undefined()		
V8Js()		
Value([ $default = ''])		
VarnishAdmin([array $args = ''])		
VarnishLog([array $args = ''])		
VarnishStat([array $args = ''])		
Vector([int $size = '' [, mixed $value = '']])		
Vector([mixed $values = ''])		
Warning()		
WeakMap()		
Weakref(object $object)		
Window(string $title, Size $size [, bool $menu = ''])		
WriteConcern(string|integer $w [, int $wtimeout = '' [, bool $journal = '']])		
XML(string $source [, string $encoding = '' [, int $options = '']])		
XML(CommonMark\Node $node [, int $options = ''])		
XSLTProcessor()		
XSession()		
Yaf_Application(mixed $config [, string $envrion = ''])		
Yaf_Config_Ini(string $config_file [, string $section = ''])		
Yaf_Config_Simple(string $config_file [, string $section = ''])		
Yaf_Controller_Abstract()		
Yaf_Dispatcher()		
Yaf_Exception()		
Yaf_Loader()		
Yaf_Registry()		
Yaf_Request_Http([string $request_uri = '' [, string $base_uri = '']])		
Yaf_Request_Simple([string $method = '' [, string $module = '' [, string $controller = '' [, string $action = '' [, array $params = '']]]]])		
Yaf_Response_Abstract()		
Yaf_Route_Map([string $controller_prefer = '' [, string $delimiter = ""]])		
Yaf_Route_Regex(string $match, array $route [, array $map = '' [, array $verify = '' [, string $reverse = '']]])		
Yaf_Route_Rewrite(string $match, array $route [, array $verify = ''])		
Yaf_Route_Simple(string $module_name, string $controller_name, string $action_name)		
Yaf_Route_Supervar(string $supervar_name)		
Yaf_Router()		
Yaf_Session()		
Yaf_View_Simple(string $template_dir [, array $options = ''])		
Yar_Client(string $url [, array $options = ''])		
Yar_Server(Object $obj)		
ZMQ()		
ZMQContext([int $io_threads = 1 [, bool $is_persistent = '']])		
ZMQDevice(ZMQSocket $frontend, ZMQSocket $backend [, ZMQSocket $listener = ''])		
ZMQSocket(ZMQContext $context, int $type [, string $persistent_id = '' [, callback $on_new_socket = '']])		
Zookeeper([string $host = '' [, callable $watcher_cb = '' [, int $recv_timeout = 10000]]])		
__autoload(string $class)		
__call(callable $lua_func [, array $args = '' [, int $use_self = '']])		
__call(string $function_name, array $arguments)		
__call(string $method, array $parameters)		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__clone()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct()		
__construct(CairoFontFace $font_face, CairoMatrix $matrix, CairoMatrix $ctm, CairoFontOptions $options)		
__construct(CairoSurface $surface)		
__construct(CairoSurface $surface)		
__construct(DOMDocument $doc)		
__construct(DateTimeInterface $start, DateInterval $interval, int $recurrences [, int $options = '', DateTimeInterface $end, string $isostr])		
__construct(EventBase $base [, EventSslContext $ctx = ''])		
__construct(EventBase $base [, mixed $socket = '' [, int $options = '' [, callable $readcb = '' [, callable $writecb = '' [, callable $eventcb = '']]]]])		
__construct(EventBase $base, EventDnsBase $dns_base, string $address, int $port [, EventSslContext $ctx = ''])		
__construct(EventBase $base, bool $initialize)		
__construct(EventBase $base, callable $cb, mixed $data, int $flags, int $backlog, mixed $target)		
__construct(EventBase $base, mixed $fd, int $what, callable $cb [, mixed $arg = null])		
__construct(Generator $generator)		
__construct(Imagick $wand)		
__construct(Iterator $iterator [, int $flags = self::CALL_TOSTRING])		
__construct(Iterator $iterator [, int $offset = '' [, int $count = -1]])		
__construct(Iterator $iterator [, string $flags = self::CALL_TOSTRING])		
__construct(Iterator $iterator)		
__construct(Iterator $iterator)		
__construct(Iterator $iterator)		
__construct(Iterator $iterator, callable $callback)		
__construct(Iterator $iterator, string $regex [, int $mode = self::MATCH [, int $flags = '' [, int $preg_flags = '']]])		
__construct(MongoClient $conn, string $name)		
__construct()		
__construct(MongoClient $connection, string $ns, array $command)		
__construct(MongoCollection $collection [, array $write_options = ''])		
__construct(MongoCollection $collection [, array $write_options = ''])		
__construct(MongoCollection $collection [, array $write_options = ''])		
__construct(MongoCollection $collection [, string $batch_type = '' [, array $write_options = '']])		
__construct(MongoDB $db [, string $prefix = "fs" [, mixed $chunks = "fs"]])		
__construct(MongoDB $db, string $name)		
__construct(MongoGridFS $gridfs, array $file)		
__construct(MongoGridFS $gridfs, resource $connection, string $ns, array $query, array $fields)		
__construct(Object $obj)		
__construct(RecursiveIterator $iterator)		
__construct(RecursiveIterator $iterator)		
__construct(RecursiveIterator $iterator, string $callback)		
__construct(RecursiveIterator $iterator, string $regex [, int $mode = self::MATCH [, int $flags = '' [, int $preg_flags = '']]])		
__construct(RecursiveIterator|IteratorAggregate $it [, int $flags = RecursiveTreeIterator::BYPASS_KEY [, int $cit_flags = CachingIterator::CATCH_GET_CHILD [, int $mode = RecursiveIteratorIterator::SELF_FIRST]]])		
__construct(SDO_DataObject $data_object)		
__construct(TokyoTyrantTable $table)		
__construct(Traversable $iterator [, int $mode = RecursiveIteratorIterator::LEAVES_ONLY [, int $flags = '']])		
__construct(Traversable $iterator)		
__construct(UI\Draw\Text\Font\Descriptor $descriptor)		
__construct(UI\Point $start, UI\Point $end)		
__construct(UI\Point $start, UI\Point $outer, float $radius)		
__construct(ZMQContext $context, int $type [, string $persistent_id = '' [, callback $on_new_socket = '']])		
__construct(ZMQSocket $frontend, ZMQSocket $backend [, ZMQSocket $listener = ''])		
__construct([ $default = ''])		
__construct([EventConfig $cfg = ''])		
__construct([IntlTimeZone $tz = '' [, string $locale = '', int $timeZoneOrYear, int $localeOrMonth, int $dayOfMonth, int $hour, int $minute [, int $second = '']]])		
__construct([array $args = ''])		
__construct([array $args = ''])		
__construct([array $args = ''])		
__construct([array $options = ''])		
__construct([array $settings = ''])		
__construct([int $cap = UI\Draw\Line\Cap::Flat [, int $join = UI\Draw\Line\Join::Miter [, float $thickness = 1 [, float $miterLimit = 10]]]])		
__construct([int $color = ''])		
__construct([int $flags = '' [, mixed $data = null [, float $io_interval = 0.0 [, float $timeout_interval = 0.0]]]])		
__construct([int $flags = ''])		
__construct([int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC])		
__construct([int $io_threads = 1 [, bool $is_persistent = '']])		
__construct([int $max_memory = ''])		
__construct([int $mode = UI\Draw\Path::Winding])		
__construct([int $options = ''])		
__construct([int $options = FILEINFO_NONE [, string $magic_file = '']])		
__construct([int $orientation = UI\Controls\Box::Horizontal])		
__construct()		
__construct()		
__construct([int $size = ''])		
__construct([int $type = ''])		
__construct([int $type = UI\Controls\Entry::Normal])		
__construct([int $type = UI\Controls\Picker::Date])		
__construct([int $type = UI\Controls\Separator::Horizontal])		
__construct([int $version = ''])		
__construct([integer $size = ''])		
__construct([integer $value = ''])		
__construct([integer|float|string|DateTimeInterface $milliseconds = ''])		
__construct([mixed $body = ''])		
__construct([mixed $files = ''])		
__construct([mixed $initial_value = '' [, bool $strict = '']])		
__construct([mixed $key = '' [, mixed $value = '']])		
__construct([string $buffer = '' [, array $settings = '']])		
__construct([string $color = ''])		
__construct([string $color = ''])		
__construct([string $command = '' [, array $headers = '' [, string $body = '']]])		
__construct([string $controller_prefer = '' [, string $delimiter = ""]])		
__construct([string $destination_encoding = '' [, string $source_encoding = '']])		
__construct([string $dsn = ''])		
__construct([string $field = ''])		
__construct([string $file = ''])		
__construct([string $filename = '' [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = '']]]])		
__construct([string $filename = ''])		
__construct([string $filename = ''])		
__construct([string $host = '' [, callable $watcher_cb = '' [, int $recv_timeout = 10000]]])		
__construct([string $host = '' [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options = '']]])		
__construct([string $id = ''])		
__construct([string $level = ''])		
__construct([string $method = '' [, string $module = '' [, string $controller = '' [, string $action = '' [, array $params = '']]]]])		
__construct([string $name = '' [, bool $autounlock = '']])		
__construct([string $name = '' [, bool $manual = '' [, bool $prefire = '']]])		
__construct([string $name = '' [, int $initialval = 1 [, bool $autounlock = '']]])		
__construct([string $name = ''])		
__construct()		
__construct([string $persistent_id = ''])		
__construct([string $q = ''])		
__construct([string $q = ''])		
__construct([string $request_uri = '' [, string $base_uri = '']])		
__construct([string $server = "mongodb://localhost:27017" [, array $options = )		
__construct([string $server = '' [, array $options = '']])		
__construct([string $type = '' [, string $file_lock_location = '']])		
__construct()		
__construct([string $value = ''])		
__construct([string $value = ''])		
__construct([string $value = ''])		
__construct([string $version = '' [, string $encoding = '']])		
__construct([string|MongoId $id = ''])		
__construct(\Closure $closure)		
__construct(array $clientOptions)		
__construct(array $config)		
__construct(array $database_metadata [, string $application_root_type = '' [, array $SDO_containment_references_metadata = '']])		
__construct(array|object $document [, array $commandOptions = ''])		
__construct(array|object $filter [, array $queryOptions = ''])		
__construct(callable $callback [, boolean $redirect_stdin_and_stdout = '' [, integer $pipe_type = '']])		
__construct(callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(callable $callback [, mixed $data = ''])		
__construct(float $after, float $repeat, callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(float $offset, string $interval, callable $reschedule_cb, callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(float $red, float $green, float $blue [, float $alpha = ''])		
__construct(float $width, float $height)		
__construct(float $x, float $y)		
__construct(float $x0, float $y0, float $x1, float $y1)		
__construct(int $color)		
__construct(int $format, int $width, int $height)		
__construct(int $from_neuron, int $to_neuron, float $weight)		
__construct(int $increment, int $timestamp)		
__construct(int $judy_type)		
__construct(int $level)		
__construct(int $microseconds, int $seconds)		
__construct(int $min, int $max)		
__construct(int $min, int $max)		
__construct(int $pid, bool $trace, callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(int $signum, callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(int $size [, int $options = ''])		
__construct(int $size [, int $options = ''])		
__construct(int $size [, int $options = ''])		
__construct(int $size [, int $options = ''])		
__construct(int $sock_type [, integer $is_async = ''])		
__construct(int $tight, int $delimiter)		
__construct(int $tight, int $delimiter, int $start)		
__construct(int $version, string $hostname, string $community [, int $timeout = 1000000 [, int $retries = 5]])		
__construct(integer $table_size)		
__construct(mixed $argument)		
__construct(mixed $class, string $name)		
__construct(mixed $class, string $name)		
__construct(mixed $class, string $name, string $class_method)		
__construct(mixed $config [, string $envrion = ''])		
__construct(mixed $data, string $encoding [, string $type_name = '' [, string $type_namespace = '' [, string $node_name = '' [, string $node_namespace = '']]]])		
__construct(mixed $data, string $name)		
__construct(mixed $fd, int $events, callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(mixed $file [, mixed $alphafile = ''])		
__construct(mixed $file)		
__construct(mixed $name)		
__construct(mixed $object)		
__construct(mixed $wsdl [, array $options = ''])		
__construct(mixed $wsdl [, array $options = ''])		
__construct(mysqli $link [, string $query = ''])		
__construct(object $argument)		
__construct(object $instance, array $interfaces)		
__construct(object $object)		
__construct(object $other [, callable $callback = '' [, mixed $data = '' [, int $priority = '']]])		
__construct(string $buffer [, array $settings = ''])		
__construct(string $callback [, string $data = '' [, string $priority = '']])		
__construct()		
__construct(string $code [, array|object $scope = ''])		
__construct(string $config_file [, string $section = ''])		
__construct(string $config_file [, string $section = ''])		
__construct(string $consumer_key, string $consumer_secret [, string $signature_method = '' [, int $auth_type = '']])		
__construct(string $data [, int $options = '' [, bool $data_is_url = '' [, string $ns = "" [, bool $is_prefix = '']]]])		
__construct(string $data [, int $type = ''])		
__construct(string $data, int $type)		
__construct(string $dsn [, string $username = '' [, string $passwd = '' [, array $options = '']]])		
__construct(string $entry)		
__construct(string $expression)		
__construct(string $family, float $size [, int $weight = UI\Draw\Text\Font\Weight::Normal [, int $italic = UI\Draw\Text\Font\Italic::Normal [, int $stretch = UI\Draw\Text\Font\Stretch::Normal]]])		
__construct(string $faultcode, string $faultstring [, string $faultactor = '' [, string $detail = '' [, string $faultname = '' [, string $headerfault = '']]]])		
__construct(string $fence, string $literal)		
__construct(string $file, float $width, float $height)		
__construct(string $file, float $width, float $height)		
__construct(string $file, float $width, float $height)		
__construct(string $file_name)		
__construct(string $filename [, int $flags = ''])		
__construct(string $filename [, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE [, string $encryption_key = '']])		
__construct(string $filename [, string $open_mode = "r" [, bool $use_include_path = '' [, resource $context = '']]])		
__construct(string $filename)		
__construct(string $filename)		
__construct(string $fname [, int $flags = '' [, string $alias = '' [, int $format = '']]])		
__construct(string $fname [, int $flags = '' [, string $alias = '']])		
__construct(string $function, string $parameter)		
__construct(string $host [, integer $port = '' [, integr $mode = '' [, integer $sock_type = '']]])		
__construct(string $host [, string $port = '' [, boolean $ssl = '']])		
__construct(string $interval_spec)		
__construct(string $ip, string $port)		
__construct(string $literal)		
__construct(string $locale)		
__construct(string $lua_script_file)		
__construct(string $match, array $route [, array $map = '' [, array $verify = '' [, string $reverse = '']]])		
__construct(string $match, array $route [, array $verify = ''])		
__construct(string $method, string $options)		
__construct(string $module_name, string $controller_name, string $action_name)		
__construct(string $name [, string $value = '' [, string $namespaceURI = '']])		
__construct(string $name [, string $value = ''])		
__construct(string $name [, string $value = ''])		
__construct(string $name)		
__construct(string $name)		
__construct(string $name)		
__construct(string $name, int $size)		
__construct(string $name, string $parent, array $interfaces)		
__construct(string $namespace, string $name [, mixed $data = '' [, bool $mustunderstand = '' [, string $actor = '']]])		
__construct(string $nsname)		
__construct(string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS])		
__construct(string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO])		
__construct(string $path [, string $startTime = '' [, int $step = '']])		
__construct(string $path)		
__construct(string $path)		
__construct(string $path)		
__construct(string $path, float $interval, callable $callback [, mixed $data = '' [, int $priority = '']])		
__construct(string $pathname)		
__construct(string $pattern [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO])		
__construct(string $pattern [, string $flags = ""])		
__construct(string $query)		
__construct(string $regex)		
__construct(string $rules [, string $areCompiled = ''])		
__construct(string $script)		
__construct(string $size)		
__construct(string $supervar_name)		
__construct(string $template_dir [, array $options = ''])		
__construct(string $text)		
__construct(string $text)		
__construct(string $text)		
__construct(string $text, UI\Draw\Text\Font $font, float $width)		
__construct(string $title)		
__construct(string $title, Size $size [, bool $menu = ''])		
__construct(string $url [, array $options = ''])		
__construct(string $url, string $title)		
__construct(string $url, string $title)		
__construct(string $value)		
__construct(string $value)		
__construct(string $value)		
__construct()		
__construct(string|integer $w [, int $wtimeout = '' [, bool $journal = '']])		
__construct([int $value = ''])		
__construct(string $filename [, string $mimetype = '' [, string $postname = '']])		
__construct(float $x0, float $y0, float $r0, float $x1, float $y1, float $r1)		
__construct([string $time = "now" [, DateTimeZone $timezone = '']])		
__construct([string $time = "now" [, DateTimeZone $timezone = '']])		
__construct(string $timezone)		
__construct(string $locale, int $datetype, int $timetype [, mixed $timezone = null [, mixed $calendar = null [, string $pattern = ""]]])		
__construct(string $locale, string $pattern)		
__construct(string $locale, int $style [, string $pattern = ''])		
__construct(int $size [, string $class = '' [, array $ctor = '']])		
__construct(string $locale, string $bundlename [, bool $fallback = ''])		
__construct([int $size = '' [, mixed $value = '']])		
__construct([mixed $...values = ''])		
__construct([mixed $...values = ''])		
__construct([mixed $values = ''])		
__construct([mixed $values = ''])		
__construct([mixed $values = ''])		
__construct([mixed $values = ''])		
__construct("mysqli.default_socket")		
__construct([array $params_array = ''])		
__construct([float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0]]]]]])		
__construct()		
__construct()		
__construct([mixed $search = '' [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE]]]])		
__construct(string $cache [, mixed $search = '' [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE]]]])		
__construct(string $name)		
__construct("stomp.default_broker_uri")		
__construct([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])		
__construct(string $index_names)		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct(resource $link)		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__destruct()		
__doRequest(string $request, string $location, string $action, int $version [, int $one_way = ''])		
__get(string $name)		
__get(string $name)		
__get(string $dbname)		
__get(string $fieldName)		
__get([string $name = ''])		
__get([string $name = ''])		
__get([string $name = ''])		
__get(string $name)		
__getCookies()		
__getFunctions()		
__getLastRequest()		
__getLastRequestHeaders()		
__getLastResponse()		
__getLastResponseHeaders()		
__getTypes()		
__halt_compiler()		
__invoke(\CommonMark\Node $root, callable $handler)		
__invoke(mixed $arg [, mixed $... = ''])		
__isset(string $fieldName)		
__isset(string $name)		
__isset(string $name)		
__isset(string $name)		
__isset(string $name)		
__set(string $fieldName, string $fieldValue)		
__set(string $name, mixed $value)		
__set(string $name, mixed $value)		
__set(string $name, string $value)		
__set(string $name, string $value)		
__setCookie(string $name [, string $value = ''])		
__setLocation([string $new_location = ''])		
__setSoapHeaders([mixed $soapheaders = ''])		
__set_state(array $array)		
__set_state(array $array)		
__set_state(array $props)		
__sleep()		
__sleep()		
__sleep()		
__sleep()		
__soapCall(string $function_name, array $arguments [, array $options = '' [, mixed $input_headers = '' [, array $output_headers = '']]])		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__toString()		
__unset(string $fieldName)		
__unset(string $name)		
__wakeup()		
__wakeup()		
__wakeup()		
__wakeup()		
__wakeup()		
__wakeup()		
__wakeup()		
__wakeup()		
__wakeup()		
abort(string $transaction_id [, array $headers = '', resource $link])		
abortTransaction()		
abs(mixed $number)		
accept()		
accept()		
accept()		
accept(mixed $socket)		
accept()		
accept(CommonMark\Interfaces\IVisitor $visitor)		
accept(CommonMark\Interfaces\IVisitor $visitor)		
acceptFromHttp(string $header)		
ack(mixed $msg [, array $headers = '', resource $link])		
acos(float $arg)		
acosh(float $arg)		
acquire()		
adaptiveBlurImage(float $radius, float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT])		
adaptiveResizeImage(int $columns, int $rows [, bool $bestfit = '' [, bool $legacy = '']])		
adaptiveSharpenImage(float $radius, float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT])		
adaptiveThresholdImage(int $width, int $height, int $offset)		
add(UI\Control $control)		
add(DateInterval $interval, DateTime $object)		
add(DateInterval $interval)		
add(string $name, string $value)		
add([float $timeout = ''])		
add(array $item)		
add(int $field, int $amount, IntlCalendar $cal)		
add(int $key [, int $value = ''])		
add(int $key)		
add(int $key, string $value)		
add(string $data)		
add(string $key, int $value)		
add(string $key, mixed $value [, int $expiration = ''])		
add(string $key, mixed $var [, int $flag = '' [, int $expire = '']])		
add(int $fd, callable $read_callback [, callable $write_callback = '' [, string $events = '']])		
add([integer $add_value = ''])		
add(object $instance)		
add(mixed $document)		
add(string $key, number $increment [, int $type = ''])		
add([mixed $...values = ''])		
add(mixed $entry, int $type)		
add(mixed $index, mixed $newval)		
add(object $object)		
add(string $key, mixed $increment [, string $type = ''])		
add(wkhtmltox\PDF\Object $object)		
addASound(SWFSound $sound, int $flags)		
addAction(SWFAction $action, int $flags)		
addAction(SWFAction $action, int $flags)		
addAll(SplObjectStorage $storage)		
addArchive(string $description)		
addAttribute(string $name [, string $value = '' [, string $namespace = '']])		
addAuth(string $scheme, string $cert [, callable $completion_cb = ''])		
addBigramPhraseField(string $field, string $boost [, string $slop = ''])		
addBoostQuery(string $field, string $value [, string $boost = ''])		
addBuffer(EventBuffer $buf)		
addByKey(string $server_key, string $key, mixed $value [, int $expiration = ''])		
addChars(string $char)		
addChars(string $chars)		
addChild(string $name [, string $value = '' [, string $namespace = '']])		
addChildDocument(SolrInputDocument $child)		
addChildDocuments(array $docs)		
addClassTask(string $className [, mixed $...ctorArgs = ''])		
addColor(int $red, int $green, int $blue [, int $a = ''])		
addColorStopRgb(float $offset, float $red, float $green, float $blue)		
addColorStopRgba(float $offset, float $red, float $green, float $blue, float $alpha)		
addCond(string $name, int $op, string $expr)		
addConfig(Yaf_Config_Abstract $config)		
addConstant(string $name, \Componere\Value $value)		
addDataSource(string $description)		
addDocument(SolrInputDocument $doc [, bool $overwrite = '' [, int $commitWithin = '']])		
addDocuments(array $docs [, bool $overwrite = '' [, int $commitWithin = '']])		
addEmptyDir(string $dirname)		
addEmptyDir(string $dirname)		
addEmptyDir(string $dirname)		
addEntry(float $ratio, int $red, int $green, int $blue [, int $alpha = 255])		
addExpandFilterQuery(string $fq)		
addExpandSortField(string $field [, string $order = ''])		
addExport(SWFCharacter $char, string $name)		
addFacetDateField(string $dateField)		
addFacetDateOther(string $value [, string $field_override = ''])		
addFacetField(string $field)		
addFacetQuery(string $facetQuery)		
addField(string $field)		
addField(string $fieldName, string $fieldValue [, float $fieldBoostValue = 0.0])		
addField(string $fieldName, string $fieldValue)		
addFile()		
addFile(string $filename [, string $localname = '' [, int $start = '' [, int $length = '']]])		
addFile(string $file [, string $localname = ''])		
addFile(string $file [, string $localname = ''])		
addFile(string $path, string $name [, string $type = '' [, string $filename = '' [, string $offset = '']]])		
addFileTask(string $fileName [, mixed $...globals = ''])		
addFill(int $red, int $green, int $blue [, int $alpha = 255, SWFBitmap $bitmap [, int $flags = '', SWFGradient $gradient]])		
addFilterQuery(string $fq)		
addFont(SWFFont $font)		
addFrame(KTaglib_ID3v2_Frame $frame)		
addFromString(string $localname, string $contents)		
addFromString(string $localname, string $contents)		
addFromString(string $localname, string $contents)		
addFunction(string $function_name, callable $function [, mixed $context = '' [, int $timeout = '']])		
addFunction(mixed $functions)		
addFunctionTask(callable $func [, mixed $...funcArgs = ''])		
addGlob()		
addGroupField(string $value)		
addGroupFunction(string $value)		
addGroupQuery(string $value)		
addGroupSortField(string $field [, int $order = ''])		
addHeader(string $key, string $value, int $type)		
addHighlightField(string $field)		
addImage(Imagick $source)		
addInterface(string $interface)		
addKernel(ImagickKernel $ImagickKernel)		
addMethod(string $name, \Componere\Method $method)		
addMltField(string $field)		
addMltQueryField(string $field, float $boost)		
addNameserverIp(string $ip)		
addNoiseImage(int $noise_type [, int $channel = Imagick::CHANNEL_DEFAULT])		
addOption(string $key, mixed $value)		
addOptions(int $option)		
addOptions(int $options)		
addOrReplaceOne(string $id, string $doc)		
addPage()		
addPageLabel(int $first_page, int $style, int $first_num [, string $prefix = ""])		
addParam(string $name, string $value)		
addPattern()		
addPhraseField(string $field, string $boost [, string $slop = ''])		
addProcess(swoole_process $process)		
addProperty(string $name, \Componere\Value $value)		
addPropertyToType(string $parent_type_namespace_uri, string $parent_type_name, string $property_name, string $type_namespace_uri, string $type_name [, array $options = ''])		
addQuery(string $query [, string $index = "*" [, string $comment = ""]])		
addQueryField(string $field [, string $boost = ''])		
addRectangle(UI\Point $point, UI\Size $size)		
addRequiredParameter(string $req_params)		
addRoute(string $name, Yaf_Route_Abstract $route)		
addSearch(string $domain)		
addServer([string $host = 127.0.0.1 [, int $port = 4730]])		
addServer([string $host = 127.0.0.1 [, int $port = 4730]])		
addServer(string $host [, int $port = 11211 [, bool $persistent = '' [, int $weight = '' [, int $timeout = '' [, int $retry_interval = '' [, bool $status = '' [, callable $failure_callback = '' [, int $timeoutms = '']]]]]]]])		
addServer(string $host, int $port [, int $weight = ''])		
addServerAlias(string $alias)		
addServers([string $servers = 127.0.0.1:4730])		
addServers(array $servers)		
addServers(string $servers)		
addShape(SWFShape $shape, int $flags)		
addSheet(string $sheetName)		
addSignal([float $timeout = ''])		
addSoapHeader(SoapHeader $object)		
addSortField(string $field [, int $order = SolrQuery::ORDER_DESC])		
addStatsFacet(string $field)		
addStatsField(string $field)		
addStop(float $position, int $color)		
addString(string $string)		
addString(string $string)		
addSubscriber(MongoDB\Driver\Monitoring\Subscriber $subscriber)		
addTask(string $function_name, string $workload [, mixed $context = '' [, string $unique = '']])		
addTaskBackground(string $function_name, string $workload [, mixed $context = '' [, string $unique = '']])		
addTaskHigh(string $function_name, string $workload [, mixed $context = '' [, string $unique = '']])		
addTaskHighBackground(string $function_name, string $workload [, mixed $context = '' [, string $unique = '']])		
addTaskLow(string $function_name, string $workload [, mixed $context = '' [, string $unique = '']])		
addTaskLowBackground(string $function_name, string $workload [, mixed $context = '' [, string $unique = '']])		
addTaskStatus(string $job_handle [, string $context = ''])		
addTimer([float $timeout = ''])		
addTrait(string $trait)		
addTrigramPhraseField(string $field, string $boost [, string $slop = ''])		
addType(string $type_namespace_uri, string $type_name [, array $options = ''])		
addTypes(string $xsd_file)		
addUTF8Chars(string $char)		
addUTF8String(string $text)		
addUnityKernel(float $scale)		
addUserField(string $field)		
addcslashes(string $str, string $charlist)		
addimage(Gmagick $source)		
addlistener(string $host, integer $port, string $socket_type)		
addnoiseimage(int $noise_type)		
addslashes(string $str)		
advance()		
advance()		
advance()		
advance()		
advanceClusterTime(array|object $clusterTime)		
advanceOperationTime(MongoDB\BSON\TimestampInterface $operationTime)		
affected_rows(resource $link)		
affected_rows(resource $stmt)		
affine(array $affine)		
affineTransformImage(ImagickDraw $matrix)		
after(integer $after_time_ms, callable $callback [, string $param = ''])		
after(IntlCalendar $other, IntlCalendar $cal)		
after(int $after_time_ms, callable $callback)		
again()		
again()		
aggregate(array $pipeline [, array $options = '' [, array $op = '' [, array $... = '']]])		
aggregateCursor(array $command [, array $options = ''])		
alarm(integer $interval_usec)		
alert(string $message [, array $content = '' [, string $logger = '']])		
align(resource $handle, int $style)		
align(int $alignement)		
allocate(int $capacity)		
allocate(int $capacity)		
allocate(int $capacity)		
allocate(int $capacity)		
allocate(int $capacity)		
allocate(int $capacity)		
allocate(int $capacity)		
allocate(int $capacity)		
allowsNull()		
allowsNull()		
analyzerCount(string $level [, string $log_path = '' [, string $key_word = '']])		
analyzerDetail(string $level [, string $log_path = '' [, string $key_word = '' [, int $start = '' [, int $limit = '' [, int $order = '']]]]])		
animateImages(string $x_server)		
annotate(float $x, float $y, string $text)		
annotateImage(ImagickDraw $draw_settings, float $x, float $y, float $angle, string $text)		
annotateimage(GmagickDraw $GmagickDraw, float $x, float $y, float $angle, string $text)		
annotation(float $x, float $y, string $text)		
apache_child_terminate()		
apache_get_modules()		
apache_get_version()		
apache_getenv(string $variable [, bool $walk_to_top = ''])		
apache_lookup_uri(string $filename)		
apache_note(string $note_name [, string $note_value = ""])		
apache_request_headers()		
apache_reset_timeout()		
apache_response_headers()		
apache_setenv(string $variable, string $value [, bool $walk_to_top = ''])		
apc_add(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = null]])		
apc_bin_dump([array $files = null [, array $user_vars = null]])		
apc_bin_dumpfile(array $files, array $user_vars, string $filename [, int $flags = '' [, resource $context = null]])		
apc_bin_load(string $data [, int $flags = ''])		
apc_bin_loadfile(string $filename [, resource $context = null [, int $flags = '']])		
apc_cache_info([string $cache_type = "" [, bool $limited = '']])		
apc_cas(string $key, int $old, int $new)		
apc_clear_cache([string $cache_type = ""])		
apc_compile_file(string $filename [, bool $atomic = ''])		
apc_dec(string $key [, int $step = 1 [, bool $success = '']])		
apc_define_constants(string $key, array $constants [, bool $case_sensitive = ''])		
apc_delete(string $key)		
apc_delete_file(mixed $keys)		
apc_exists(mixed $keys)		
apc_fetch(mixed $key [, bool $success = ''])		
apc_inc(string $key [, int $step = 1 [, bool $success = '']])		
apc_load_constants(string $key [, bool $case_sensitive = ''])		
apc_sma_info([bool $limited = ''])		
apc_store(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = null]])		
apcu_add(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = null]])		
apcu_cache_info([bool $limited = ''])		
apcu_cas(string $key, int $old, int $new)		
apcu_clear_cache()		
apcu_dec(string $key [, int $step = 1 [, bool $success = '']])		
apcu_delete(mixed $key)		
apcu_entry(string $key, callable $generator [, int $ttl = ''])		
apcu_exists(mixed $keys)		
apcu_fetch(mixed $key [, bool $success = ''])		
apcu_inc(string $key [, int $step = 1 [, bool $success = '']])		
apcu_sma_info([bool $limited = ''])		
apcu_store(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = null]])		
apd_breakpoint(int $debug_level)		
apd_callstack()		
apd_clunk(string $warning [, string $delimiter = ""])		
apd_continue(int $debug_level)		
apd_croak(string $warning [, string $delimiter = ""])		
apd_dump_function_table()		
apd_dump_persistent_resources()		
apd_dump_regular_resources()		
apd_echo(string $output)		
apd_get_active_symbols()		
apd_set_pprof_trace("apd.dumpdir")		
apd_set_session(int $debug_level)		
apd_set_session_trace("apd.dumpdir")		
apd_set_session_trace_socket(string $tcp_server, int $socket_type, int $port, int $debug_level)		
apiVersion()		
app()		
append(UI\Control $control)		
append(UI\Control $control, int $left, int $top, int $xspan, int $yspan, bool $hexpand, int $halign, bool $vexpand, int $valign)		
append(string $text)		
append(string $text)		
append(string $text)		
append(string $text)		
append(string $name [, string $type = UI\MenuItem::class])		
append(OCI-Lob $lob_from)		
append(mixed $value)		
append(string $key, string $value)		
append(Control $control [, bool $stretchy = ''])		
append(string $label, UI\Control $control [, bool $stretchy = ''])		
append(string $name, UI\Control $control)		
append(string $data)		
append(Iterator $iterator)		
append(mixed $value)		
append(mixed $value)		
appendAbout([string $type = UI\MenuItem::class])		
appendBody(string $content [, string $key = ''])		
appendByKey(string $server_key, string $key, string $value)		
appendCheck(string $name [, string $type = UI\MenuItem::class])		
appendChild(CommonMark\Node $child)		
appendChild(DOMNode $newnode)		
appendData(string $data)		
appendFrom(EventBuffer $buf, int $len)		
appendImages(bool $stack)		
appendPath(CairoPath $path, CairoContext $context)		
appendPreferences([string $type = UI\MenuItem::class])		
appendQuit([string $type = UI\MenuItem::class])		
appendSeparator()		
appendXML(string $data)		
apply()		
apply(callable $callback)		
apply(callable $callback)		
apply(callable $callback)		
apply(callable $callback)		
applyChanges(PDO $database_handle, SDODataObject $root_data_object)		
arc(float $sx, float $sy, float $ex, float $ey, float $sd, float $ed)		
arc(float $sx, float $sy, float $ex, float $ey, float $sd, float $ed)		
arc(float $x, float $y, float $ray, float $ang1, float $ang2)		
arc(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)		
arcNegative(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)		
arcTo(UI\Point $point, float $radius, float $angle, float $sweep, float $negative)		
areConfusable(string $str1, string $str2 [, string $error = ''])		
array([mixed $... = ''])		
arrayAppend(string $collection_field, string $expression_or_literal)		
arrayInsert(string $collection_field, string $expression_or_literal)		
arrayQuery(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
array_change_key_case(array $array [, int $case = CASE_LOWER])		
array_chunk(array $array, int $size [, bool $preserve_keys = ''])		
array_column(array $input, mixed $column_key [, mixed $index_key = ''])		
array_combine(array $keys, array $values)		
array_count_values(array $array)		
array_diff(array $array1, array $array2 [, array $... = ''])		
array_diff_assoc(array $array1, array $array2 [, array $... = ''])		
array_diff_key(array $array1, array $array2 [, array $... = ''])		
array_diff_uassoc(array $array1, array $array2 [, array $... = '', callable $key_compare_func])		
array_diff_ukey(array $array1, array $array2 [, array $... = '', callable $key_compare_func])		
array_fill(int $start_index, int $num, mixed $value)		
array_fill_keys(array $keys, mixed $value)		
array_filter(array $array [, callable $callback = '' [, int $flag = '']])		
array_flip(array $array)		
array_intersect(array $array1, array $array2 [, array $... = ''])		
array_intersect_assoc(array $array1, array $array2 [, array $... = ''])		
array_intersect_key(array $array1, array $array2 [, array $... = ''])		
array_intersect_uassoc(array $array1, array $array2 [, array $... = '', callable $key_compare_func])		
array_intersect_ukey(array $array1, array $array2 [, array $... = '', callable $key_compare_func])		
array_key_exists(mixed $key, array $array)		
array_key_first(array $array)		
array_key_last(array $array)		
array_keys(array $array [, mixed $search_value = '' [, bool $strict = '']])		
array_map(callable $callback, array $array1 [, array $... = ''])		
array_merge(array $array1 [, array $... = ''])		
array_merge_recursive(array $array1 [, array $... = ''])		
array_multisort(array $array1 [, mixed $array1_sort_order = SORT_ASC [, mixed $array1_sort_flags = SORT_REGULAR [, mixed $... = '']]])		
array_pad(array $array, int $size, mixed $value)		
array_pop(array $array)		
array_product(array $array)		
array_push(array $array [, mixed $... = ''])		
array_rand(array $array [, int $num = 1])		
array_reduce(array $array, callable $callback [, mixed $initial = ''])		
array_replace(array $array1 [, array $... = ''])		
array_replace_recursive(array $array1 [, array $... = ''])		
array_reverse(array $array [, bool $preserve_keys = ''])		
array_search(mixed $needle, array $haystack [, bool $strict = ''])		
array_shift(array $array)		
array_slice(array $array, int $offset [, int $length = '' [, bool $preserve_keys = '']])		
array_splice()		
array_sum(array $array)		
array_udiff(array $array1, array $array2 [, array $... = '', callable $value_compare_func])		
array_udiff_assoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func])		
array_udiff_uassoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func, callable $key_compare_func])		
array_uintersect(array $array1, array $array2 [, array $... = '', callable $value_compare_func])		
array_uintersect_assoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func])		
array_uintersect_uassoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func, callable $key_compare_func])		
array_unique(array $array [, int $sort_flags = SORT_STRING])		
array_unshift(array $array [, mixed $... = ''])		
array_values(array $array)		
array_walk(array $array, callable $callback [, mixed $userdata = ''])		
array_walk_recursive(array $array, callable $callback [, mixed $userdata = ''])		
arsort(array $array [, int $sort_flags = SORT_REGULAR])		
asXML([string $filename = ''])		
asin(float $arg)		
asinh(float $arg)		
asort(array $array [, int $sort_flags = SORT_REGULAR])		
asort(array $arr [, int $sort_flag = '', Collator $coll])		
asort()		
asort()		
assemble(array $info [, array $query = ''])		
assemble(array $info [, array $query = ''])		
assemble(array $info [, array $query = ''])		
assemble(array $info [, array $query = ''])		
assemble(array $info [, array $query = ''])		
assemble(array $info [, array $query = ''])		
assemble(array $info [, array $query = ''])		
assert(mixed $assertion [, string $description = '' [, Throwable $exception = '']])		
assert_options(int $what [, mixed $value = ''])		
assign(OCI-Collection $from)		
assign(array $parameter)		
assign(string $name [, mixed $value = ''])		
assign(string $name [, string $value = ''])		
assign(string $name, string $value)		
assignElem(int $index, mixed $value)		
assignRef(string $name, mixed $value)		
at(float $point, UI\Size $size)		
at()		
atan(float $arg)		
atan2(float $y, float $x)		
atanh(float $arg)		
attach(object $object [, mixed $data = ''])		
attach(SplObserver $observer)		
attachIterator(Iterator $iterator [, string $infos = ''])		
attr()		
attr_get(int $attr, mysqli_stmt $stmt)		
attr_set(int $attr, int $mode, mysqli_stmt $stmt)		
attreditable(array $parameter)		
attributes([string $ns = '' [, bool $is_prefix = '']])		
auth()		
authenticate(string $username, string $password)		
autoFilter(string $scope)		
autoLevelImage([int $channel = Imagick::CHANNEL_DEFAULT])		
autoRender([bool $flag = ''])		
auto_commit(resource $link, bool $mode)		
autocommit(bool $mode, mysqli $link)		
autoload()		
availableFonts()		
availableSurfaces()		
averageImages()		
avoidMethod(string $method)		
awaitData([bool $wait = ''])		
backend()		
backend()		
ban(string $vcl_regex)		
banUrl(string $vcl_regex)		
base64_decode(string $data [, bool $strict = ''])		
base64_encode(string $data)		
base_convert(string $number, int $frombase, int $tobase)		
basename(string $path [, string $suffix = ''])		
batchInsert()		
batchSize(int $batchSize)		
batchSize(int $batchSize)		
batchSize(int $batchSize)		
bbcode_add_element(resource $bbcode_container, string $tag_name, array $tag_rules)		
bbcode_add_smiley(resource $bbcode_container, string $smiley, string $replace_by)		
bbcode_create([array $bbcode_initial_tags = null])		
bbcode_destroy(resource $bbcode_container)		
bbcode_parse(resource $bbcode_container, string $to_parse)		
bbcode_set_arg_parser(resource $bbcode_container, resource $bbcode_arg_parser)		
bbcode_set_flags(resource $bbcode_container, int $flags [, int $mode = BBCODE_SET_FLAGS_SET])		
bcadd(string $left_operand, string $right_operand [, int $scale = ''])		
bccomp(string $left_operand, string $right_operand [, int $scale = ''])		
bcdiv(string $dividend, string $divisor [, int $scale = ''])		
bcmod(string $dividend, string $divisor [, int $scale = ''])		
bcmul(string $left_operand, string $right_operand [, int $scale = ''])		
bcompiler_load(string $filename)		
bcompiler_load_exe(string $filename)		
bcompiler_parse_class(string $class, string $callback)		
bcompiler_read(resource $filehandle)		
bcompiler_write_class(resource $filehandle, string $className [, string $extends = ''])		
bcompiler_write_constant(resource $filehandle, string $constantName)		
bcompiler_write_exe_footer(resource $filehandle, int $startpos)		
bcompiler_write_file(resource $filehandle, string $filename)		
bcompiler_write_footer(resource $filehandle)		
bcompiler_write_function(resource $filehandle, string $functionName)		
bcompiler_write_functions_from_file(resource $filehandle, string $fileName)		
bcompiler_write_header(resource $filehandle [, string $write_ver = ''])		
bcompiler_write_included_filename(resource $filehandle, string $filename)		
bcpow(string $base, string $exponent [, int $scale = ''])		
bcpowmod(string $base, string $exponent, string $modulus [, int $scale = ''])		
bcscale([int $scale = ''])		
bcsqrt(string $operand [, int $scale = ''])		
bcsub(string $left_operand, string $right_operand [, int $scale = ''])		
before(IntlCalendar $other, IntlCalendar $cal)		
begin(string $transaction_id [, array $headers = '', resource $link])		
beginChildren()		
beginChildren()		
beginIteration()		
beginIteration()		
beginLogging()		
beginText()		
beginTransaction()		
begin_transaction([int $flags = '' [, string $name = '', mysqli $link]])		
bezier(array $coordinate_array)		
bezier(array $coordinates)		
bezierTo(UI\Point $point, float $radius, float $angle, float $sweep, float $negative)		
bin2hex(string $str)		
bind(string $dsn [, bool $force = ''])		
bind(integer $fd, integer $uid)		
bind(array $placeholder_values)		
bind(array $placeholder_values)		
bind(array $placeholder_values)		
bind(array $placeholder_values)		
bind(string $param)		
bind(array $placeholder_values)		
bind(array $placeholder_values)		
bind(array $placeholder_values)		
bind(string $address, int $port)		
bindColumn(mixed $column, mixed $param [, int $type = '' [, int $maxlen = '' [, mixed $driverdata = '']]])		
bindParam(mixed $parameter, mixed $variable [, int $data_type = PDO::PARAM_STR [, int $length = '' [, mixed $driver_options = '']]])		
bindParam(mixed $sql_param, mixed $param [, int $type = ''])		
bindValue(mixed $parameter, mixed $value [, int $data_type = PDO::PARAM_STR])		
bindValue(mixed $sql_param, mixed $value [, int $type = ''])		
bind_param(resource $stmt, string $types, mixed $var1 [, mixed $... = '', array $var])		
bind_param(string $types, mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])		
bind_result(mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])		
bind_result(resource $stmt, mixed $var1 [, mixed $... = ''])		
bind_textdomain_codeset(string $domain, string $codeset)		
bindec(string $binary_string)		
bindtextdomain(string $domain, string $directory)		
blackThresholdImage(mixed $threshold)		
blenc_encrypt(string $plaintext, string $encodedfile [, string $encryption_key = ''])		
blueShiftImage([float $factor = 1.5])		
blurImage(float $radius, float $sigma [, int $channel = ''])		
blurimage(float $radius, float $sigma [, int $channel = ''])		
body()		
body(tidy $object)		
bold(resource $handle)		
boolval(mixed $var)		
bootstrap([Yaf_Bootstrap_Abstract $bootstrap = ''])		
borderImage(mixed $bordercolor, int $width, int $height)		
borderimage(GmagickPixel $color, int $width, int $height)		
bottom()		
brightnessContrastImage(float $brightness, float $contrast [, int $channel = Imagick::CHANNEL_DEFAULT])		
broadcast(int $condition)		
bsonSerialize()		
bsonSerialize()		
bsonSerialize()		
bsonSerialize()		
bsonUnserialize(array $data)		
bson_decode(string $bson)		
bson_encode(mixed $anything)		
buffer(string $string [, int $options = FILEINFO_NONE [, resource $context = '']])		
build()		
build()		
build()		
build()		
buildExcerpts(array $docs, string $index, string $words [, array $opts = ''])		
buildFromDirectory(string $base_dir [, string $regex = ''])		
buildFromDirectory(string $base_dir [, string $regex = ''])		
buildFromIterator(Iterator $iter [, string $base_directory = ''])		
buildFromIterator(Iterator $iter [, string $base_directory = ''])		
buildKeywords(string $query, string $index, bool $hits)		
busyTimeout(int $msecs)		
busyTimeout(resource $dbhandle, int $milliseconds)		
byCount(int $nth_index)		
bzclose(resource $bz)		
bzcompress(string $source [, int $blocksize = 4 [, int $workfactor = '']])		
bzdecompress(string $source [, int $small = ''])		
bzerrno(resource $bz)		
bzerror(resource $bz)		
bzerrstr(resource $bz)		
bzflush(resource $bz)		
bzopen(mixed $file, string $mode)		
bzread(resource $bz [, int $length = 1024])		
bzwrite(resource $bz, string $data [, int $length = ''])		
cairo_append_path(CairoPath $path, CairoContext $context)		
cairo_arc(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)		
cairo_arc_negative(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)		
cairo_available_fonts()		
cairo_available_surfaces()		
cairo_clip(CairoContext $context)		
cairo_clip_extents(CairoContext $context)		
cairo_clip_preserve(CairoContext $context)		
cairo_clip_rectangle_list(CairoContext $context)		
cairo_close_path(CairoContext $context)		
cairo_copy_page(CairoContext $context)		
cairo_copy_path(CairoContext $context)		
cairo_copy_path_flat(CairoContext $context)		
cairo_create(CairoSurface $surface)		
cairo_curve_to(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3, CairoContext $context)		
cairo_device_to_user(float $x, float $y, CairoContext $context)		
cairo_device_to_user_distance(float $x, float $y, CairoContext $context)		
cairo_fill(CairoContext $context)		
cairo_fill_extents(CairoContext $context)		
cairo_fill_preserve(CairoContext $context)		
cairo_font_extents(CairoContext $context)		
cairo_font_face_get_type(CairoFontFace $fontface)		
cairo_font_face_status(CairoFontFace $fontface)		
cairo_font_options_create()		
cairo_font_options_equal(CairoFontOptions $options, CairoFontOptions $other)		
cairo_font_options_get_antialias(CairoFontOptions $options)		
cairo_font_options_get_hint_metrics(CairoFontOptions $options)		
cairo_font_options_get_hint_style(CairoFontOptions $options)		
cairo_font_options_get_subpixel_order(CairoFontOptions $options)		
cairo_font_options_hash(CairoFontOptions $options)		
cairo_font_options_merge(CairoFontOptions $options, CairoFontOptions $other)		
cairo_font_options_set_antialias(CairoFontOptions $options, int $antialias)		
cairo_font_options_set_hint_metrics(CairoFontOptions $options, int $hint_metrics)		
cairo_font_options_set_hint_style(CairoFontOptions $options, int $hint_style)		
cairo_font_options_set_subpixel_order(CairoFontOptions $options, int $subpixel_order)		
cairo_font_options_status(CairoFontOptions $options)		
cairo_format_stride_for_width(int $format, int $width)		
cairo_get_antialias(CairoContext $context)		
cairo_get_current_point(CairoContext $context)		
cairo_get_dash(CairoContext $context)		
cairo_get_dash_count(CairoContext $context)		
cairo_get_fill_rule(CairoContext $context)		
cairo_get_font_face(CairoContext $context)		
cairo_get_font_matrix(CairoContext $context)		
cairo_get_font_options(CairoContext $context)		
cairo_get_group_target(CairoContext $context)		
cairo_get_line_cap(CairoContext $context)		
cairo_get_line_join(CairoContext $context)		
cairo_get_line_width(CairoContext $context)		
cairo_get_matrix(CairoContext $context)		
cairo_get_miter_limit(CairoContext $context)		
cairo_get_operator(CairoContext $context)		
cairo_get_scaled_font(CairoContext $context)		
cairo_get_source(CairoContext $context)		
cairo_get_target(CairoContext $context)		
cairo_get_tolerance(CairoContext $context)		
cairo_glyph_path(array $glyphs, CairoContext $context)		
cairo_has_current_point(CairoContext $context)		
cairo_identity_matrix(CairoContext $context)		
cairo_image_surface_create(int $format, int $width, int $height)		
cairo_image_surface_create_for_data(string $data, int $format, int $width, int $height [, int $stride = -1])		
cairo_image_surface_create_from_png(mixed $file)		
cairo_image_surface_get_data(CairoImageSurface $surface)		
cairo_image_surface_get_format(CairoImageSurface $surface)		
cairo_image_surface_get_height(CairoImageSurface $surface)		
cairo_image_surface_get_stride(CairoImageSurface $surface)		
cairo_image_surface_get_width(CairoImageSurface $surface)		
cairo_in_fill(float $x, float $y, CairoContext $context)		
cairo_in_stroke(float $x, float $y, CairoContext $context)		
cairo_line_to(float $x, float $y, CairoContext $context)		
cairo_mask(CairoPattern $pattern, CairoContext $context)		
cairo_mask_surface(CairoSurface $surface [, float $x = '' [, float $y = '', CairoContext $context]])		
cairo_matrix_create_scale()		
cairo_matrix_create_translate()		
cairo_matrix_init([float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0]]]]]])		
cairo_matrix_init_identity()		
cairo_matrix_init_rotate(float $radians)		
cairo_matrix_init_scale(float $sx, float $sy)		
cairo_matrix_init_translate(float $tx, float $ty)		
cairo_matrix_invert(CairoMatrix $matrix)		
cairo_matrix_multiply(CairoMatrix $matrix1, CairoMatrix $matrix2)		
cairo_matrix_rotate(string $radians, CairoContext $context)		
cairo_matrix_scale(float $sx, float $sy, CairoContext $context)		
cairo_matrix_transform_distance(CairoMatrix $matrix, float $dx, float $dy)		
cairo_matrix_transform_point(CairoMatrix $matrix, float $dx, float $dy)		
cairo_matrix_translate(CairoMatrix $matrix, float $tx, float $ty)		
cairo_move_to(float $x, float $y, CairoContext $context)		
cairo_new_path(CairoContext $context)		
cairo_new_sub_path(CairoContext $context)		
cairo_paint(CairoContext $context)		
cairo_paint_with_alpha(float $alpha, CairoContext $context)		
cairo_path_extents(CairoContext $context)		
cairo_pattern_add_color_stop_rgb(CairoGradientPattern $pattern, float $offset, float $red, float $green, float $blue)		
cairo_pattern_add_color_stop_rgba(CairoGradientPattern $pattern, float $offset, float $red, float $green, float $blue, float $alpha)		
cairo_pattern_create_for_surface(CairoSurface $surface)		
cairo_pattern_create_linear(float $x0, float $y0, float $x1, float $y1)		
cairo_pattern_create_radial(float $x0, float $y0, float $r0, float $x1, float $y1, float $r1)		
cairo_pattern_create_rgb(float $red, float $green, float $blue)		
cairo_pattern_create_rgba(float $red, float $green, float $blue, float $alpha)		
cairo_pattern_get_color_stop_count(CairoGradientPattern $pattern)		
cairo_pattern_get_color_stop_rgba(CairoGradientPattern $pattern, int $index)		
cairo_pattern_get_extend(string $pattern)		
cairo_pattern_get_filter(CairoSurfacePattern $pattern)		
cairo_pattern_get_linear_points(CairoLinearGradient $pattern)		
cairo_pattern_get_matrix(CairoPattern $pattern)		
cairo_pattern_get_radial_circles(CairoRadialGradient $pattern)		
cairo_pattern_get_rgba(CairoSolidPattern $pattern)		
cairo_pattern_get_surface(CairoSurfacePattern $pattern)		
cairo_pattern_get_type(CairoPattern $pattern)		
cairo_pattern_set_extend(string $pattern, string $extend)		
cairo_pattern_set_filter(CairoSurfacePattern $pattern, int $filter)		
cairo_pattern_set_matrix(CairoPattern $pattern, CairoMatrix $matrix)		
cairo_pattern_status(CairoPattern $pattern)		
cairo_pdf_surface_create(string $file, float $width, float $height)		
cairo_pdf_surface_set_size(CairoPdfSurface $surface, float $width, float $height)		
cairo_pop_group(CairoContext $context)		
cairo_pop_group_to_source(CairoContext $context)		
cairo_ps_get_levels()		
cairo_ps_level_to_string(int $level)		
cairo_ps_surface_create(string $file, float $width, float $height)		
cairo_ps_surface_dsc_begin_page_setup(CairoPsSurface $surface)		
cairo_ps_surface_dsc_begin_setup(CairoPsSurface $surface)		
cairo_ps_surface_dsc_comment(CairoPsSurface $surface, string $comment)		
cairo_ps_surface_get_eps(CairoPsSurface $surface)		
cairo_ps_surface_restrict_to_level(CairoPsSurface $surface, int $level)		
cairo_ps_surface_set_eps(CairoPsSurface $surface, bool $level)		
cairo_ps_surface_set_size(CairoPsSurface $surface, float $width, float $height)		
cairo_push_group(CairoContext $context)		
cairo_push_group_with_content(int $content, CairoContext $context)		
cairo_rectangle(float $x, float $y, float $width, float $height, CairoContext $context)		
cairo_rel_curve_to(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3, CairoContext $context)		
cairo_rel_line_to(float $x, float $y, CairoContext $context)		
cairo_rel_move_to(float $x, float $y, CairoContext $context)		
cairo_reset_clip(CairoContext $context)		
cairo_restore(CairoContext $context)		
cairo_rotate(float $angle, CairoContext $context)		
cairo_save(CairoContext $context)		
cairo_scale(float $x, float $y, CairoContext $context)		
cairo_scaled_font_create(CairoFontFace $fontface, CairoMatrix $matrix, CairoMatrix $ctm, CairoFontOptions $fontoptions)		
cairo_scaled_font_extents(CairoScaledFont $scaledfont)		
cairo_scaled_font_get_ctm(CairoScaledFont $scaledfont)		
cairo_scaled_font_get_font_face(CairoScaledFont $scaledfont)		
cairo_scaled_font_get_font_matrix(CairoScaledFont $scaledfont)		
cairo_scaled_font_get_font_options(CairoScaledFont $scaledfont)		
cairo_scaled_font_get_scale_matrix(CairoScaledFont $scaledfont)		
cairo_scaled_font_get_type(CairoScaledFont $scaledfont)		
cairo_scaled_font_glyph_extents(CairoScaledFont $scaledfont, array $glyphs)		
cairo_scaled_font_status(CairoScaledFont $scaledfont)		
cairo_scaled_font_text_extents(CairoScaledFont $scaledfont, string $text)		
cairo_select_font_face(string $family [, int $slant = '' [, int $weight = '', CairoContext $context]])		
cairo_set_antialias([int $antialias = '', CairoContext $context])		
cairo_set_dash(array $dashes [, float $offset = '', CairoContext $context])		
cairo_set_fill_rule(int $setting, CairoContext $context)		
cairo_set_font_face(CairoFontFace $fontface, CairoContext $context)		
cairo_set_font_matrix(CairoMatrix $matrix, CairoContext $context)		
cairo_set_font_options(CairoFontOptions $fontoptions, CairoContext $context)		
cairo_set_font_size(float $size, CairoContext $context)		
cairo_set_line_cap(int $setting, CairoContext $context)		
cairo_set_line_join(int $setting, CairoContext $context)		
cairo_set_line_width(float $width, CairoContext $context)		
cairo_set_matrix(CairoMatrix $matrix, CairoContext $context)		
cairo_set_miter_limit(float $limit, CairoContext $context)		
cairo_set_operator(int $setting, CairoContext $context)		
cairo_set_scaled_font(CairoScaledFont $scaledfont, CairoContext $context)		
cairo_set_source(float $red, float $green, float $blue, float $alpha, CairoContext $context)		
cairo_set_source_surface(CairoSurface $surface [, float $x = '' [, float $y = '', CairoContext $context]])		
cairo_set_tolerance(float $tolerance, CairoContext $context)		
cairo_show_page(CairoContext $context)		
cairo_show_text(string $text, CairoContext $context)		
cairo_status(CairoContext $context)		
cairo_status_to_string(int $status)		
cairo_stroke(CairoContext $context)		
cairo_stroke_extents(CairoContext $context)		
cairo_stroke_preserve(CairoContext $context)		
cairo_surface_copy_page(CairoSurface $surface)		
cairo_surface_create_similar(CairoSurface $surface, int $content, float $width, float $height)		
cairo_surface_finish(CairoSurface $surface)		
cairo_surface_flush(CairoSurface $surface)		
cairo_surface_get_content(CairoSurface $surface)		
cairo_surface_get_device_offset(CairoSurface $surface)		
cairo_surface_get_font_options(CairoSurface $surface)		
cairo_surface_get_type(CairoSurface $surface)		
cairo_surface_mark_dirty(CairoSurface $surface)		
cairo_surface_mark_dirty_rectangle(CairoSurface $surface, float $x, float $y, float $width, float $height)		
cairo_surface_set_device_offset(CairoSurface $surface, float $x, float $y)		
cairo_surface_set_fallback_resolution(CairoSurface $surface, float $x, float $y)		
cairo_surface_show_page(CairoSurface $surface)		
cairo_surface_status(CairoSurface $surface)		
cairo_surface_write_to_png(CairoSurface $surface, resource $stream)		
cairo_svg_surface_create(string $file, float $width, float $height)		
cairo_svg_surface_get_versions()		
cairo_svg_surface_restrict_to_version(CairoSvgSurface $surface, int $version)		
cairo_svg_version_to_string(int $version)		
cairo_text_extents(string $text, CairoContext $context)		
cairo_text_path(string $string, CairoContext $context, string $text)		
cairo_transform(CairoMatrix $matrix, CairoContext $context)		
cairo_translate(float $tx, float $ty, CairoContext $context, float $x, float $y)		
cairo_user_to_device(float $x, float $y, CairoContext $context)		
cairo_user_to_device_distance(float $x, float $y, CairoContext $context)		
cairo_version()		
cairo_version_string()		
cal_days_in_month(int $calendar, int $month, int $year)		
cal_from_jd(int $jd, int $calendar)		
cal_info([int $calendar = -1])		
cal_to_jd(int $calendar, int $month, int $day, int $year)		
call(string $uri, string $method [, array $parameters = '' [, callable $callback = '' [, callable $error_callback = '' [, array $options = '']]]])		
call(callable $lua_func [, array $args = '' [, int $use_self = '']])		
callGetChildren()		
callGetChildren()		
callHasChildren()		
callHasChildren()		
callTimestampNonceHandler()		
call_user_func(callable $callback [, mixed $parameter = '' [, mixed $... = '']])		
call_user_func(callable $callback [, mixed $parameter = '' [, mixed $... = '']])		
call_user_func_array(callable $callback, array $param_arr)		
call_user_func_array(callable $callback, array $param_array)		
call_user_method(string $method_name, object $obj [, mixed $parameter = '' [, mixed $... = '']])		
call_user_method_array(string $method_name, object $obj, array $params)		
callconsumerHandler()		
callout(int $id, callable $callback)		
callout(int $id, callable $callback)		
calltokenHandler()		
canBePassedByValue()		
canCompress([int $type = ''])		
canWrite()		
cancel()		
canonicalize(string $locale)		
capacity()		
capacity()		
capacity()		
capacity()		
capacity()		
capacity()		
capacity()		
capacity()		
cas(float $cas_token, string $key, mixed $value [, int $expiration = ''])		
casByKey(float $cas_token, string $server_key, string $key, mixed $value [, int $expiration = ''])		
cast( $,  $object)		
cast_by_ref( $,  $object)		
catchException([bool $flag = ''])		
ceil(float $value)		
changeUser(mysqlnd_connection $connection, string $user, string $password, string $database, bool $silent, int $passwd_len)		
change_user(resource $link, string $user, string $password, string $database)		
change_user(string $user, string $password, string $database, mysqli $link)		
changes()		
changes(resource $dbhandle)		
charAge(mixed $codepoint)		
charDigitValue(mixed $codepoint)		
charDirection(mixed $codepoint)		
charFromName(string $characterName [, int $nameChoice = ''])		
charMirror(mixed $codepoint)		
charName(mixed $codepoint [, int $nameChoice = ''])		
charType(mixed $codepoint)		
character_set_name(mysqli $link)		
character_set_name(resource $link)		
charcoalImage(float $radius, float $sigma)		
charcoalimage(float $radius, float $sigma)		
charsetName(mysqlnd_connection $connection)		
chdb(string $pathname)		
chdb_create(string $pathname, array $data)		
chdir(string $directory)		
check(string $callback [, string $data = '' [, string $priority = '']])		
checkOAuthRequest([string $uri = '' [, string $method = '']])		
checkProbabilityModel()		
checkdate(int $month, int $day, int $year)		
checkdnsrr(string $host [, string $type = "MX"])		
checkin(array $parameter)		
checkout(array $parameter)		
chgrp(string $filename, mixed $group)		
child(string $pid, string $trace, string $callback [, string $data = '' [, string $priority = '']])		
children([string $ns = '' [, bool $is_prefix = '']])		
children(array $parameter)		
chmod(string $filename, int $mode)		
chmod(int $permissions)		
chop()		
chopImage(int $width, int $height, int $x, int $y)		
chopimage(int $width, int $height, int $x, int $y)		
chown(string $filename, mixed $user)		
chr(int $bytevalue)		
chr(mixed $codepoint)		
chroot(string $directory)		
chunk(int $size, bool $preserve)		
chunk_split(string $body [, int $chunklen = 76 [, string $end = "\r\n"]])		
circle(float $ox, float $oy, float $px, float $py)		
circle(float $x, float $y, float $ray)		
clampImage([int $channel = Imagick::CHANNEL_DEFAULT])		
class_alias(string $original, string $alias [, bool $autoload = ''])		
class_exists(string $class_name [, bool $autoload = ''])		
class_implements(mixed $class [, bool $autoload = ''])		
class_parents(mixed $class [, bool $autoload = ''])		
class_uses(mixed $class [, bool $autoload = ''])		
classkit_import(string $filename)		
classkit_method_add(string $classname, string $methodname, string $args, string $code [, int $flags = CLASSKIT_ACC_PUBLIC])		
classkit_method_copy(string $dClass, string $dMethod, string $sClass [, string $sMethod = ''])		
classkit_method_redefine(string $classname, string $methodname, string $args, string $code [, int $flags = CLASSKIT_ACC_PUBLIC])		
classkit_method_remove(string $classname, string $methodname)		
classkit_method_rename(string $classname, string $methodname, string $newname)		
cleanRepair(tidy $object)		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear([int $field = null, IntlCalendar $cal])		
clear([string $name = ''])		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear()		
clear(integer $timer_id)		
clearBody([string $key = ''])		
clearCallbacks()		
clearHeaders()		
clearHeaders()		
clearLastError()		
clearLocalNamespace()		
clearPanic()		
clearSearch()		
clearTimer(integer $timer_id)		
clearstatcache([bool $clear_realpath_cache = '' [, string $filename = '']])		
cli_get_process_title()		
cli_set_process_title(string $title)		
cli_wait()		
clip(UI\Draw\Path $path)		
clip(CairoContext $context)		
clipExtents(CairoContext $context)		
clipImage()		
clipImagePath(string $pathname, string $inside)		
clipPathImage(string $pathname, bool $inside)		
clipPreserve(CairoContext $context)		
clipRectangleList(CairoContext $context)		
clone()		
clone()		
clone()		
clone()		
cloneNode([bool $deep = ''])		
close()		
close()		
close()		
close()		
close()		
close()		
close()		
close()		
close()		
close()		
close()		
close()		
close()		
close()		
close(RarArchive $rarfile)		
close([bool $force = ''])		
close([boolean|string $connection = ''])		
close(mysqli $link)		
close(mysqli_stmt $stmt)		
close(mysqlnd_connection $connection, int $close_type)		
close(resource $link)		
close(resource $stmt)		
close(integer $fd [, boolean $reset = ''])		
close()		
close()		
close()		
close()		
close()		
close([resource $dir_handle = ''])		
close(mysqli_result $result)		
closeConnection()		
closeCursor()		
closeFigure()		
closePath()		
closePath(CairoContext $context)		
close_long_data()		
close_long_data(resource $stmt, int $param_nr)		
closedir([resource $dir_handle = ''])		
closelog()		
clutImage(Imagick $lookup_table [, int $channel = Imagick::CHANNEL_DEFAULT])		
cmpset(integer $cmp_value, integer $new_value)		
coalesceImages()		
collapse(SolrCollapseFunction $collapseFunction)		
collator_asort(array $arr [, int $sort_flag = '', Collator $coll])		
collator_compare(string $str1, string $str2, Collator $coll)		
collator_create(string $locale)		
collator_get_attribute(int $attr, Collator $coll)		
collator_get_error_code(Collator $coll)		
collator_get_error_message(Collator $coll)		
collator_get_locale(int $type, Collator $coll)		
collator_get_sort_key(string $str, Collator $coll)		
collator_get_strength(Collator $coll)		
collator_set_attribute(int $attr, int $val, Collator $coll)		
collator_set_strength(int $strength, Collator $coll)		
collator_sort(array $arr [, int $sort_flag = '', Collator $coll])		
collator_sort_with_sort_keys(array $arr, Collator $coll)		
collect([Callable $collector = ''])		
collect([Callable $collector = ''])		
color(float $x, float $y, int $paintMethod)		
colorFloodfillImage(mixed $fill, float $fuzz, mixed $bordercolor, int $x, int $y)		
colorMatrixImage(array $color_matrix)		
colorizeImage(mixed $colorize, mixed $opacity [, bool $legacy = ''])		
column(string $name, string $type [, integer $size = ''])		
column(resource $result, mixed $index_or_name [, bool $decode_binary = ''])		
column(resource $result, mixed $index_or_name [, bool $decode_binary = ''])		
columnCount()		
columnName(int $column_number)		
columnType(int $column_number)		
com_create_guid()		
com_event_sink(variant $comobject, object $sinkobject [, mixed $sinkinterface = ''])		
com_get_active_object(string $progid [, int $code_page = ''])		
com_load_typelib(string $typelib_name [, bool $case_insensitive = ''])		
com_message_pump([int $timeoutms = ''])		
com_print_typeinfo(object $comobject [, string $dispinterface = '' [, bool $wantsink = '']])		
combineImages(int $channelType)		
command()		
commandFailed(MongoDB\Driver\Monitoring\CommandFailedEvent $event)		
commandStarted(MongoDB\Driver\Monitoring\CommandStartedEvent $event)		
commandSucceeded(MongoDB\Driver\Monitoring\CommandSucceededEvent $event)		
comment(string $comment)		
commentImage(string $comment)		
commentimage(string $comment)		
commit()		
commit([bool $softCommit = '' [, bool $waitSearcher = '' [, bool $expungeDeletes = '']]])		
commit()		
commit()		
commit([int $flags = '' [, string $name = '', mysqli $link]])		
commit(resource $link)		
commit(string $transaction_id [, array $headers = '', resource $link])		
commitTransaction()		
compact(mixed $varname1 [, mixed $... = ''])		
compare(mixed $priority1, mixed $priority2)		
compare(mixed $value1, mixed $value2)		
compare(mixed $value1, mixed $value2)		
compare(mixed $value1, mixed $value2)		
compare(string $str1, string $str2, Collator $coll)		
compareImageChannels(Imagick $image, int $channelType, int $metricType)		
compareImageLayers(int $method)		
compareImages(Imagick $compare, int $metric)		
complete(string $result)		
composeLocale(array $subtags)		
composite(int $compose, float $x, float $y, float $width, float $height, Imagick $compositeWand)		
compositeImage(Imagick $composite_object, int $composite, int $x, int $y [, int $channel = Imagick::CHANNEL_DEFAULT])		
compositeimage(Gmagick $source, int $COMPOSE, int $x, int $y)		
compress(int $compression)		
compress(int $compression [, string $extension = ''])		
compress(int $compression [, string $extension = ''])		
compressAllFilesBZIP2()		
compressAllFilesGZ()		
compressFiles(int $compression)		
compressFiles(int $compression)		
concat(float $a, float $b, float $c, float $d, float $x, float $y)		
confirm(integer $fd)		
connect()		
connect()		
connect(string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options = '']])		
connect(string $dsn [, bool $force = ''])		
connect()		
connect()		
connect()		
connect(mysqlnd_connection $connection, string $host, string $use", string $password, string $database, int $port, string $socket, int $mysql_flags)		
connect(string $addr)		
connect(string $dsn)		
connect(string $host [, int $port = '' [, int $timeout = '']])		
connect(string $host [, integer $port = '' [, integer $timeout = '' [, integer $flag = '']]])		
connect(string $protocol [, array $properties = ''])		
connect("mysqli.default_socket")		
connect(array $server_config, callable $callback)		
connect(string $host [, callable $watcher_cb = '' [, int $recv_timeout = 10000]])		
connectHost(EventDnsBase $dns_base, string $hostname, int $port [, int $family = EventUtil::AF_UNSPEC])		
connectUri(string $uri)		
connectUtil()		
connection_aborted()		
connection_info(integer $fd [, integer $reactor_id = ''])		
connection_list(integer $start_fd [, integer $pagesize = ''])		
connection_status()		
constMemory(string $fileName [, string $sheetName = ''])		
constant(string $name)		
consume(string $data)		
consume(string $data)		
consume(string $data, Parle\Lexer $lexer)		
consume(string $data, Parle\RLexer $rlexer)		
consumerHandler(callable $callback_function)		
contains([mixed $...values = ''])		
contains([mixed $...values = ''])		
contains([mixed $...values = ''])		
contains([mixed $...values = ''])		
contains(object $object)		
containsIterator(Iterator $iterator)		
content(array $parameter)		
context()		
contrastImage(bool $sharpen)		
contrastStretchImage(float $black_point, float $white_point [, int $channel = Imagick::CHANNEL_DEFAULT])		
convert()		
convert()		
convert(string $str [, bool $reverse = ''])		
convertToData([int $format = '' [, int $compression = '' [, string $extension = '']]])		
convertToData([int $format = 9021976 [, int $compression = 9021976 [, string $extension = '']]])		
convertToExecutable([int $format = '' [, int $compression = '' [, string $extension = '']]])		
convertToExecutable([int $format = 9021976 [, int $compression = 9021976 [, string $extension = '']]])		
convert_cyr_string(string $str, string $from, string $to)		
convert_uudecode(string $data)		
convert_uuencode(string $data)		
convolveImage(array $kernel [, int $channel = Imagick::CHANNEL_DEFAULT])		
cookie(string $name [, string $value = '' [, string $expires = '' [, string $path = '' [, string $domain = '' [, string $secure = '' [, string $httponly = '']]]]]])		
copy(string $source, string $dest [, resource $context = ''])		
copy()		
copy()		
copy()		
copy()		
copy()		
copy()		
copy()		
copy()		
copy()		
copy(string $path)		
copy(string $oldfile, string $newfile)		
copy(string $oldfile, string $newfile)		
copy(string $source_file, string $destination_file)		
copy(array $parameter)		
copyPage(CairoContext $context)		
copyPage(CairoContext $context)		
copyPath(CairoContext $context)		
copyPathFlat(CairoContext $context)		
copyout(string $data, int $max_bytes)		
cos(float $arg)		
cosh(float $arg)		
count(mixed $array_or_countable [, int $mode = COUNT_NORMAL])		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
count(ResourceBundle $r)		
count()		
count([bool $foundOnly = ''])		
count([int $index_start = '' [, int $index_end = -1]])		
count([int $mode = ''])		
count(array $parameter)		
count()		
count()		
count()		
count()		
count()		
count()		
count()		
countEquivalentIDs(string $zoneId)		
countIterators()		
countNameservers()		
count_chars(string $string [, int $mode = ''])		
country(int $country)		
crack_check(resource $dictionary, string $password, string $username, string $gecos)		
crack_closedict([resource $dictionary = ''])		
crack_getlastmessage()		
crack_opendict(string $dictionary)		
crc32(string $str)		
create(string $locale)		
create()		
create(string $locale, int $datetype, int $timetype [, mixed $timezone = null [, mixed $calendar = null [, string $pattern = ""]]])		
create(string $locale, string $pattern)		
create(string $locale, int $style [, string $pattern = ''])		
create(string $locale, string $bundlename [, bool $fallback = ''])		
create()		
create([mixed $xsd_file = '' [, string $key = '']])		
create(string $id [, int $direction = ''])		
create(string $collection, mixed $id [, string $database = ''])		
create()		
create([bool $lock = ''])		
create(string $path, string $value, array $acls [, int $flags = ''])		
create()		
create(string $type_namespace_uri, string $type_name)		
createAggregate(string $name, mixed $step_callback, mixed $final_callback [, int $argument_count = -1])		
createAggregate(resource $dbhandle, string $function_name, callable $step_func, callable $finalize_func [, int $num_args = -1])		
createAttribute(string $name)		
createAttributeNS(string $namespaceURI, string $qualifiedName)		
createCDATASection(string $data)		
createCharacterInstance([string $locale = ''])		
createCodePointInstance()		
createCollation(string $name, callable $callback)		
createCollection(string $name [, array $options = ''])		
createCollection(string $name)		
createComment(string $data)		
createDBRef(mixed $document_or_id)		
createDBRef(string $collection, mixed $document_or_id)		
createDataObject(mixed $identifier)		
createDataObject(string $namespace_uri, string $type_name)		
createDataObject(string $type_namespace_uri, string $type_name)		
createDataObject(string $type_namespace_uri, string $type_name)		
createDataObject(string $type_namespace_uri, string $type_name)		
createDefault()		
createDefaultStub([string $indexfile = '' [, string $webindexfile = '']])		
createDestination()		
createDocument([string $namespaceURI = '' [, string $qualifiedName = '' [, DOMDocumentType $doctype = '']]])		
createDocument(string $document_element_name, string $document_element_namespace_URI [, SDO_DataObject $dataobject = ''])		
createDocumentFragment()		
createDocumentType([string $qualifiedName = '' [, string $publicId = '' [, string $systemId = '']]])		
createElement(string $name [, string $value = ''])		
createElementNS(string $namespaceURI, string $qualifiedName [, string $value = ''])		
createEntityReference(string $name)		
createEnumeration([mixed $countryOrRawOffset = ''])		
createForData(string $data, int $format, int $width, int $height)		
createFromDateString(string $time)		
createFromDocument(MongoClient $connection, string $hash, array $document)		
createFromFormat(string $format, string $time [, DateTimeZone $timezone = ''])		
createFromFormat(string $format, string $time [, DateTimeZone $timezone = ''])		
createFromMutable(DateTime $datetime)		
createFromPng(string $file)		
createFromRules(string $rules [, int $direction = '', string $id])		
createFunction(string $name, mixed $callback [, int $argument_count = -1 [, int $flags = '']])		
createFunction(resource $dbhandle, string $function_name, callable $callback [, int $num_args = -1])		
createIndex()		
createIndex(string $index_name, string $index_desc_json)		
createInstance([mixed $timeZone = null [, string $locale = ""]])		
createInverse()		
createLineInstance([string $locale = ''])		
createLinkAnnotation(array $rectangle, object $destination)		
createOutline(string $title [, object $parent_outline = '' [, object $encoder = '']])		
createPair(EventBase $base [, int $options = ''])		
createProcessingInstruction(string $target [, string $data = ''])		
createRootDataObject()		
createSchema(string $schema_name)		
createSentenceInstance([string $locale = ''])		
createSimilar(CairoSurface $other, int $content, string $width, string $height)		
createStopped(mixed $fd, int $events, callable $callback [, mixed $data = '' [, int $priority = '']])		
createStopped(float $offset, float $interval, callable $reschedule_cb, callable $callback [, mixed $data = '' [, int $priority = '']])		
createStopped(callable $callback [, mixed $data = '' [, int $priority = '']])		
createStopped(int $signum, callable $callback [, mixed $data = '' [, int $priority = '']])		
createStopped(float $after, float $repeat, callable $callback [, mixed $data = '' [, int $priority = '']])		
createStopped(int $pid, bool $trace, callable $callback [, mixed $data = '' [, int $priority = '']])		
createStopped(string $callback [, mixed $data = '' [, int $priority = '']])		
createStopped(string $callback [, string $data = '' [, string $priority = '']])		
createStopped(string $callback [, string $data = '' [, string $priority = '']])		
createStopped(object $other [, callable $callback = '' [, mixed $data = '' [, int $priority = '']]])		
createStopped(string $path, float $interval, callable $callback [, mixed $data = '' [, int $priority = '']])		
createTextAnnotation(array $rectangle, string $text [, object $encoder = ''])		
createTextNode(string $content)		
createTimeZone(string $zoneId)		
createTimeZoneIDEnumeration(int $zoneType [, string $region = '' [, int $rawOffset = '']])		
createTitleInstance([string $locale = ''])		
createURLAnnotation(array $rectangle, string $url)		
createWordInstance([string $locale = ''])		
create_directory(string $path)		
create_function(string $args, string $code)		
create_sid()		
create_sid()		
critical(string $message [, array $content = '' [, string $logger = '']])		
cropImage(int $width, int $height, int $x, int $y)		
cropThumbnailImage(int $width, int $height [, bool $legacy = ''])		
cropimage(int $width, int $height, int $x, int $y)		
cropthumbnailimage(int $width, int $height)		
crossvalidate(array $problem, int $number_of_folds)		
crypt(string $str [, string $salt = ''])		
ctype_alnum(string $text)		
ctype_alpha(string $text)		
ctype_cntrl(string $text)		
ctype_digit(string $text)		
ctype_graph(string $text)		
ctype_lower(string $text)		
ctype_print(string $text)		
ctype_punct(string $text)		
ctype_space(string $text)		
ctype_upper(string $text)		
ctype_xdigit(string $text)		
cubrid_affected_rows([resource $conn_identifier = '' [, resource $req_identifier = '']])		
cubrid_bind(resource $req_identifier, int $bind_index, mixed $bind_value [, string $bind_value_type = ''])		
cubrid_client_encoding([resource $conn_identifier = ''])		
cubrid_close([resource $conn_identifier = ''])		
cubrid_close_prepare(resource $req_identifier)		
cubrid_close_request(resource $req_identifier)		
cubrid_col_get(resource $conn_identifier, string $oid, string $attr_name)		
cubrid_col_size(resource $conn_identifier, string $oid, string $attr_name)		
cubrid_column_names(resource $req_identifier)		
cubrid_column_types(resource $req_identifier)		
cubrid_commit(resource $conn_identifier)		
cubrid_connect(string $host, int $port, string $dbname [, string $userid = '' [, string $passwd = '' [, bool $new_link = '']]])		
cubrid_connect_with_url(string $conn_url [, string $userid = '' [, string $passwd = '' [, bool $new_link = '']]])		
cubrid_current_oid(resource $req_identifier)		
cubrid_data_seek(resource $result, int $row_number)		
cubrid_db_name(array $result, int $index)		
cubrid_disconnect([resource $conn_identifier = ''])		
cubrid_drop(resource $conn_identifier, string $oid)		
cubrid_errno([resource $conn_identifier = ''])		
cubrid_error([resource $connection = ''])		
cubrid_error_code()		
cubrid_error_code_facility()		
cubrid_error_msg()		
cubrid_execute(resource $conn_identifier, string $sql [, int $option = '', resource $request_identifier])		
cubrid_fetch(resource $result [, int $type = CUBRID_BOTH])		
cubrid_fetch_array(resource $result [, int $type = CUBRID_BOTH])		
cubrid_fetch_assoc(resource $result [, int $type = ''])		
cubrid_fetch_field(resource $result [, int $field_offset = ''])		
cubrid_fetch_lengths(resource $result)		
cubrid_fetch_object(resource $result [, string $class_name = '' [, array $params = '' [, int $type = '']]])		
cubrid_fetch_row(resource $result [, int $type = ''])		
cubrid_field_flags(resource $result, int $field_offset)		
cubrid_field_len(resource $result, int $field_offset)		
cubrid_field_name(resource $result, int $field_offset)		
cubrid_field_seek(resource $result [, int $field_offset = ''])		
cubrid_field_table(resource $result, int $field_offset)		
cubrid_field_type(resource $result, int $field_offset)		
cubrid_free_result(resource $req_identifier)		
cubrid_get(resource $conn_identifier, string $oid [, mixed $attr = ''])		
cubrid_get_autocommit(resource $conn_identifier)		
cubrid_get_charset(resource $conn_identifier)		
cubrid_get_class_name(resource $conn_identifier, string $oid)		
cubrid_get_client_info()		
cubrid_get_db_parameter(resource $conn_identifier)		
cubrid_get_query_timeout(resource $req_identifier)		
cubrid_get_server_info(resource $conn_identifier)		
cubrid_insert_id([resource $conn_identifier = ''])		
cubrid_is_instance(resource $conn_identifier, string $oid)		
cubrid_list_dbs([resource $conn_identifier = ''])		
cubrid_load_from_glo(resource $conn_identifier, string $oid, string $file_name)		
cubrid_lob2_bind(resource $req_identifier, int $bind_index, mixed $bind_value [, string $bind_value_type = ''])		
cubrid_lob2_close(resource $lob_identifier)		
cubrid_lob2_export(resource $lob_identifier, string $file_name)		
cubrid_lob2_import(resource $lob_identifier, string $file_name)		
cubrid_lob2_new([resource $conn_identifier = '' [, string $type = "BLOB"]])		
cubrid_lob2_read(resource $lob_identifier, int $len)		
cubrid_lob2_seek(resource $lob_identifier, int $offset [, int $origin = CUBRID_CURSOR_CURRENT])		
cubrid_lob2_seek64(resource $lob_identifier, string $offset [, int $origin = CUBRID_CURSOR_CURRENT])		
cubrid_lob2_size(resource $lob_identifier)		
cubrid_lob2_size64(resource $lob_identifier)		
cubrid_lob2_tell(resource $lob_identifier)		
cubrid_lob2_tell64(resource $lob_identifier)		
cubrid_lob2_write(resource $lob_identifier, string $buf)		
cubrid_lob_close(array $lob_identifier_array)		
cubrid_lob_export(resource $conn_identifier, resource $lob_identifier, string $path_name)		
cubrid_lob_get(resource $conn_identifier, string $sql)		
cubrid_lob_send(resource $conn_identifier, resource $lob_identifier)		
cubrid_lob_size(resource $lob_identifier)		
cubrid_lock_read(resource $conn_identifier, string $oid)		
cubrid_lock_write(resource $conn_identifier, string $oid)		
cubrid_move_cursor(resource $req_identifier, int $offset [, int $origin = CUBRID_CURSOR_CURRENT])		
cubrid_new_glo(resource $conn_identifier, string $class_name, string $file_name)		
cubrid_next_result(resource $result)		
cubrid_num_cols(resource $result)		
cubrid_num_fields(resource $result)		
cubrid_num_rows(resource $result)		
cubrid_pconnect(string $host, int $port, string $dbname [, string $userid = '' [, string $passwd = '']])		
cubrid_pconnect_with_url(string $conn_url [, string $userid = '' [, string $passwd = '']])		
cubrid_ping([resource $conn_identifier = ''])		
cubrid_prepare(resource $conn_identifier, string $prepare_stmt [, int $option = ''])		
cubrid_put(resource $conn_identifier, string $oid [, string $attr = '', mixed $value])		
cubrid_query(string $query [, resource $conn_identifier = ''])		
cubrid_real_escape_string(string $unescaped_string [, resource $conn_identifier = ''])		
cubrid_result(resource $result, int $row [, mixed $field = ''])		
cubrid_rollback(resource $conn_identifier)		
cubrid_save_to_glo(resource $conn_identifier, string $oid, string $file_name)		
cubrid_schema(resource $conn_identifier, int $schema_type [, string $class_name = '' [, string $attr_name = '']])		
cubrid_schema(int $schema_type [, string $table_name = '' [, string $col_name = '']])		
cubrid_send_glo(resource $conn_identifier, string $oid)		
cubrid_seq_drop(resource $conn_identifier, string $oid, string $attr_name, int $index)		
cubrid_seq_insert(resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element)		
cubrid_seq_put(resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element)		
cubrid_set_add(resource $conn_identifier, string $oid, string $attr_name, string $set_element)		
cubrid_set_autocommit(resource $conn_identifier, bool $mode)		
cubrid_set_db_parameter(resource $conn_identifier, int $param_type, int $param_value)		
cubrid_set_drop(resource $conn_identifier, string $oid, string $attr_name, string $set_element)		
cubrid_set_query_timeout(resource $req_identifier, int $timeout)		
cubrid_unbuffered_query(string $query [, resource $conn_identifier = ''])		
cubrid_version()		
curl_close(resource $ch)		
curl_copy_handle(resource $ch)		
curl_errno(resource $ch)		
curl_error(resource $ch)		
curl_escape(resource $ch, string $str)		
curl_exec(resource $ch)		
curl_file_create(string $filename [, string $mimetype = '' [, string $postname = '']])		
curl_getinfo(resource $ch [, int $opt = ''])		
curl_init([string $url = ''])		
curl_multi_add_handle(resource $mh, resource $ch)		
curl_multi_close(resource $mh)		
curl_multi_errno(resource $mh)		
curl_multi_exec(resource $mh, int $still_running)		
curl_multi_getcontent(resource $ch)		
curl_multi_info_read(resource $mh [, int $msgs_in_queue = ''])		
curl_multi_init()		
curl_multi_remove_handle(resource $mh, resource $ch)		
curl_multi_select(resource $mh [, float $timeout = 1.0])		
curl_multi_setopt(resource $mh, int $option, mixed $value)		
curl_multi_strerror(int $errornum)		
curl_pause(resource $ch, int $bitmask)		
curl_reset(resource $ch)		
curl_setopt(resource $ch, int $option, mixed $value)		
curl_setopt_array(resource $ch, array $options)		
curl_share_close(resource $sh)		
curl_share_errno(resource $sh)		
curl_share_init()		
curl_share_setopt(resource $sh, int $option, string $value)		
curl_share_strerror(int $errornum)		
curl_strerror(int $errornum)		
curl_unescape(resource $ch, string $str)		
curl_version([int $age = CURLVERSION_NOW])		
current(array $array)		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
current(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current()		
current_field(resource $result)		
curveTo(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)		
curveTo(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3, CairoContext $context)		
curveTo2(float $x2, float $y2, float $x3, float $y3)		
curveTo3(float $x1, float $y1, float $x3, float $y3)		
cycleColormapImage(int $displace)		
cyclecolormapimage(int $displace)		
cyrus_authenticate(resource $connection [, string $mechlist = '' [, string $service = '' [, string $user = '' [, int $minssf = '' [, int $maxssf = '' [, string $authname = '' [, string $password = '']]]]]]])		
cyrus_bind(resource $connection, array $callbacks)		
cyrus_close(resource $connection)		
cyrus_connect([string $host = '' [, string $port = '' [, int $flags = '']]])		
cyrus_query(resource $connection, string $query)		
cyrus_unbind(resource $connection, string $trigger_name)		
daemon([boolean $nochdir = '' [, boolean $noclose = '']])		
data(array $data)		
data(string $data)		
data()		
data()		
dataSize()		
data_seek(int $offset, mysqli_result $result)		
data_seek(resource $result, int $offset)		
data_seek(resource $statement, int $offset)		
data_seek(int $offset, mysqli_stmt $stmt)		
date()		
date_add()		
date_create()		
date_create_from_format()		
date_create_immutable()		
date_create_immutable_from_format()		
date_date_set()		
date_default_timezone_get()		
date_default_timezone_set(string $timezone_identifier)		
date_diff()		
date_format()		
date_get_last_errors()		
date_interval_create_from_date_string()		
date_interval_format()		
date_isodate_set()		
date_modify()		
date_offset_get()		
date_parse(string $date)		
date_parse_from_format(string $format, string $date)		
date_sub()		
date_sun_info(int $time, float $latitude, float $longitude)		
date_sunrise("date.sunrise_zenith")		
date_sunset("date.sunset_zenith")		
date_time_set()		
date_timestamp_get()		
date_timestamp_set()		
date_timezone_get()		
date_timezone_set()		
datefmt_create(string $locale, int $datetype, int $timetype [, mixed $timezone = null [, mixed $calendar = null [, string $pattern = ""]]])		
datefmt_format(mixed $value, IntlDateFormatter $fmt)		
datefmt_format_object(object $object [, mixed $format = null [, string $locale = null]])		
datefmt_get_calendar(IntlDateFormatter $fmt)		
datefmt_get_calendar_object()		
datefmt_get_datetype(IntlDateFormatter $fmt)		
datefmt_get_error_code(IntlDateFormatter $fmt)		
datefmt_get_error_message(IntlDateFormatter $fmt)		
datefmt_get_locale([int $which = '', IntlDateFormatter $fmt])		
datefmt_get_pattern(IntlDateFormatter $fmt)		
datefmt_get_timetype(IntlDateFormatter $fmt)		
datefmt_get_timezone()		
datefmt_get_timezone_id(IntlDateFormatter $fmt)		
datefmt_is_lenient(IntlDateFormatter $fmt)		
datefmt_localtime(string $value [, int $position = '', IntlDateFormatter $fmt])		
datefmt_parse(string $value [, int $position = '', IntlDateFormatter $fmt])		
datefmt_set_calendar(mixed $which, IntlDateFormatter $fmt)		
datefmt_set_lenient(bool $lenient, IntlDateFormatter $fmt)		
datefmt_set_pattern(string $pattern, IntlDateFormatter $fmt)		
datefmt_set_timezone(mixed $zone, IntlDateFormatter $fmt)		
datefmt_set_timezone_id(string $zone, IntlDateFormatter $fmt)		
db2_autocommit(resource $connection [, bool $value = ''])		
db2_bind_param(resource $stmt, int $parameter-number, string $variable-name [, int $parameter-type = '' [, int $data-type = '' [, int $precision = -1 [, int $scale = '']]]])		
db2_client_info(resource $connection)		
db2_close(resource $connection)		
db2_column_privileges(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $column-name = '']]]])		
db2_columns(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $column-name = '']]]])		
db2_commit(resource $connection)		
db2_conn_error([resource $connection = ''])		
db2_conn_errormsg([resource $connection = ''])		
db2_connect(string $database, string $username, string $password [, array $options = ''])		
db2_cursor_type(resource $stmt)		
db2_escape_string(string $string_literal)		
db2_exec(resource $connection, string $statement [, array $options = ''])		
db2_execute(resource $stmt [, array $parameters = ''])		
db2_fetch_array(resource $stmt [, int $row_number = -1])		
db2_fetch_assoc(resource $stmt [, int $row_number = -1])		
db2_fetch_both(resource $stmt [, int $row_number = -1])		
db2_fetch_object(resource $stmt [, int $row_number = -1])		
db2_fetch_row(resource $stmt [, int $row_number = ''])		
db2_field_display_size(resource $stmt, mixed $column)		
db2_field_name(resource $stmt, mixed $column)		
db2_field_num(resource $stmt, mixed $column)		
db2_field_precision(resource $stmt, mixed $column)		
db2_field_scale(resource $stmt, mixed $column)		
db2_field_type(resource $stmt, mixed $column)		
db2_field_width(resource $stmt, mixed $column)		
db2_foreign_keys(resource $connection, string $qualifier, string $schema, string $table-name)		
db2_free_result(resource $stmt)		
db2_free_stmt(resource $stmt)		
db2_get_option(resource $resource, string $option)		
db2_last_insert_id(resource $resource)		
db2_lob_read(resource $stmt, int $colnum, int $length)		
db2_next_result(resource $stmt)		
db2_num_fields(resource $stmt)		
db2_num_rows(resource $stmt)		
db2_pclose(resource $resource)		
db2_pconnect(string $database, string $username, string $password [, array $options = ''])		
db2_prepare(resource $connection, string $statement [, array $options = ''])		
db2_primary_keys(resource $connection, string $qualifier, string $schema, string $table-name)		
db2_procedure_columns(resource $connection, string $qualifier, string $schema, string $procedure, string $parameter)		
db2_procedures(resource $connection, string $qualifier, string $schema, string $procedure)		
db2_result(resource $stmt, mixed $column)		
db2_rollback(resource $connection)		
db2_server_info(resource $connection)		
db2_set_option(resource $resource, array $options, int $type)		
db2_special_columns(resource $connection, string $qualifier, string $schema, string $table_name, int $scope)		
db2_statistics(resource $connection, string $qualifier, string $schema, string $table-name, bool $unique)		
db2_stmt_error([resource $stmt = ''])		
db2_stmt_errormsg([resource $stmt = ''])		
db2_table_privileges(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table_name = '']]])		
db2_tables(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $table-type = '']]]])		
dba_close(resource $handle)		
dba_delete(string $key, resource $handle)		
dba_exists(string $key, resource $handle)		
dba_fetch(string $key, resource $handle, int $skip)		
dba_firstkey(resource $handle)		
dba_handlers([bool $full_info = ''])		
dba_insert(string $key, string $value, resource $handle)		
dba_key_split(mixed $key)		
dba_list()		
dba_nextkey(resource $handle)		
dba_open(string $path, string $mode [, string $handler = '' [, mixed $... = '']])		
dba_optimize(resource $handle)		
dba_popen(string $path, string $mode [, string $handler = '' [, mixed $... = '']])		
dba_replace(string $key, string $value, resource $handle)		
dba_sync(resource $handle)		
dbase_add_record(resource $dbase_identifier, array $record)		
dbase_close(resource $dbase_identifier)		
dbase_create(string $filename, array $fields [, int $type = DBASE_TYPE_DBASE])		
dbase_delete_record(resource $dbase_identifier, int $record_number)		
dbase_get_header_info(resource $dbase_identifier)		
dbase_get_record(resource $dbase_identifier, int $record_number)		
dbase_get_record_with_names(resource $dbase_identifier, int $record_number)		
dbase_numfields(resource $dbase_identifier)		
dbase_numrecords(resource $dbase_identifier)		
dbase_open(string $filename, int $mode)		
dbase_pack(resource $dbase_identifier)		
dbase_replace_record(resource $dbase_identifier, array $record, int $record_number)		
dbplus_add(resource $relation, array $tuple)		
dbplus_aql(string $query [, string $server = '' [, string $dbpath = '']])		
dbplus_chdir([string $newdir = ''])		
dbplus_close(resource $relation)		
dbplus_curr(resource $relation, array $tuple)		
dbplus_errcode([int $errno = ''])		
dbplus_errno()		
dbplus_find(resource $relation, array $constraints, mixed $tuple)		
dbplus_first(resource $relation, array $tuple)		
dbplus_flush(resource $relation)		
dbplus_freealllocks()		
dbplus_freelock(resource $relation, string $tuple)		
dbplus_freerlocks(resource $relation)		
dbplus_getlock(resource $relation, string $tuple)		
dbplus_getunique(resource $relation, int $uniqueid)		
dbplus_info(resource $relation, string $key, array $result)		
dbplus_last(resource $relation, array $tuple)		
dbplus_lockrel(resource $relation)		
dbplus_next(resource $relation, array $tuple)		
dbplus_open(string $name)		
dbplus_prev(resource $relation, array $tuple)		
dbplus_rchperm(resource $relation, int $mask, string $user, string $group)		
dbplus_rcreate(string $name, mixed $domlist [, bool $overwrite = ''])		
dbplus_rcrtexact(string $name, resource $relation [, bool $overwrite = ''])		
dbplus_rcrtlike(string $name, resource $relation [, int $overwrite = ''])		
dbplus_resolve(string $relation_name)		
dbplus_restorepos(resource $relation, array $tuple)		
dbplus_rkeys(resource $relation, mixed $domlist)		
dbplus_ropen(string $name)		
dbplus_rquery(string $query [, string $dbpath = ''])		
dbplus_rrename(resource $relation, string $name)		
dbplus_rsecindex(resource $relation, mixed $domlist, int $type)		
dbplus_runlink(resource $relation)		
dbplus_rzap(resource $relation)		
dbplus_savepos(resource $relation)		
dbplus_setindex(resource $relation, string $idx_name)		
dbplus_setindexbynumber(resource $relation, int $idx_number)		
dbplus_sql(string $query [, string $server = '' [, string $dbpath = '']])		
dbplus_tcl(int $sid, string $script)		
dbplus_tremove(resource $relation, array $tuple [, array $current = ''])		
dbplus_undo(resource $relation)		
dbplus_undoprepare(resource $relation)		
dbplus_unlockrel(resource $relation)		
dbplus_unselect(resource $relation)		
dbplus_update(resource $relation, array $old, array $new)		
dbplus_xlockrel(resource $relation)		
dbplus_xunlockrel(resource $relation)		
dbstat(array $parameter)		
dbx_close(object $link_identifier)		
dbx_compare(array $row_a, array $row_b, string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE])		
dbx_connect(mixed $module, string $host, string $database, string $username, string $password [, int $persistent = ''])		
dbx_error(object $link_identifier)		
dbx_escape_string(object $link_identifier, string $text)		
dbx_fetch_row(object $result_identifier)		
dbx_query(object $link_identifier, string $sql_statement [, int $flags = ''])		
dbx_sort(object $result, string $user_compare_function)		
dcgettext(string $domain, string $message, int $category)		
dcngettext(string $domain, string $msgid1, string $msgid2, int $n, int $category)		
dcstat(array $parameter)		
dead()		
dead()		
dead()		
debug(string $message [, array $content = '' [, string $logger = '']])		
debug(string $message)		
debugDumpParams()		
debug_backtrace([int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = '']])		
debug_print_backtrace([int $options = '' [, int $limit = '']])		
debug_zval_dump(mixed $variable [, mixed $... = ''])		
dec()		
decbin(int $number)		
dechex(int $number)		
decipherImage(string $passphrase)		
decoct(int $number)		
decompress()		
decompress([string $extension = ''])		
decompress([string $extension = ''])		
decompressFiles()		
decompressFiles()		
deconstructImages()		
deconstructimages()		
decr(string $key, string $column [, integer $decrby = ''])		
decrement(string $key [, int $offset = 1 [, int $initial_value = '' [, int $expiry = '']]])		
decrement(string $key [, int $value = 1])		
decrementByKey(string $server_key, string $key [, int $offset = 1 [, int $initial_value = '' [, int $expiry = '']]])		
defaultLoop([int $flags = Ev::FLAG_AUTO [, mixed $data = null [, float $io_interval = 0. [, float $timeout_interval = 0.]]]])		
defer(callable $callback)		
defer(mixed $callback)		
define(string $name, mixed $value [, bool $case_insensitive = ''])		
define_syslog_variables()		
defined(string $name)		
deflate_add(resource $context, string $data [, int $flush_mode = ZLIB_SYNC_FLUSH])		
deflate_init()		
deg2rad(float $number)		
del()		
del(string $fd)		
del(string $key)		
del(string $name)		
del(string $name)		
delMetadata()		
delMetadata()		
delMetadata()		
delSignal()		
delStop(int $index)		
delTimer()		
delete()		
delete(int $index)		
delete(int $index)		
delete(int $index)		
delete(int $key)		
delete(int $key)		
delete(int $key)		
delete(string $entry)		
delete(string $entry)		
delete(string $key [, int $time = ''])		
delete(string $key [, int $timeout = ''])		
delete(string $key)		
delete(string $path [, int $version = -1])		
delete(string $path)		
delete(mixed $id)		
delete()		
delete(array|object $filter [, array $deleteOptions = ''])		
deleteAt(int $offset)		
deleteById(string $id)		
deleteByIds(array $ids)		
deleteByKey(string $server_key, string $key [, int $time = ''])		
deleteByQueries(array $queries)		
deleteByQuery(string $query)		
deleteData(int $offset, int $count)		
deleteField(string $fieldName)		
deleteField(string $fieldName)		
deleteImageArtifact(string $artifact)		
deleteImageProperty(string $name)		
deleteIndex(string|array $keys)		
deleteIndex(int $index)		
deleteIndexes()		
deleteMulti(array $keys [, int $time = ''])		
deleteMultiByKey(string $server_key, array $keys [, int $time = ''])		
deleteName(string $name)		
depth()		
dequeue()		
derive(object $instance)		
description()		
deskewImage(float $threshold)		
despeckleImage()		
despeckleimage()		
destroy()		
destroy()		
destroy()		
destroy()		
destroy()		
destroy()		
destroy(int $condition)		
destroy(int $mutex)		
destroy(string $session_id)		
destroy(string $session_id)		
destroy()		
detach(object $object)		
detach()		
detach(SplObserver $observer)		
detachIterator(Iterator $iterator)		
deviceToUser(float $x, float $y, CairoContext $context)		
deviceToUserDistance(float $x, float $y, CairoContext $context)		
dgettext(string $domain, string $message)		
diagnose(tidy $object)		
die()		
diff(DOMDocument $from, DOMDocument $to)		
diff(DateTimeInterface $datetime2 [, bool $absolute = '', DateTimeInterface $datetime1])		
diff(DateTimeInterface $datetime2 [, bool $absolute = '', DateTimeInterface $datetime1])		
diff(DateTimeInterface $datetime2 [, bool $absolute = '', DateTimeInterface $datetime1])		
diff(Ds\Map $map)		
diff(Ds\Set $set)		
diff(mixed $from, mixed $to)		
diff(string $from, string $to)		
diff(string $from, string $to)		
digestXmlResponse(string $xmlresponse [, int $parse_mode = ''])		
digit(string $codepoint [, int $radix = 10])		
dio_close(resource $fd)		
dio_fcntl(resource $fd, int $cmd [, mixed $args = ''])		
dio_open(string $filename, int $flags [, int $mode = ''])		
dio_read(resource $fd [, int $len = 1024])		
dio_seek(resource $fd, int $pos [, int $whence = SEEK_SET])		
dio_stat(resource $fd)		
dio_tcsetattr(resource $fd, array $options)		
dio_truncate(resource $fd, int $offset)		
dio_write(resource $fd, string $data [, int $len = ''])		
dir(string $directory [, resource $context = ''])		
dir_closedir()		
dir_opendir(string $path, int $options)		
dir_readdir()		
dir_rewinddir()		
dirname(string $path [, int $levels = 1])		
disable()		
disable()		
disable()		
disable(int $events)		
disableDebug()		
disableRedirects()		
disableSSLChecks()		
disableView()		
disable_reads_from_master(mysqli $link)		
disable_reads_from_master(resource $link)		
disconnect(string $dsn)		
disconnect()		
disconnect()		
disconnect()		
disk_free_space(string $directory)		
disk_total_space(string $directory)		
diskfreespace()		
dispatch(Yaf_Request_Abstract $request)		
dispatch()		
dispatchLoopShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)		
dispatchLoopStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)		
display(string $tpl [, array $parameters = ''])		
display(string $tpl [, array $tpl_vars = ''])		
display(string $tpl [, array $tpl_vars = ''])		
displayImage(string $servername)		
displayImages(string $servername)		
distinct(string $key [, array $query = ''])		
distortImage(int $method, array $arguments, bool $bestfit)		
dl(string $library)		
dngettext(string $domain, string $msgid1, string $msgid2, int $n)		
dnsLookup(string $hostname, callable $callback)		
dns_check_record()		
dns_get_mx()		
dns_get_record(string $hostname [, int $type = DNS_ANY [, array $authns = '' [, array $addtl = '' [, bool $raw = '']]]])		
do(string $function_name, string $workload [, string $unique = ''])		
doBackground(string $function_name, string $workload [, string $unique = ''])		
doHigh(string $function_name, string $workload [, string $unique = ''])		
doHighBackground(string $function_name, string $workload [, string $unique = ''])		
doJobHandle()		
doLow(string $function_name, string $workload [, string $unique = ''])		
doLowBackground(string $function_name, string $workload [, string $unique = ''])		
doNormal(string $function_name, string $workload [, string $unique = ''])		
doQuery()		
doStatus()		
dom_import_simplexml(SimpleXMLElement $node)		
doubleval()		
download(string $path, string $file, callable $callback [, integer $offset = ''])		
drain(int $len)		
drawArc(float $r, float $startAngle, float $endAngle)		
drawCircle(float $r)		
drawCubic(float $bx, float $by, float $cx, float $cy, float $dx, float $dy)		
drawCubicTo(float $bx, float $by, float $cx, float $cy, float $dx, float $dy)		
drawCurve(float $controldx, float $controldy, float $anchordx, float $anchordy [, float $targetdx = '', float $targetdy])		
drawCurveTo(float $controlx, float $controly, float $anchorx, float $anchory [, float $targetx = '', float $targety])		
drawGlyph(SWFFont $font, string $character [, int $size = ''])		
drawImage(ImagickDraw $draw)		
drawImage(object $image, float $x, float $y, float $width, float $height)		
drawLine(float $dx, float $dy)		
drawLineTo(float $x, float $y)		
drawimage(GmagickDraw $GmagickDraw)		
drop()		
drop()		
drop()		
dropCollection(mixed $coll)		
dropCollection(string $collection_name)		
dropDB(mixed $db)		
dropIndex(string $index_name)		
dropSchema(string $schema_name)		
dscBeginPageSetup()		
dscBeginSetup()		
dscComment(string $comment)		
dstanchors(array $parameter)		
dstofsrcanchor(array $parameter)		
dump()		
dump()		
dump()		
dump()		
dump_debug_info(mysqli $link)		
each(array $array)		
easter_date("Y")		
easter_days("Y")		
echo(string $arg1 [, string $... = ''])		
echo(string $workload)		
echo(string $workload)		
edgeImage(float $radius)		
edgeimage(float $radius)		
eigenValues(array $a [, array $left = '' [, array $right = '']])		
eio_busy(int $delay [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_cancel(resource $req)		
eio_chmod(string $path, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_chown(string $path, int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])		
eio_close(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_custom(callable $execute, int $pri, callable $callback [, mixed $data = null])		
eio_dup2(mixed $fd, mixed $fd2 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_event_loop()		
eio_fallocate(mixed $fd, int $mode, int $offset, int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_fchmod(mixed $fd, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_fchown(mixed $fd, int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])		
eio_fdatasync(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_fstat(mixed $fd, int $pri, callable $callback [, mixed $data = ''])		
eio_fstatvfs(mixed $fd, int $pri, callable $callback [, mixed $data = ''])		
eio_fsync(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_ftruncate(mixed $fd [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])		
eio_futime(mixed $fd, float $atime, float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_get_event_stream()		
eio_get_last_error(resource $req)		
eio_grp(callable $callback [, string $data = null])		
eio_grp_add(resource $grp, resource $req)		
eio_grp_cancel(resource $grp)		
eio_grp_limit(resource $grp, int $limit)		
eio_init()		
eio_link(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_lstat(string $path, int $pri, callable $callback [, mixed $data = null])		
eio_mkdir(string $path, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_mknod(string $path, int $mode, int $dev [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_nop([int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_npending()		
eio_nready()		
eio_nreqs()		
eio_nthreads()		
eio_open(string $path, int $flags, int $mode, int $pri, callable $callback [, mixed $data = null])		
eio_poll()		
eio_read(mixed $fd, int $length, int $offset, int $pri, callable $callback [, mixed $data = null])		
eio_readahead(mixed $fd, int $offset, int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_readdir(string $path, int $flags, int $pri, callable $callback [, string $data = null])		
eio_readlink(string $path, int $pri, callable $callback [, string $data = null])		
eio_realpath(string $path, int $pri, callable $callback [, string $data = null])		
eio_rename(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_rmdir(string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_seek(mixed $fd, int $offset, int $whence [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_sendfile(mixed $out_fd, mixed $in_fd, int $offset, int $length [, int $pri = '' [, callable $callback = '' [, string $data = '']]])		
eio_set_max_idle(int $nthreads)		
eio_set_max_parallel(int $nthreads)		
eio_set_max_poll_reqs(int $nreqs)		
eio_set_max_poll_time(float $nseconds)		
eio_set_min_parallel(string $nthreads)		
eio_stat(string $path, int $pri, callable $callback [, mixed $data = null])		
eio_statvfs(string $path, int $pri, callable $callback [, mixed $data = ''])		
eio_symlink(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_sync([int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_sync_file_range(mixed $fd, int $offset, int $nbytes, int $flags [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_syncfs(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_truncate(string $path [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])		
eio_unlink(string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_utime(string $path, float $atime, float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])		
eio_write(mixed $fd, string $str [, int $length = '' [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]]])		
ellipse(float $ox, float $oy, float $rx, float $ry, float $start, float $end)		
ellipse(float $ox, float $oy, float $rx, float $ry, float $start, float $end)		
ellipse(float $x, float $y, float $xray, float $yray)		
embed(string $other [, string $callback = '' [, string $data = '' [, string $priority = '']]])		
embeddableBackends()		
embedded_server_end()		
embedded_server_start(int $start, array $arguments, array $groups)		
embossImage(float $radius, float $sigma)		
embossimage(float $radius, float $sigma)		
emergency(string $message [, array $content = '' [, string $logger = '']])		
empty(mixed $var)		
enable()		
enable()		
enable()		
enable(int $events)		
enableDebug()		
enableExceptions([bool $enableExceptions = ''])		
enableLocking()		
enableRedirects()		
enableSSLChecks()		
enableView()		
enchant_broker_describe(resource $broker)		
enchant_broker_dict_exists(resource $broker, string $tag)		
enchant_broker_free(resource $broker)		
enchant_broker_free_dict(resource $dict)		
enchant_broker_get_dict_path(resource $broker, int $dict_type)		
enchant_broker_get_error(resource $broker)		
enchant_broker_init()		
enchant_broker_list_dicts(resource $broker)		
enchant_broker_request_dict(resource $broker, string $tag)		
enchant_broker_request_pwl_dict(resource $broker, string $filename)		
enchant_broker_set_dict_path(resource $broker, int $dict_type, string $value)		
enchant_broker_set_ordering(resource $broker, string $tag, string $ordering)		
enchant_dict_add_to_personal(resource $dict, string $word)		
enchant_dict_add_to_session(resource $dict, string $word)		
enchant_dict_check(resource $dict, string $word)		
enchant_dict_describe(resource $dict)		
enchant_dict_get_error(resource $dict)		
enchant_dict_is_in_session(resource $dict, string $word)		
enchant_dict_quick_check(resource $dict, string $word [, array $suggestions = ''])		
enchant_dict_store_replacement(resource $dict, string $mis, string $cor)		
enchant_dict_suggest(resource $dict, string $word)		
encipherImage(string $passphrase)		
end(array $array)		
end()		
end([string $content = ''])		
endAttribute(resource $xmlwriter)		
endCdata(resource $xmlwriter)		
endChildren()		
endChildren()		
endComment(resource $xmlwriter)		
endDocument(resource $xmlwriter)		
endDtd(resource $xmlwriter)		
endDtdAttlist(resource $xmlwriter)		
endDtdElement(resource $xmlwriter)		
endDtdEntity(resource $xmlwriter)		
endElement(resource $xmlwriter)		
endIteration()		
endIteration()		
endLogging()		
endMask()		
endPSession(mysqlnd_connection $connection)		
endPath()		
endPi(resource $xmlwriter)		
endSession()		
endText()		
enhanceImage()		
enhanceimage()		
enqueue(mixed $value)		
ensureIndex()		
enter(IVisitable $visitable)		
enumCharNames(mixed $start, mixed $limit, callable $callback [, int $nameChoice = ''])		
enumCharTypes(callable $callback)		
environ()		
eoFillStroke([bool $close_path = ''])		
eof()		
eof()		
eofill()		
equal(CairoFontOptions $other)		
equalizeImage()		
equalizeimage()		
equals(IntlCalendar $other, IntlCalendar $cal)		
equals(object $obj)		
erase([int $offset = '' [, int $length = '']])		
ereg(string $pattern, string $string [, array $regs = ''])		
ereg_replace(string $pattern, string $replacement, string $string)		
eregi(string $pattern, string $string [, array $regs = ''])		
eregi_replace(string $pattern, string $replacement, string $string)		
errno()		
errno(resource $link)		
errno(resource $stmt)		
error(string $title, string $msg)		
error(string $message [, array $content = '' [, string $logger = '']])		
error()		
error()		
error()		
error(resource $link)		
error(resource $link)		
error(resource $stmt)		
errorCode()		
errorCode()		
errorInfo()		
errorInfo()		
errorInfo()		
errorInfo()		
error_clear_last()		
error_get_last()		
error_log(string $message [, int $message_type = '' [, string $destination = '' [, string $extra_headers = '']]])		
error_reporting([int $level = ''])		
escapeQueryChars(string $str)		
escapeString(mysqlnd_connection $connection, string $escape_string)		
escapeString(string $string)		
escapeString(string $value)		
escape_string(string $escapestr, mysqli $link)		
escapeshellarg(string $arg)		
escapeshellcmd(string $command)		
eval(string $code)		
eval(string $statements)		
eval(string $tpl_content [, array $tpl_vars = ''])		
evaluate(string $expression [, DOMNode $contextnode = '' [, bool $registerNodeNS = '']])		
evaluateImage(int $op, float $constant [, int $channel = Imagick::CHANNEL_DEFAULT])		
event_add(resource $event [, int $timeout = -1])		
event_base_free(resource $event_base)		
event_base_loop(resource $event_base [, int $flags = ''])		
event_base_loopbreak(resource $event_base)		
event_base_loopexit(resource $event_base [, int $timeout = -1])		
event_base_new()		
event_base_priority_init(resource $event_base, int $npriorities)		
event_base_reinit(resource $event_base)		
event_base_set(resource $event, resource $event_base)		
event_buffer_base_set(resource $bevent, resource $event_base)		
event_buffer_disable(resource $bevent, int $events)		
event_buffer_enable(resource $bevent, int $events)		
event_buffer_fd_set(resource $bevent, resource $fd)		
event_buffer_free(resource $bevent)		
event_buffer_new(resource $stream, mixed $readcb, mixed $writecb, mixed $errorcb [, mixed $arg = ''])		
event_buffer_priority_set(resource $bevent, int $priority)		
event_buffer_read(resource $bevent, int $data_size)		
event_buffer_set_callback(resource $event, mixed $readcb, mixed $writecb, mixed $errorcb [, mixed $arg = ''])		
event_buffer_timeout_set(resource $bevent, int $read_timeout, int $write_timeout)		
event_buffer_watermark_set(resource $bevent, int $events, int $lowmark, int $highmark)		
event_buffer_write(resource $bevent, string $data [, int $data_size = -1])		
event_del(resource $event)		
event_free(resource $event)		
event_new()		
event_priority_set(resource $event, int $priority)		
event_set(resource $event, mixed $fd, int $events, mixed $callback [, mixed $arg = ''])		
event_timer_add()		
event_timer_del()		
event_timer_new()		
event_timer_set(resource $event, callable $callback [, mixed $arg = ''])		
exception(string $exception)		
exchangeArray(mixed $input)		
exec(string $command [, array $output = '' [, int $return_var = '']])		
exec(string $exec_file, string $args)		
exec(resource $dbhandle, string $query [, string $error_msg = ''])		
exec(string $query)		
exec(string $statement)		
execute()		
execute()		
execute(array $write_options)		
execute()		
execute([array $input_parameters = ''])		
execute(mysqli_stmt $stmt)		
execute(mysqlnd_prepared_statement $statement)		
execute(resource $stmt)		
execute([mixed $arg = '' [, mixed $... = '']])		
execute()		
execute()		
execute()		
execute()		
execute()		
execute()		
execute()		
execute()		
execute()		
execute()		
execute([string $query = ''])		
execute(callable $entry, string $...)		
execute(string $path, string $callback)		
executeBulkWrite()		
executeBulkWrite()		
executeCommand()		
executeCommand()		
executePreparedQuery(PDO $database_handle, PDOStatement $prepared_statement, array $value_list [, array $column_specifier = ''])		
executeQuery()		
executeQuery()		
executeQuery(PDO $database_handle, string $SQL_statement [, array $column_specifier = ''])		
executeReadCommand()		
executeReadCommand()		
executeReadWriteCommand()		
executeReadWriteCommand()		
executeSql(string $statement)		
executeString()		
executeWriteCommand()		
executeWriteCommand()		
exif_imagetype(string $filename)		
exif_read_data(mixed $stream [, string $sections = '' [, bool $arrays = '' [, bool $thumbnail = '']]])		
exif_tagname(int $index)		
exif_thumbnail(mixed $stream [, int $width = '' [, int $height = '' [, int $imagetype = '']]])		
exist(integer $fd)		
exist(integer $fd)		
exist(string $key)		
exists(int $key)		
exists(int $key)		
exists(int $key)		
exists(string $key)		
exists(string $path [, callable $watcher_cb = ''])		
exists(string $path)		
exists(integer $timer_id)		
existsInDatabase()		
existsInDatabase()		
existsInDatabase()		
existsInDatabase()		
exit(int $status)		
exit([float $timeout = ''])		
exit()		
exit([string $exit_code = ''])		
exp(float $arg)		
expand([DOMNode $basenode = ''])		
expand(int $len)		
expand(integer $size)		
expect_expectl(resource $expect, array $cases [, array $match = ''])		
expect_popen(string $command)		
explain()		
explode(string $delimiter, string $string [, int $limit = PHP_INT_MAX])		
expm1(float $arg)		
export(string $filename [, int $start = '' [, int $length = '']])		
export(SDO_Model_ReflectionDataObject $rdo [, bool $return = ''])		
export()		
export(Reflector $reflector [, bool $return = ''])		
export(mixed $argument [, bool $return = ''])		
export(mixed $class, string $name [, bool $return = ''])		
export(mixed $class, string $name [, bool $return = ''])		
export(string $argument [, bool $return = ''])		
export(string $class, string $name [, bool $return = ''])		
export(string $function, string $parameter [, bool $return = ''])		
export(string $name [, bool $return = ''])		
export(string $name [, string $return = ''])		
export(string $name [, string $return = ''])		
exportImagePixels(int $x, int $y, int $width, int $height, string $map, int $STORAGE)		
expression(string $expression)		
ext(string $name, int $options, string $key, string $value)		
extend(string $class)		
extension_loaded(string $name)		
extentImage(int $width, int $height, int $x, int $y)		
extents()		
extract(array $array [, int $flags = EXTR_OVERWRITE [, string $prefix = '']])		
extract(string $dir [, string $filepath = "" [, string $password = null [, bool $extended_data = '']]])		
extract()		
extract()		
extractTo(string $destination [, mixed $entries = ''])		
extractTo(string $pathto [, string|array $files = '' [, bool $overwrite = '']])		
extractTo(string $pathto [, string|array $files = '' [, bool $overwrite = '']])		
ezmlm_hash(string $addr)		
fail()		
fam_cancel_monitor(resource $fam, resource $fam_monitor)		
fam_close(resource $fam)		
fam_monitor_collection(resource $fam, string $dirname, int $depth, string $mask)		
fam_monitor_directory(resource $fam, string $dirname)		
fam_monitor_file(resource $fam, string $filename)		
fam_next_event(resource $fam)		
fam_open([string $appname = ''])		
fam_pending(resource $fam)		
fam_resume_monitor(resource $fam, resource $fam_monitor)		
fam_suspend_monitor(resource $fam, resource $fam_monitor)		
fann_cascadetrain_on_data(resource $ann, resource $data, int $max_neurons, int $neurons_between_reports, float $desired_error)		
fann_cascadetrain_on_file(resource $ann, string $filename, int $max_neurons, int $neurons_between_reports, float $desired_error)		
fann_clear_scaling_params(resource $ann)		
fann_copy(resource $ann)		
fann_create_from_file(string $configuration_file)		
fann_create_shortcut(int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])		
fann_create_shortcut_array(int $num_layers, array $layers)		
fann_create_sparse(float $connection_rate, int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])		
fann_create_sparse_array(float $connection_rate, int $num_layers, array $layers)		
fann_create_standard(int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])		
fann_create_standard_array(int $num_layers, array $layers)		
fann_create_train(int $num_data, int $num_input, int $num_output)		
fann_create_train_from_callback(int $num_data, int $num_input, int $num_output, callable $user_function)		
fann_descale_input(resource $ann, array $input_vector)		
fann_descale_output(resource $ann, array $output_vector)		
fann_descale_train(resource $ann, resource $train_data)		
fann_destroy(resource $ann)		
fann_destroy_train(resource $train_data)		
fann_duplicate_train_data(resource $data)		
fann_get_MSE(resource $ann)		
fann_get_activation_function(resource $ann, int $layer, int $neuron)		
fann_get_activation_steepness(resource $ann, int $layer, int $neuron)		
fann_get_bias_array(resource $ann)		
fann_get_bit_fail(resource $ann)		
fann_get_bit_fail_limit(resource $ann)		
fann_get_cascade_activation_functions(resource $ann)		
fann_get_cascade_activation_functions_count(resource $ann)		
fann_get_cascade_activation_steepnesses(resource $ann)		
fann_get_cascade_activation_steepnesses_count(resource $ann)		
fann_get_cascade_candidate_change_fraction(resource $ann)		
fann_get_cascade_candidate_limit(resource $ann)		
fann_get_cascade_candidate_stagnation_epochs(resource $ann)		
fann_get_cascade_max_cand_epochs(resource $ann)		
fann_get_cascade_max_out_epochs(resource $ann)		
fann_get_cascade_min_cand_epochs(resource $ann)		
fann_get_cascade_min_out_epochs(resource $ann)		
fann_get_cascade_num_candidate_groups(resource $ann)		
fann_get_cascade_num_candidates(resource $ann)		
fann_get_cascade_output_change_fraction(resource $ann)		
fann_get_cascade_output_stagnation_epochs(resource $ann)		
fann_get_cascade_weight_multiplier(resource $ann)		
fann_get_connection_array(resource $ann)		
fann_get_connection_rate(resource $ann)		
fann_get_errno(resource $errdat)		
fann_get_errstr(resource $errdat)		
fann_get_layer_array(resource $ann)		
fann_get_learning_momentum(resource $ann)		
fann_get_learning_rate(resource $ann)		
fann_get_network_type(resource $ann)		
fann_get_num_input(resource $ann)		
fann_get_num_layers(resource $ann)		
fann_get_num_output(resource $ann)		
fann_get_quickprop_decay(resource $ann)		
fann_get_quickprop_mu(resource $ann)		
fann_get_rprop_decrease_factor(resource $ann)		
fann_get_rprop_delta_max(resource $ann)		
fann_get_rprop_delta_min(resource $ann)		
fann_get_rprop_delta_zero(resource $ann)		
fann_get_rprop_increase_factor(resource $ann)		
fann_get_sarprop_step_error_shift(resource $ann)		
fann_get_sarprop_step_error_threshold_factor(resource $ann)		
fann_get_sarprop_temperature(resource $ann)		
fann_get_sarprop_weight_decay_shift(resource $ann)		
fann_get_total_connections(resource $ann)		
fann_get_total_neurons(resource $ann)		
fann_get_train_error_function(resource $ann)		
fann_get_train_stop_function(resource $ann)		
fann_get_training_algorithm(resource $ann)		
fann_init_weights(resource $ann, resource $train_data)		
fann_length_train_data(resource $data)		
fann_merge_train_data(resource $data1, resource $data2)		
fann_num_input_train_data(resource $data)		
fann_num_output_train_data(resource $data)		
fann_print_error(resource $errdat)		
fann_randomize_weights(resource $ann, float $min_weight, float $max_weight)		
fann_read_train_from_file(string $filename)		
fann_reset_MSE(string $ann)		
fann_reset_errno(resource $errdat)		
fann_reset_errstr(resource $errdat)		
fann_run(resource $ann, array $input)		
fann_save(resource $ann, string $configuration_file)		
fann_save_train(resource $data, string $file_name)		
fann_scale_input(resource $ann, array $input_vector)		
fann_scale_input_train_data(resource $train_data, float $new_min, float $new_max)		
fann_scale_output(resource $ann, array $output_vector)		
fann_scale_output_train_data(resource $train_data, float $new_min, float $new_max)		
fann_scale_train(resource $ann, resource $train_data)		
fann_scale_train_data(resource $train_data, float $new_min, float $new_max)		
fann_set_activation_function(resource $ann, int $activation_function, int $layer, int $neuron)		
fann_set_activation_function_hidden(resource $ann, int $activation_function)		
fann_set_activation_function_layer(resource $ann, int $activation_function, int $layer)		
fann_set_activation_function_output(resource $ann, int $activation_function)		
fann_set_activation_steepness(resource $ann, float $activation_steepness, int $layer, int $neuron)		
fann_set_activation_steepness_hidden(resource $ann, float $activation_steepness)		
fann_set_activation_steepness_layer(resource $ann, float $activation_steepness, int $layer)		
fann_set_activation_steepness_output(resource $ann, float $activation_steepness)		
fann_set_bit_fail_limit(resource $ann, float $bit_fail_limit)		
fann_set_callback(resource $ann, collable $callback)		
fann_set_cascade_activation_functions(resource $ann, array $cascade_activation_functions)		
fann_set_cascade_activation_steepnesses(resource $ann, array $cascade_activation_steepnesses_count)		
fann_set_cascade_candidate_change_fraction(resource $ann, float $cascade_candidate_change_fraction)		
fann_set_cascade_candidate_limit(resource $ann, float $cascade_candidate_limit)		
fann_set_cascade_candidate_stagnation_epochs(resource $ann, int $cascade_candidate_stagnation_epochs)		
fann_set_cascade_max_cand_epochs(resource $ann, int $cascade_max_cand_epochs)		
fann_set_cascade_max_out_epochs(resource $ann, int $cascade_max_out_epochs)		
fann_set_cascade_min_cand_epochs(resource $ann, int $cascade_min_cand_epochs)		
fann_set_cascade_min_out_epochs(resource $ann, int $cascade_min_out_epochs)		
fann_set_cascade_num_candidate_groups(resource $ann, int $cascade_num_candidate_groups)		
fann_set_cascade_output_change_fraction(resource $ann, float $cascade_output_change_fraction)		
fann_set_cascade_output_stagnation_epochs(resource $ann, int $cascade_output_stagnation_epochs)		
fann_set_cascade_weight_multiplier(resource $ann, float $cascade_weight_multiplier)		
fann_set_error_log(resource $errdat, string $log_file)		
fann_set_input_scaling_params(resource $ann, resource $train_data, float $new_input_min, float $new_input_max)		
fann_set_learning_momentum(resource $ann, float $learning_momentum)		
fann_set_learning_rate(resource $ann, float $learning_rate)		
fann_set_output_scaling_params(resource $ann, resource $train_data, float $new_output_min, float $new_output_max)		
fann_set_quickprop_decay(resource $ann, float $quickprop_decay)		
fann_set_quickprop_mu(resource $ann, float $quickprop_mu)		
fann_set_rprop_decrease_factor(resource $ann, float $rprop_decrease_factor)		
fann_set_rprop_delta_max(resource $ann, float $rprop_delta_max)		
fann_set_rprop_delta_min(resource $ann, float $rprop_delta_min)		
fann_set_rprop_delta_zero(resource $ann, float $rprop_delta_zero)		
fann_set_rprop_increase_factor(resource $ann, float $rprop_increase_factor)		
fann_set_sarprop_step_error_shift(resource $ann, float $sarprop_step_error_shift)		
fann_set_sarprop_step_error_threshold_factor(resource $ann, float $sarprop_step_error_threshold_factor)		
fann_set_sarprop_temperature(resource $ann, float $sarprop_temperature)		
fann_set_sarprop_weight_decay_shift(resource $ann, float $sarprop_weight_decay_shift)		
fann_set_scaling_params(resource $ann, resource $train_data, float $new_input_min, float $new_input_max, float $new_output_min, float $new_output_max)		
fann_set_train_error_function(resource $ann, int $error_function)		
fann_set_train_stop_function(resource $ann, int $stop_function)		
fann_set_training_algorithm(resource $ann, int $training_algorithm)		
fann_set_weight(resource $ann, int $from_neuron, int $to_neuron, float $weight)		
fann_set_weight_array(resource $ann, array $connections)		
fann_shuffle_train_data(resource $train_data)		
fann_subset_train_data(resource $data, int $pos, int $length)		
fann_test(resource $ann, array $input, array $desired_output)		
fann_test_data(resource $ann, resource $data)		
fann_train(resource $ann, array $input, array $desired_output)		
fann_train_epoch(resource $ann, resource $data)		
fann_train_on_data(resource $ann, resource $data, int $max_epochs, int $epochs_between_reports, float $desired_error)		
fann_train_on_file(resource $ann, string $filename, int $max_epochs, int $epochs_between_reports, float $desired_error)		
fastcgi_finish_request()		
fault(string $code, string $string [, string $actor = '' [, string $details = '' [, string $name = '']]])		
fbsql_affected_rows([resource $link_identifier = ''])		
fbsql_autocommit(resource $link_identifier [, bool $OnOff = ''])		
fbsql_blob_size(string $blob_handle [, resource $link_identifier = ''])		
fbsql_change_user(string $user, string $password [, string $database = '' [, resource $link_identifier = '']])		
fbsql_clob_size(string $clob_handle [, resource $link_identifier = ''])		
fbsql_close([resource $link_identifier = ''])		
fbsql_commit([resource $link_identifier = ''])		
fbsql_connect("fbsql.default_password")		
fbsql_create_blob(string $blob_data [, resource $link_identifier = ''])		
fbsql_create_clob(string $clob_data [, resource $link_identifier = ''])		
fbsql_create_db(string $database_name [, resource $link_identifier = '' [, string $database_options = '']])		
fbsql_data_seek(resource $result, int $row_number)		
fbsql_database(resource $link_identifier [, string $database = ''])		
fbsql_database_password(resource $link_identifier [, string $database_password = ''])		
fbsql_db_query(string $database, string $query [, resource $link_identifier = ''])		
fbsql_db_status(string $database_name [, resource $link_identifier = ''])		
fbsql_drop_db(string $database_name [, resource $link_identifier = ''])		
fbsql_errno([resource $link_identifier = ''])		
fbsql_error([resource $link_identifier = ''])		
fbsql_fetch_array(resource $result [, int $result_type = ''])		
fbsql_fetch_assoc(resource $result)		
fbsql_fetch_field(resource $result [, int $field_offset = ''])		
fbsql_fetch_lengths(resource $result)		
fbsql_fetch_object(resource $result)		
fbsql_fetch_row(resource $result)		
fbsql_field_flags(resource $result [, int $field_offset = ''])		
fbsql_field_len(resource $result [, int $field_offset = ''])		
fbsql_field_name(resource $result [, int $field_index = ''])		
fbsql_field_seek(resource $result [, int $field_offset = ''])		
fbsql_field_table(resource $result [, int $field_offset = ''])		
fbsql_field_type(resource $result [, int $field_offset = ''])		
fbsql_free_result(resource $result)		
fbsql_get_autostart_info([resource $link_identifier = ''])		
fbsql_hostname(resource $link_identifier [, string $host_name = ''])		
fbsql_insert_id([resource $link_identifier = ''])		
fbsql_list_dbs([resource $link_identifier = ''])		
fbsql_list_fields(string $database_name, string $table_name [, resource $link_identifier = ''])		
fbsql_list_tables(string $database [, resource $link_identifier = ''])		
fbsql_next_result(resource $result)		
fbsql_num_fields(resource $result)		
fbsql_num_rows(resource $result)		
fbsql_password(resource $link_identifier [, string $password = ''])		
fbsql_pconnect("fbsql.default_password")		
fbsql_query(string $query [, resource $link_identifier = '' [, int $batch_size = '']])		
fbsql_read_blob(string $blob_handle [, resource $link_identifier = ''])		
fbsql_read_clob(string $clob_handle [, resource $link_identifier = ''])		
fbsql_result(resource $result [, int $row = '' [, mixed $field = '']])		
fbsql_rollback([resource $link_identifier = ''])		
fbsql_rows_fetched(resource $result)		
fbsql_select_db([string $database_name = '' [, resource $link_identifier = '']])		
fbsql_set_characterset(resource $link_identifier, int $characterset [, int $in_out_both = ''])		
fbsql_set_lob_mode(resource $result, int $lob_mode)		
fbsql_set_password(resource $link_identifier, string $user, string $password, string $old_password)		
fbsql_set_transaction(resource $link_identifier, int $locking, int $isolation)		
fbsql_start_db(string $database_name [, resource $link_identifier = '' [, string $database_options = '']])		
fbsql_stop_db(string $database_name [, resource $link_identifier = ''])		
fbsql_table_name(resource $result, int $index)		
fbsql_tablename()		
fbsql_username(resource $link_identifier [, string $username = ''])		
fbsql_warnings([bool $OnOff = ''])		
fclose(resource $handle)		
fdf_add_doc_javascript(resource $fdf_document, string $script_name, string $script_code)		
fdf_add_template(resource $fdf_document, int $newpage, string $filename, string $template, int $rename)		
fdf_close(resource $fdf_document)		
fdf_create()		
fdf_enum_values(resource $fdf_document, callable $function [, mixed $userdata = ''])		
fdf_errno()		
fdf_error([int $error_code = -1])		
fdf_get_ap(resource $fdf_document, string $field, int $face, string $filename)		
fdf_get_attachment(resource $fdf_document, string $fieldname, string $savepath)		
fdf_get_encoding(resource $fdf_document)		
fdf_get_file(resource $fdf_document)		
fdf_get_flags(resource $fdf_document, string $fieldname, int $whichflags)		
fdf_get_opt(resource $fdf_document, string $fieldname [, int $element = -1])		
fdf_get_status(resource $fdf_document)		
fdf_get_value(resource $fdf_document, string $fieldname [, int $which = -1])		
fdf_get_version([resource $fdf_document = ''])		
fdf_header()		
fdf_next_field_name(resource $fdf_document [, string $fieldname = ''])		
fdf_open(string $filename)		
fdf_open_string(string $fdf_data)		
fdf_remove_item(resource $fdf_document, string $fieldname, int $item)		
fdf_save(resource $fdf_document [, string $filename = ''])		
fdf_save_string(resource $fdf_document)		
fdf_set_ap(resource $fdf_document, string $field_name, int $face, string $filename, int $page_number)		
fdf_set_encoding(resource $fdf_document, string $encoding)		
fdf_set_file(resource $fdf_document, string $url [, string $target_frame = ''])		
fdf_set_flags(resource $fdf_document, string $fieldname, int $whichFlags, int $newFlags)		
fdf_set_javascript_action(resource $fdf_document, string $fieldname, int $trigger, string $script)		
fdf_set_on_import_javascript(resource $fdf_document, string $script, bool $before_data_import)		
fdf_set_opt(resource $fdf_document, string $fieldname, int $element, string $str1, string $str2)		
fdf_set_status(resource $fdf_document, string $status)		
fdf_set_submit_form_action(resource $fdf_document, string $fieldname, int $trigger, string $script, int $flags)		
fdf_set_target_frame(resource $fdf_document, string $frame_name)		
fdf_set_value(resource $fdf_document, string $fieldname, mixed $value [, int $isName = ''])		
fdf_set_version(resource $fdf_document, string $version)		
feed(int $revents)		
feedSignal(int $signum)		
feedSignalEvent(int $signum)		
feof(resource $handle)		
fetch()		
fetch(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
fetch(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
fetch(mysqli_stmt $stmt)		
fetch(resource $stmt)		
fetch([int $fetch_style = '' [, int $cursor_orientation = PDO::FETCH_ORI_NEXT [, int $cursor_offset = '']]])		
fetch(string $protected_resource_url [, array $extra_parameters = '' [, string $http_method = '' [, array $http_headers = '']]])		
fetchAll()		
fetchAll()		
fetchAll()		
fetchAll()		
fetchAll()		
fetchAll(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
fetchAll(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
fetchArray([int $mode = SQLITE3_BOTH])		
fetchColumn([int $column_number = ''])		
fetchColumnTypes(string $table_name, resource $dbhandle [, int $result_type = SQLITE_ASSOC])		
fetchObject([string $class_name = "stdClass" [, array $ctor_args = '']])		
fetchObject(resource $result [, string $class_name = '' [, array $ctor_params = '' [, bool $decode_binary = '']]])		
fetchObject(resource $result [, string $class_name = '' [, array $ctor_params = '' [, bool $decode_binary = '']]])		
fetchOne()		
fetchOne()		
fetchOne()		
fetchSingle(resource $result [, bool $decode_binary = ''])		
fetchSingle(resource $result [, bool $decode_binary = ''])		
fetch_all([int $resulttype = MYSQLI_NUM, mysqli_result $result])		
fetch_array([int $resulttype = MYSQLI_BOTH, mysqli_result $result])		
fetch_array(resource $result [, int $resulttype = ''])		
fetch_assoc(mysqli_result $result)		
fetch_assoc(resource $result)		
fetch_field(resource $result)		
fetch_field(mysqli_result $result)		
fetch_field_direct(resource $result, int $fieldnr)		
fetch_field_direct(int $fieldnr, mysqli_result $result)		
fetch_fields(mysqli_result $result)		
fetch_fields(resource $result)		
fetch_object([string $class_name = "stdClass" [, array $params = '', mysqli_result $result]])		
fetch_object(object $result)		
fetch_row(mysqli_result $result)		
fetch_row(resource $result)		
fflush(resource $handle)		
fflush()		
fgetc(resource $handle)		
fgetc()		
fgetcsv(resource $handle [, int $length = '' [, string $delimiter = "," [, string $enclosure = '"' [, string $escape = "\\"]]]])		
fgetcsv([string $delimiter = "," [, string $enclosure = "\"" [, string $escape = "\\"]]])		
fgets(resource $handle [, int $length = ''])		
fgets()		
fgetss(resource $handle [, int $length = '' [, string $allowable_tags = '']])		
fgetss([string $allowable_tags = ''])		
fieldDifference(float $when, int $field, IntlCalendar $cal)		
fieldExists(string $fieldName)		
fieldExists(string $fieldName)		
fieldName(resource $result, int $field_index)		
fieldName(resource $result, int $field_index)		
field_count(resource $link)		
field_count(resource $result)		
field_seek(int $fieldnr, mysqli_result $result)		
field_seek(resource $result, int $fieldnr)		
fields(array $f)		
fields(string $projection)		
file(string $filename [, int $flags = '' [, resource $context = '']])		
file(string $file_name [, int $options = FILEINFO_NONE [, resource $context = '']])		
fileName(string $fileName [, string $sheetName = ''])		
file_exists(string $filename)		
file_get_contents(string $filename [, bool $use_include_path = '' [, resource $context = '' [, int $offset = '' [, int $maxlen = '']]]])		
file_info(string $path)		
file_put_contents(string $filename, mixed $data [, int $flags = '' [, resource $context = '']])		
fileatime(string $filename)		
filectime(string $filename)		
filegroup(string $filename)		
fileinode(string $filename)		
filemtime(string $filename)		
fileowner(string $filename)		
fileperms(string $filename)		
filepro(string $directory)		
filepro_fieldcount()		
filepro_fieldname(int $field_number)		
filepro_fieldtype(int $field_number)		
filepro_fieldwidth(int $field_number)		
filepro_retrieve(int $row_number, int $field_number)		
filepro_rowcount()		
filesize(string $filename)		
filetype(string $filename)		
fill(UI\Draw\Path $path, int $with)		
fill()		
fill(CairoContext $context)		
fillExtents(CairoContext $context)		
fillPreserve(CairoContext $context)		
fillStroke([bool $close_path = ''])		
filter(ImagickKernel $ImagickKernel [, int $channel = Imagick::CHANNEL_UNDEFINED])		
filter([callable $callback = ''])		
filter([callable $callback = ''])		
filter([callable $callback = ''])		
filter([callable $callback = ''])		
filter([callable $callback = ''])		
filter(resource $in, resource $out, int $consumed, bool $closing)		
filterMatches(string $langtag, string $locale [, bool $canonicalize = ''])		
filter_has_var(int $type, string $variable_name)		
filter_id(string $filtername)		
filter_input(int $type, string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options = '']])		
filter_input_array(int $type [, mixed $definition = '' [, bool $add_empty = '']])		
filter_list()		
filter_var(mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options = '']])		
filter_var_array(array $data [, mixed $definition = '' [, bool $add_empty = '']])		
finalize()		
find()		
find()		
find(array $parameter)		
find(mixed $value)		
find(mixed $value)		
find(mixed $value)		
find([string $search_condition = ''])		
findAndModify(array $query [, array $update = '' [, array $fields = '' [, array $options = '']]])		
findHeader(string $key, string $type)		
findOne()		
findOne()		
finfo([int $options = FILEINFO_NONE [, string $magic_file = '']])		
finfo_buffer(resource $finfo, string $string [, int $options = FILEINFO_NONE [, resource $context = '']])		
finfo_close(resource $finfo)		
finfo_file(resource $finfo, string $file_name [, int $options = FILEINFO_NONE [, resource $context = '']])		
finfo_open([int $options = FILEINFO_NONE [, string $magic_file = '']])		
finfo_set_flags(resource $finfo, int $options)		
finish()		
finish()		
finish(string $data)		
fire()		
first()		
first()		
first()		
first()		
first()		
first()		
first([mixed $index = ''])		
first()		
firstEmpty([mixed $index = ''])		
flattenImages()		
flipImage()		
flipimage()		
floatval(mixed $var)		
flock(resource $handle, int $operation [, int $wouldblock = ''])		
flock(int $operation [, int $wouldblock = ''])		
floodFillPaintImage(mixed $fill, float $fuzz, mixed $target, int $x, int $y, bool $invert [, int $channel = Imagick::CHANNEL_DEFAULT])		
floor(float $value)		
flopImage()		
flopimage()		
flush()		
flush()		
flush([int $delay = ''])		
flush([int $flag = ''])		
flush([bool $empty = '', resource $xmlwriter])		
flush()		
flushBuffer()		
flushInstantly([bool $flag = ''])		
fmod(float $x, float $y)		
fnmatch(string $pattern, string $string [, int $flags = ''])		
foldCase(mixed $codepoint [, int $options = ''])		
following(int $offset)		
fontExtents(CairoContext $context)		
fontFamilies()		
fopen(string $filename, string $mode [, bool $use_include_path = '' [, resource $context = '']])		
forDigit(int $digit [, int $radix = 10])		
forceError()		
fork(callable $callback [, mixed $data = '' [, int $priority = '']])		
format(string $type [, string $value = ''])		
format(array $args, MessageFormatter $fmt)		
format(mixed $value, IntlDateFormatter $fmt)		
format(number $value [, int $type = '', NumberFormatter $fmt])		
format(string $format)		
format(string $format, DateTimeInterface $object)		
format(string $format, DateTimeInterface $object)		
format(string $format, DateTimeInterface $object)		
formatCurrency(float $value, string $currency, NumberFormatter $fmt)		
formatMessage(string $locale, string $pattern, array $args)		
formatObject(object $object [, mixed $format = null [, string $locale = null]])		
forward(string $action [, array $paramters = '', string $controller, string $module])		
forwardFourierTransformImage(bool $magnitude)		
forward_static_call(callable $function [, mixed $parameter = '' [, mixed $... = '']])		
forward_static_call_array(callable $function, array $parameters)		
fpassthru(resource $handle)		
fpassthru()		
fprintf(resource $handle, string $format [, mixed $args = '' [, mixed $... = '']])		
fputcsv(resource $handle, array $fields [, string $delimiter = "," [, string $enclosure = '"' [, string $escape_char = "\\"]]])		
fputcsv(array $fields [, string $delimiter = "," [, string $enclosure = '"' [, string $escape = "\\"]]])		
fputs()		
frameImage(mixed $matte_color, int $width, int $height, int $inner_bevel, int $outer_bevel)		
frameimage(GmagickPixel $color, int $width, int $height, int $inner_bevel, int $outer_bevel)		
fread(resource $handle, int $length)		
fread(int $length)		
free()		
free()		
free()		
free()		
free()		
free()		
free()		
free(mysqli_result $result)		
free(resource $result)		
freeQueue()		
free_result(mysqli_result $result)		
free_result(mysqli_stmt $stmt)		
free_result(resource $stmt)		
freeze(bool $at_front)		
frenchtojd(int $month, int $day, int $year)		
fribidi_log2vis(string $str, string $direction, int $charset)		
from(Closure $run [, Closure $construct = '' [, array $args = '']])		
fromArray(array $array [, bool $save_indexes = ''])		
fromBuiltIn(int $kernelType, string $kernelString)		
fromDateTime(mixed $dateTime)		
fromDateTimeZone(DateTimeZone $zoneId)		
fromJSON(string $json)		
fromMatrix(array $matrix [, array $origin = ''])		
fromPHP(array|object $value)		
fromUCallback(int $reason, string $source, string $codePoint, int $error)		
front()		
fscanf(resource $handle, string $format [, mixed $... = ''])		
fscanf(string $format [, mixed $... = ''])		
fseek(resource $handle, int $offset [, int $whence = SEEK_SET])		
fseek(int $offset [, int $whence = SEEK_SET])		
fsockopen("default_socket_timeout")		
fstat(resource $handle)		
fstat()		
ftell(resource $handle)		
ftell()		
ftok(string $pathname, string $proj)		
ftp_alloc(resource $ftp_stream, int $filesize [, string $result = ''])		
ftp_append(resource $ftp, string $remote_file, string $local_file [, int $mode = ''])		
ftp_cdup(resource $ftp_stream)		
ftp_chdir(resource $ftp_stream, string $directory)		
ftp_chmod(resource $ftp_stream, int $mode, string $filename)		
ftp_close(resource $ftp_stream)		
ftp_connect(string $host [, int $port = 21 [, int $timeout = 90]])		
ftp_delete(resource $ftp_stream, string $path)		
ftp_exec(resource $ftp_stream, string $command)		
ftp_fget(resource $ftp_stream, resource $handle, string $remote_file [, int $mode = '' [, int $resumepos = '']])		
ftp_fput(resource $ftp_stream, string $remote_file, resource $handle [, int $mode = '' [, int $startpos = '']])		
ftp_get(resource $ftp_stream, string $local_file, string $remote_file [, int $mode = '' [, int $resumepos = '']])		
ftp_get_option(resource $ftp_stream, int $option)		
ftp_login(resource $ftp_stream, string $username, string $password)		
ftp_mdtm(resource $ftp_stream, string $remote_file)		
ftp_mkdir(resource $ftp_stream, string $directory)		
ftp_mlsd(resource $ftp_stream, string $directory)		
ftp_nb_continue(resource $ftp_stream)		
ftp_nb_fget(resource $ftp_stream, resource $handle, string $remote_file [, int $mode = '' [, int $resumepos = '']])		
ftp_nb_fput(resource $ftp_stream, string $remote_file, resource $handle [, int $mode = '' [, int $startpos = '']])		
ftp_nb_get(resource $ftp_stream, string $local_file, string $remote_file [, int $mode = '' [, int $resumepos = '']])		
ftp_nb_put(resource $ftp_stream, string $remote_file, string $local_file [, int $mode = '' [, int $startpos = '']])		
ftp_nlist(resource $ftp_stream, string $directory)		
ftp_pasv(resource $ftp_stream, bool $pasv)		
ftp_put(resource $ftp_stream, string $remote_file, string $local_file [, int $mode = '' [, int $startpos = '']])		
ftp_pwd(resource $ftp_stream)		
ftp_quit()		
ftp_raw(resource $ftp_stream, string $command)		
ftp_rawlist(resource $ftp_stream, string $directory [, bool $recursive = ''])		
ftp_rename(resource $ftp_stream, string $oldname, string $newname)		
ftp_rmdir(resource $ftp_stream, string $directory)		
ftp_set_option(resource $ftp_stream, int $option, mixed $value)		
ftp_site(resource $ftp_stream, string $command)		
ftp_size(resource $ftp_stream, string $remote_file)		
ftp_ssl_connect(string $host [, int $port = 21 [, int $timeout = 90]])		
ftp_systype(resource $ftp_stream)		
ftruncate(resource $handle, int $size)		
ftruncate(int $size)		
ftstat(array $parameter)		
fullEndElement(resource $xmlwriter)		
func_get_arg(int $arg_num)		
func_get_args()		
func_num_args()		
function()		
functionImage(int $function, array $arguments [, int $channel = Imagick::CHANNEL_DEFAULT])		
functionName()		
functionName()		
function_exists(string $function_name)		
fwmKeys(string $prefix, int $max_recs)		
fwrite(resource $handle, string $string [, int $length = ''])		
fwrite(string $str [, int $length = ''])		
fxImage(string $expression [, int $channel = Imagick::CHANNEL_DEFAULT])		
gammaImage(float $gamma [, int $channel = Imagick::CHANNEL_DEFAULT])		
gammaimage(float $gamma)		
gaussianBlurImage(float $radius, float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT])		
gc(int $maxlifetime)		
gc(int $maxlifetime)		
gc_collect_cycles()		
gc_disable()		
gc_enable()		
gc_enabled()		
gc_mem_caches()		
gd_info()		
gearman_job_handle()		
gearman_job_status(string $job_handle)		
genUid()		
generateSignature(string $http_method, string $url [, mixed $extra_parameters = ''])		
generateToken(int $size [, bool $strong = ''])		
generateUUID()		
geoip_asnum_by_name(string $hostname)		
geoip_continent_code_by_name(string $hostname)		
geoip_country_code3_by_name(string $hostname)		
geoip_country_code_by_name(string $hostname)		
geoip_country_name_by_name(string $hostname)		
geoip_database_info([int $database = GEOIP_COUNTRY_EDITION])		
geoip_db_avail(int $database)		
geoip_db_filename(int $database)		
geoip_db_get_all_info()		
geoip_domain_by_name(string $hostname)		
geoip_id_by_name(string $hostname)		
geoip_isp_by_name(string $hostname)		
geoip_netspeedcell_by_name(string $hostname)		
geoip_org_by_name(string $hostname)		
geoip_record_by_name(string $hostname)		
geoip_region_by_name(string $hostname)		
geoip_region_name_by_code(string $country_code, string $region_code)		
geoip_setup_custom_directory(string $path)		
geoip_time_zone_by_country_and_region(string $country_code [, string $region_code = ''])		
get(mixed $id)		
get()		
get(MongoDB $db, array $ref)		
get(mixed $keys)		
get(mixed $keys)		
get(string $key [, array $flags = '', array $keys])		
get()		
get(int $field, IntlCalendar $cal)		
get(int $key)		
get(string $name [, int $country = ''])		
get()		
get(string $row_key, string $column_key)		
get(int $index)		
get(int $index)		
get(int $index)		
get(int $index)		
get(int $key)		
get(mixed $object_id [, bool $preserve_keys = ''])		
get(string $key [, callable $cache_cb = '' [, int $flags = '']])		
get(string $key)		
get(string $name [, mixed $default_value = null])		
get(string $name [, string $default = ''])		
get(string $name)		
get(string $name, mixed $value)		
get(string $param_name)		
get(string|int $index [, bool $fallback = '', ResourceBundle $r])		
get()		
get(mixed $key [, mixed $default = ''])		
get(string $key)		
get(string $path [, callable $watcher_cb = '' [, array $stat = '' [, int $max_size = '']]])		
get()		
get(string $path, callable $callback)		
getATime()		
getATime()		
getAccessToken(string $access_token_url [, string $auth_session_handle = '' [, string $verifier_token = '' [, string $http_method = '']]])		
getAcl(string $path)		
getActionName()		
getActualMaximum(int $field, IntlCalendar $cal)		
getActualMinimum(int $field, IntlCalendar $cal)		
getAffectedItemsCount()		
getAffectedRows(mysqlnd_connection $connection)		
getAlbum()		
getAlias()		
getAliases(string $name)		
getAllKeys()		
getAllVariants(string $locale)		
getAntialias(CairoContext $context)		
getAntialias(CairoContext $context)		
getAppDirectory()		
getApplication()		
getArchiveComment([int $flags = ''])		
getArrayCopy()		
getArrayCopy()		
getArrayIterator()		
getArtist()		
getAscent()		
getAscent()		
getAscent()		
getAscent()		
getAttr()		
getAttribute(int $attr, Collator $coll)		
getAttribute(int $attr, NumberFormatter $fmt)		
getAttribute(int $attribute)		
getAttribute(int $attribute)		
getAttribute(string $name)		
getAttribute(string $name)		
getAttributeNS(string $namespaceURI, string $localName)		
getAttributeNo(int $index)		
getAttributeNode(string $name)		
getAttributeNodeNS(string $namespaceURI, string $localName)		
getAttributeNs(string $localName, string $namespaceURI)		
getAudioProperties()		
getAuthor()		
getAutoIncrementValue()		
getAvailable()		
getAvailableDrivers()		
getAvailableLocales()		
getBase()		
getBase()		
getBasePath()		
getBaseType()		
getBaseUri()		
getBasename([string $suffix = ''])		
getBasename([string $suffix = ''])		
getBidiPairedBracket(mixed $codepoint)		
getBinaryRules()		
getBitrate()		
getBitsPerComponent()		
getBlockCode(mixed $codepoint)		
getBody([string $key = ''])		
getBoost()		
getBreakIterator()		
getBuffer()		
getBuffer()		
getBufferEnabled()		
getBufferEvent()		
getBuffering()		
getById(string $id)		
getByIds(array $ids)		
getByKey(string $server_key, string $key [, callable $cache_cb = '' [, int $flags = '']])		
getByteType(string $text, int $index)		
getBytes()		
getCAPath()		
getCMYKFill()		
getCMYKStroke()		
getCRC32()		
getCTime()		
getCTime()		
getCache()		
getCalendar(IntlDateFormatter $fmt)		
getCalendarObject()		
getCallback()		
getCanonicalID(string $zoneId [, bool $isSystemID = ''])		
getCap()		
getCapHeight()		
getCause()		
getChangeSummary()		
getChangeType(SDO_DataObject $dataObject)		
getChangedDataObjects()		
getChannel(int $channel)		
getChannels()		
getCharSpace()		
getCharacterSetName()		
getChildDocuments()		
getChildDocuments()		
getChildDocumentsCount()		
getChildDocumentsCount()		
getChildren()		
getChildren()		
getChildren()		
getChildren()		
getChildren()		
getChildren()		
getChildren()		
getChildren()		
getChildren(string $path [, callable $watcher_cb = ''])		
getChildren()		
getChildren()		
getCircles()		
getClass()		
getClassNames()		
getClasses()		
getClientId()		
getClientId()		
getClientInfo(integer $fd [, integer $reactor_id = ''])		
getClientList(integer $start_fd [, integer $pagesize = ''])		
getClipPath()		
getClipRule()		
getClipUnits()		
getClosure(string $name)		
getClosure(string $name)		
getClosure()		
getClosure(object $object)		
getClosureScopeClass()		
getClosureThis()		
getClosures()		
getClosures()		
getClusterTime()		
getCode()		
getCode()		
getCode()		
getCode()		
getCollationName()		
getCollection(string $name)		
getCollectionAsTable(string $name)		
getCollectionInfo()		
getCollectionNames()		
getCollections()		
getColor()		
getColor()		
getColor([int $normalized = ''])		
getColorAsString()		
getColorCount()		
getColorQuantum()		
getColorSpace()		
getColorStopCount()		
getColorStopRgba(int $index)		
getColorValue(int $color)		
getColorValueQuantum(int $color)		
getColorspace()		
getColumnCount()		
getColumnCount()		
getColumnLabel()		
getColumnMeta(int $column)		
getColumnName()		
getColumnNames()		
getColumnNames()		
getColumns()		
getColumns()		
getCombiningClass(mixed $codepoint)		
getCommand()		
getCommand()		
getCommandName()		
getCommandName()		
getCommandName()		
getComment()		
getComment(RarArchive $rarfile)		
getCommentIndex(int $index [, int $flags = ''])		
getCommentName(string $name [, int $flags = ''])		
getCompressedSize()		
getCompression()		
getCompressionQuality()		
getConfig()		
getConfig()		
getConfig(tidy $object)		
getConnection()		
getConnections()		
getConstList([bool $include_default = ''])		
getConstant(string $name)		
getConstants()		
getConstants()		
getConstructor()		
getContainer()		
getContainingType()		
getContainmentProperty()		
getContent()		
getContent()		
getController()		
getControllerName()		
getCookie(string $name [, string $default = ''])		
getCookie()		
getCopyright()		
getCopyright()		
getCrc()		
getCreatorId()		
getCsvControl()		
getCtm()		
getCurrentEncoder()		
getCurrentFont()		
getCurrentFontSize()		
getCurrentIteratorRow()		
getCurrentLine()		
getCurrentPage()		
getCurrentPoint(CairoContext $context)		
getCurrentPos()		
getCurrentRoute()		
getCurrentTextPos()		
getCurrentThread()		
getCurrentThreadId()		
getDBRef(array $ref)		
getDBRef(array $ref)		
getDSTSavings()		
getDash()		
getDash(CairoContext $context)		
getDashCount(CairoContext $context)		
getData()		
getData()		
getData()		
getDataFactory()		
getDatabaseName()		
getDateInterval()		
getDateType(IntlDateFormatter $fmt)		
getDatetimeFormat()		
getDayOfWeekType(int $dayOfWeek, IntlCalendar $cal)		
getDebug()		
getDeclaringClass()		
getDeclaringClass()		
getDeclaringClass()		
getDeclaringClass()		
getDeclaringFunction()		
getDefault()		
getDefault()		
getDefaultProperties()		
getDefaultValue()		
getDefaultValueConstantName()		
getDefer()		
getDefer()		
getDelayed(array $keys [, bool $with_cas = '' [, callable $value_cb = '']])		
getDelayedByKey(string $server_key, array $keys [, bool $with_cas = '' [, callable $value_cb = '']])		
getDeletedCount()		
getDependencies()		
getDepth()		
getDescent()		
getDescent()		
getDescent()		
getDescent()		
getDescription()		
getDestinationEncoding()		
getDestinationType()		
getDetails()		
getDeviceOffset()		
getDigestedResponse()		
getDispatcher()		
getDisplayLanguage(string $locale [, string $in_locale = ''])		
getDisplayName([bool $isDaylight = '' [, int $style = '' [, string $locale = '']]])		
getDisplayName(string $locale [, string $in_locale = ''])		
getDisplayRegion(string $locale [, string $in_locale = ''])		
getDisplayScript(string $locale [, string $in_locale = ''])		
getDisplayVariant(string $locale [, string $in_locale = ''])		
getDnsErrorString()		
getDocComment()		
getDocComment()		
getDocComment()		
getDocComment()		
getDocNamespaces([bool $recursive = '' [, bool $from_root = '']])		
getDocument()		
getDocument()		
getDurationMicros()		
getDurationMicros()		
getElapsedTicks()		
getElapsedTime([int $unit = ''])		
getElem(int $index)		
getElementById(string $elementId)		
getElementsByTagName(string $name)		
getElementsByTagName(string $name)		
getElementsByTagNameNS(string $namespaceURI, string $localName)		
getElementsByTagNameNS(string $namespaceURI, string $localName)		
getEnabled()		
getEncoder(string $encoding)		
getEncodingName()		
getEndDate()		
getEndLine()		
getEndLine()		
getEndpoints()		
getEntries(RarArchive $rarfile)		
getEntry(string $entryname, RarArchive $rarfile)		
getEntry()		
getEnv(string $name [, string $default = ''])		
getEps()		
getEquivalentID(string $zoneId, int $index)		
getErrno()		
getErrno()		
getErrno()		
getError()		
getError()		
getErrorCode()		
getErrorCode()		
getErrorCode()		
getErrorCode()		
getErrorCode(Collator $coll)		
getErrorCode(IntlCalendar $calendar)		
getErrorCode(IntlDateFormatter $fmt)		
getErrorCode(MessageFormatter $fmt)		
getErrorCode(NumberFormatter $fmt)		
getErrorCode(ResourceBundle $r)		
getErrorMessage()		
getErrorMessage()		
getErrorMessage()		
getErrorMessage()		
getErrorMessage(Collator $coll)		
getErrorMessage(IntlCalendar $calendar)		
getErrorMessage(IntlDateFormatter $fmt)		
getErrorMessage(MessageFormatter $fmt)		
getErrorMessage(NumberFormatter $fmt)		
getErrorMessage(ResourceBundle $r)		
getErrorNumber(mysqlnd_connection $connection)		
getErrorString(mysqlnd_connection $connection)		
getException()		
getExecutingFile()		
getExecutingGenerator()		
getExecutingLine()		
getExpand()		
getExpandFilterQueries()		
getExpandQuery()		
getExpandRows()		
getExpandSortFields()		
getExtend()		
getExtend()		
getExtendedStats([string $type = '' [, int $slabid = '' [, int $limit = 100]]])		
getExtension()		
getExtension()		
getExtension()		
getExtension()		
getExtensionName()		
getExtensionName()		
getExtensions()		
getExternalAttributesIndex(int $index, int $opsys, int $attr [, int $flags = ''])		
getExternalAttributesName(string $name, int $opsys, int $attr [, int $flags = ''])		
getExtractFlags()		
getFC_NFKC_Closure(mixed $codepoint)		
getFacet()		
getFacetDateEnd([string $field_override = ''])		
getFacetDateFields()		
getFacetDateGap([string $field_override = ''])		
getFacetDateHardEnd([string $field_override = ''])		
getFacetDateOther([string $field_override = ''])		
getFacetDateStart([string $field_override = ''])		
getFacetFields()		
getFacetLimit([string $field_override = ''])		
getFacetMethod([string $field_override = ''])		
getFacetMinCount([string $field_override = ''])		
getFacetMissing([string $field_override = ''])		
getFacetOffset([string $field_override = ''])		
getFacetPrefix([string $field_override = ''])		
getFacetQueries()		
getFacetSort([string $field_override = ''])		
getFamily()		
getFeatures()		
getField(string $fieldName)		
getField(string $fieldName)		
getField()		
getFieldBoost(string $fieldName)		
getFieldCount()		
getFieldCount()		
getFieldCount(mysqlnd_connection $connection)		
getFieldNames()		
getFieldNames()		
getFields()		
getFileInfo([string $class_name = ''])		
getFileName()		
getFileName()		
getFileTime()		
getFilename()		
getFilename()		
getFilename()		
getFilename()		
getFilename()		
getFiles()		
getFiles()		
getFillColor()		
getFillOpacity()		
getFillRule()		
getFillRule(CairoContext $context)		
getFillingColorSpace()		
getFilter()		
getFilterQueries()		
getFirstDayOfWeek(IntlCalendar $cal)		
getFlags()		
getFlags()		
getFlags()		
getFlags()		
getFlags()		
getFlags()		
getFlags()		
getFlags()		
getFlags()		
getFlatness()		
getFont(string $fontname [, string $encoding = ''])		
getFont()		
getFont()		
getFontFace(CairoContext $context)		
getFontFace(CairoContext $context)		
getFontFamily()		
getFontMatrix(CairoContext $context)		
getFontMatrix(CairoContext $context)		
getFontName()		
getFontOptions(CairoContext $context)		
getFontOptions(CairoContext $context)		
getFontOptions(CairoContext $context)		
getFontSize()		
getFontStretch()		
getFontStyle()		
getFontWeight()		
getFormat()		
getFormat()		
getFractionalDigits()		
getFrameList()		
getFrequency()		
getFromIndex(int $index [, int $length = '' [, int $flags = '']])		
getFromName(string $name [, int $length = '' [, int $flags = '']])		
getFromNeuron()		
getFunction()		
getFunctions()		
getFunctions()		
getGMT()		
getGMode()		
getGeneratedIds()		
getGeneratedIds()		
getGenre()		
getGravity()		
getGravity()		
getGrayFill()		
getGrayStroke()		
getGreatestMinimum(int $field, IntlCalendar $cal)		
getGregorianChange()		
getGridFS([string $prefix = "fs"])		
getGroup()		
getGroup()		
getGroup()		
getGroupCachePercent()		
getGroupFacet()		
getGroupFields()		
getGroupFormat()		
getGroupFunctions()		
getGroupLimit()		
getGroupMain()		
getGroupNGroups()		
getGroupOffset()		
getGroupQueries()		
getGroupSortFields()		
getGroupTarget(CairoContext $context)		
getGroupTruncate()		
getHSL()		
getHandle()		
getHash(object $object)		
getHeader()		
getHeight()		
getHeight()		
getHeight()		
getHeight()		
getHeight()		
getHighlight()		
getHighlightAlternateField([string $field_override = ''])		
getHighlightFields()		
getHighlightFormatter([string $field_override = ''])		
getHighlightFragmenter([string $field_override = ''])		
getHighlightFragsize([string $field_override = ''])		
getHighlightHighlightMultiTerm()		
getHighlightMaxAlternateFieldLength([string $field_override = ''])		
getHighlightMaxAnalyzedChars()		
getHighlightMergeContiguous([string $field_override = ''])		
getHighlightRegexMaxAnalyzedChars()		
getHighlightRegexPattern()		
getHighlightRegexSlop()		
getHighlightRequireFieldMatch()		
getHighlightSimplePost([string $field_override = ''])		
getHighlightSimplePre([string $field_override = ''])		
getHighlightSnippets([string $field_override = ''])		
getHighlightUsePhraseHighlighter()		
getHint()		
getHintMetrics()		
getHintStyle()		
getHomeURL()		
getHorizontalScaling()		
getHost()		
getHost()		
getHost()		
getHostInformation(mysqlnd_connection $connection)		
getHostOs()		
getHostname()		
getHosts()		
getHtmlVer(tidy $object)		
getHttpStatus()		
getHttpStatusMessage()		
getID()		
getID3v1Tag([bool $create = ''])		
getID3v2Tag([bool $create = ''])		
getIDForWindowsID(string $timezone [, string $region = ''])		
getINIEntries()		
getId()		
getIdleTimeout()		
getImage()		
getImageAlphaChannel()		
getImageArtifact(string $artifact)		
getImageAttribute(string $key)		
getImageBackgroundColor()		
getImageBlob()		
getImageBluePrimary()		
getImageBorderColor()		
getImageChannelDepth(int $channel)		
getImageChannelDistortion(Imagick $reference, int $channel, int $metric)		
getImageChannelDistortions(Imagick $reference, int $metric [, int $channel = Imagick::CHANNEL_DEFAULT])		
getImageChannelExtrema(int $channel)		
getImageChannelKurtosis([int $channel = Imagick::CHANNEL_DEFAULT])		
getImageChannelMean(int $channel)		
getImageChannelRange(int $channel)		
getImageChannelStatistics()		
getImageClipMask()		
getImageColormapColor(int $index)		
getImageColors()		
getImageColorspace()		
getImageCompose()		
getImageCompression()		
getImageCompressionQuality()		
getImageDelay()		
getImageDepth()		
getImageDispose()		
getImageDistortion(MagickWand $reference, int $metric)		
getImageExtrema()		
getImageFilename()		
getImageFormat()		
getImageGamma()		
getImageGeometry()		
getImageGravity()		
getImageGreenPrimary()		
getImageHeight()		
getImageHistogram()		
getImageIndex()		
getImageInterlaceScheme()		
getImageInterpolateMethod()		
getImageIterations()		
getImageLength()		
getImageMagickLicense()		
getImageMatte()		
getImageMatteColor()		
getImageMimeType()		
getImageOrientation()		
getImagePage()		
getImagePixelColor(int $x, int $y)		
getImageProfile(string $name)		
getImageProfiles([string $pattern = "*" [, bool $include_values = '']])		
getImageProperties([string $pattern = "*" [, bool $include_values = '']])		
getImageProperty(string $name)		
getImageRedPrimary()		
getImageRegion(int $width, int $height, int $x, int $y)		
getImageRenderingIntent()		
getImageResolution()		
getImageScene()		
getImageSignature()		
getImageSize()		
getImageTicksPerSecond()		
getImageTotalInkDensity()		
getImageType()		
getImageUnits()		
getImageVirtualPixelMethod()		
getImageWhitePoint()		
getImageWidth()		
getImagesBlob()		
getInc()		
getIncrement()		
getIncrement()		
getIndex()		
getIndex()		
getIndexInfo()		
getInfo()		
getInfo()		
getInfo()		
getInfo()		
getInfoAttr(int $type)		
getInnerIterator()		
getInnerIterator()		
getInnerIterator()		
getInnerIterator()		
getInnerIterator()		
getInnerIterator()		
getInnerIterator()		
getInnerIterator()		
getInode()		
getInode()		
getInput()		
getInputBuffer()		
getInputDocument()		
getInputHeaders()		
getInsertedCount()		
getInstance()		
getInstance()		
getInstance()		
getInstanceProperties()		
getIntPropertyMaxValue(int $property)		
getIntPropertyMinValue(int $property)		
getIntPropertyValue(mixed $codepoint, int $property)		
getInterfaceNames()		
getInterfaces()		
getInterlaceScheme()		
getInternalInfo()		
getInternalInfo()		
getInternalInfo()		
getInternalInfo()		
getInternalInfo()		
getInvokeArg(string $name)		
getInvokeArgs()		
getItalic()		
getIterator()		
getIterator()		
getIterator()		
getIteratorClass()		
getIteratorIndex()		
getIteratorIndex()		
getIteratorMode()		
getIteratorRow()		
getJoin()		
getJournal()		
getJsFileName()		
getJsLineNumber()		
getJsSourceLine()		
getJsTrace()		
getKeywordValuesForLocale(string $key, string $locale, bool $commonlyUsed)		
getKeywords(string $locale)		
getLabels()		
getLanguage()		
getLastCodePoint()		
getLastElapsedTicks()		
getLastElapsedTime([int $unit = ''])		
getLastError()		
getLastError()		
getLastErrorMsg()		
getLastErrorNo()		
getLastErrors()		
getLastErrors()		
getLastErrors()		
getLastInsertId()		
getLastInsertId(mysqlnd_connection $connection)		
getLastLogger()		
getLastMessage(mysqlnd_connection $connection)		
getLastResponse()		
getLastResponseHeaders()		
getLastResponseInfo()		
getLastSocketErrno([mixed $socket = ''])		
getLastSocketError([mixed $socket = ''])		
getLastWarning()		
getLatency()		
getLayer()		
getLeading()		
getLeading()		
getLeading()		
getLeastMaximum(int $field, IntlCalendar $cal)		
getLength()		
getLength()		
getLevel()		
getLevel()		
getLevels()		
getLibraryPath([bool $is_global = ''])		
getLine()		
getLineCap()		
getLineCap(CairoContext $context)		
getLineJoin()		
getLineJoin(CairoContext $context)		
getLineNo()		
getLineWidth()		
getLineWidth(CairoContext $context)		
getLinkTarget()		
getListIndex()		
getLocalNamespace()		
getLocale(NumberFormatter $formatter)		
getLocale([int $type = '', NumberFormatter $fmt])		
getLocale([int $which = '', IntlDateFormatter $fmt])		
getLocale(int $localeType, IntlCalendar $cal)		
getLocale(int $type, Collator $coll)		
getLocale(string $locale_type)		
getLocales(string $bundlename)		
getLocation(DateTimeZone $object)		
getLogicalSessionId()		
getLoop()		
getMTime()		
getMTime()		
getMatchedCount()		
getMatrix()		
getMatrix(CairoContext $context)		
getMatrix(CairoContext $context)		
getMax()		
getMaxDepth()		
getMaxLineLen()		
getMaxStalenessSeconds()		
getMaximum(int $field, IntlCalendar $cal)		
getMessage()		
getMessage()		
getMetaList()		
getMetaList(string $index_name)		
getMetadata()		
getMetadata()		
getMethod(string $name)		
getMethod()		
getMethod()		
getMethod()		
getMethods([int $filter = ''])		
getMimeType()		
getMimeType()		
getMin()		
getMinimalDaysInFirstWeek(IntlCalendar $cal)		
getMinimum(int $field, IntlCalendar $cal)		
getMiterLimit()		
getMiterLimit()		
getMiterLimit(CairoContext $context)		
getMlt()		
getMltBoost()		
getMltCount()		
getMltFields()		
getMltMaxNumQueryTerms()		
getMltMaxNumTokens()		
getMltMaxWordLength()		
getMltMinDocFrequency()		
getMltMinTermFrequency()		
getMltMinWordLength()		
getMltQueryFields()		
getMode()		
getMode()		
getModified()		
getModifiedCount()		
getModifierNames(int $modifiers)		
getModifiers()		
getModifiers()		
getModifiers()		
getModifiers()		
getModule()		
getModuleName()		
getModuleName()		
getModules()		
getMulti(array $keys [, int $flags = ''])		
getMultiByKey(string $server_key, array $keys [, int $flags = ''])		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName()		
getName(DateTimeZone $object)		
getNameIndex(int $index [, int $flags = ''])		
getNamedItem(string $name)		
getNamedItemNS(string $namespaceURI, string $localName)		
getNamespaceName()		
getNamespaceName()		
getNamespaceURI()		
getNamespaces([bool $recursive = ''])		
getNext()		
getNext()		
getNextIteratorRow()		
getNextResult()		
getNextResult()		
getNodePath()		
getNow()		
getNrClass()		
getNullPolicy()		
getNumFrames()		
getNumberImages()		
getNumberOfParameters()		
getNumberOfRequiredParameters()		
getNumericValue(mixed $codepoint)		
getOffset(DateTime $datetime, DateTimeZone $object)		
getOffset(DateTimeInterface $object)		
getOffset(DateTimeInterface $object)		
getOffset(DateTimeInterface $object)		
getOffset(float $date, bool $local, int $rawOffset, int $dstOffset)		
getOldContainer(SDO_DataObject $data_object)		
getOldValues(SDO_DataObject $data_object)		
getOne(string $id)		
getOperationId()		
getOperationId()		
getOperationId()		
getOperationTime()		
getOperator(CairoContext $context)		
getOpt(string $key)		
getOpt(string $option, tidy $object)		
getOptDoc(string $optname, tidy $object)		
getOption(int $option)		
getOption(string $key)		
getOptions()		
getOptions()		
getOrientation()		
getOutput()		
getOutputBuffer()		
getOutputHeaders()		
getOwner()		
getOwner()		
getPID()		
getPackageName()		
getPackedSize()		
getPage()		
getPageLayout()		
getPageMode()		
getPanic()		
getParam([string $param_name = ''])		
getParam(string $name [, string $default = ''])		
getParameter(string $namespaceURI, string $localName)		
getParameters()		
getParams()		
getParams()		
getParams()		
getParent()		
getParent()		
getParentClass()		
getParsedWords(string $index_name)		
getParserProperty(int $property)		
getPartsIterator([int $key_type = IntlPartsIterator::KEY_SEQUENTIAL])		
getPath()		
getPath()		
getPath()		
getPathInfo([string $class_name = ''])		
getPathname()		
getPathname()		
getPattern()		
getPattern()		
getPattern(IntlDateFormatter $fmt)		
getPattern(MessageFormatter $fmt)		
getPattern(NumberFormatter $fmt)		
getPeer(string $address, int $port)		
getPendingException()		
getPerms()		
getPerms()		
getPersistentId()		
getPharFlags()		
getPixelIterator()		
getPixelRegionIterator(int $x, int $y, int $columns, int $rows)		
getPointSize()		
getPoints()		
getPoolSize()		
getPort()		
getPosition()		
getPosition()		
getPost(string $name [, string $default = ''])		
getPost()		
getPostFilename()		
getPostfix()		
getPrefix()		
getPregFlags()		
getPreparedParams()		
getPrevious()		
getPreviousIteratorRow()		
getPrimaryLanguage(string $locale)		
getProfilingLevel()		
getProperties()		
getProperties([int $filter = ''])		
getProperty(string $name)		
getProperty(int $sequence_index)		
getProperty(mixed $identifier)		
getPropertyEnum(string $alias)		
getPropertyIndex()		
getPropertyList(string $index_name)		
getPropertyName()		
getPropertyName(int $property [, int $nameChoice = ''])		
getPropertyNames()		
getPropertyValueEnum(int $property, string $name)		
getPropertyValueName(int $property, int $value [, int $nameChoice = ''])		
getProtocolInformation(mysqlnd_connection $connection)		
getPrototype()		
getQuantum()		
getQuantumDepth()		
getQuantumRange()		
getQuery()		
getQuery(string $name [, string $default = ''])		
getQuery()		
getQuery()		
getRGBFill()		
getRGBStroke()		
getRaw()		
getRawDecomposition(string $input)		
getRawOffset()		
getRawRequest()		
getRawRequestHeaders()		
getRawResponse()		
getRawResponseHeaders()		
getReadConcern()		
getReadPreference()		
getReadPreference()		
getReadPreference()		
getReadPreference()		
getReadPreference()		
getReadPreference()		
getReadPreference()		
getReadTimeout(resource $link)		
getRealPath()		
getRecvTimeout()		
getReflectionConstant(string $name)		
getReflectionConstants()		
getReflector()		
getReflector()		
getRegex()		
getRegion(string $locale)		
getRegion(string $zoneId)		
getRegistry(string $key)		
getRelease()		
getReleaseDate()		
getRemovedStopwords(string $index_name)		
getRepeatedWallTimeOption(IntlCalendar $cal)		
getReply()		
getReply()		
getRequest()		
getRequest()		
getRequest()		
getRequest()		
getRequestHeader(string $http_method, string $url [, mixed $extra_parameters = ''])		
getRequestID()		
getRequestId()		
getRequestId()		
getRequestId()		
getRequestToken(string $request_token_url [, string $callback_url = '' [, string $http_method = '']])		
getRequestUri()		
getRequestUrl()		
getResource(int $type)		
getResource()		
getResourceLimit(int $type)		
getResponse()		
getResponse()		
getResponse()		
getResponseCode()		
getResult()		
getResult()		
getResultCode()		
getResultDocument()		
getResultMessage()		
getReturnType()		
getRgba()		
getRootDataObject()		
getRootElementName()		
getRootElementURI()		
getRot()		
getRoute(string $name)		
getRouter()		
getRoutes()		
getRows()		
getRuleStatus()		
getRuleStatusVec()		
getRules()		
getSampleBitrate()		
getSamplingFactors()		
getScaleMatrix()		
getScaledFont(CairoContext $context)		
getSchema()		
getSchema()		
getSchema()		
getSchema(string $schema_name)		
getSchemaName()		
getSchemas()		
getScope()		
getScope()		
getScript(string $locale)		
getScriptPath()		
getScriptPath()		
getSecurityPrefs()		
getSelected()		
getSelected()		
getSequence()		
getServer()		
getServer()		
getServer()		
getServer()		
getServer()		
getServer(string $name [, string $default = ''])		
getServerByKey(string $server_key)		
getServerInformation(mysqlnd_connection $connection)		
getServerList()		
getServerStatistics(mysqlnd_connection $connection)		
getServerStatus(string $host [, int $port = 11211])		
getServerVersion(mysqlnd_connection $connection)		
getServerVersion()		
getServers()		
getService(string $target [, string $binding = '' [, array $config = '']])		
getSession(string $uri)		
getSession()		
getSession()		
getSession()		
getSession()		
getSessionId(resource $link)		
getShape(int $code)		
getShape1()		
getShape2()		
getShortName()		
getShortName()		
getSignature()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSize()		
getSizeOffset()		
getSkippedWallTimeOption(IntlCalendar $cal)		
getSlave()		
getSlaveOkay()		
getSlaveOkay()		
getSlaveOkay()		
getSnapshot()		
getSockOpt(string $key)		
getSocket(int $type [, string $persistent_id = '' [, callback $on_new_socket = '']])		
getSocketFd(mixed $socket)		
getSocketName(mixed $socket, string $address [, mixed $port = ''])		
getSocketName(string $address [, mixed $port = ''])		
getSocketType()		
getSolrVersion()		
getSortFields()		
getSortKey(string $str, Collator $coll)		
getSource(CairoContext $context)		
getSourceEncoding()		
getSourceType()		
getSqlstate(mysqlnd_connection $connection)		
getStacked()		
getStandards()		
getStart()		
getStartDate()		
getStartLine()		
getStartLine()		
getState()		
getStaticProperties()		
getStaticPropertyValue(string $name [, mixed $def_value = ''])		
getStaticVariables()		
getStatistics(mysqlnd_connection $connection)		
getStats()		
getStats([string $type = '' [, int $slabid = '' [, int $limit = 100]]])		
getStats()		
getStatsFacets()		
getStatsFields()		
getStatus(tidy $object)		
getStatusString()		
getStream([string $password = ''])		
getStream(string $name)		
getStreamSize()		
getStrength(Collator $coll)		
getStretch()		
getStride()		
getStrokeAntialias()		
getStrokeColor()		
getStrokeDashArray()		
getStrokeDashOffset()		
getStrokeLineCap()		
getStrokeLineJoin()		
getStrokeMiterLimit()		
getStrokeOpacity()		
getStrokeWidth()		
getStrokingColorSpace()		
getStub()		
getSubIterator([int $level = ''])		
getSubPath()		
getSubPathname()		
getSubpixelOrder()		
getSubstChars()		
getSupportedCompression()		
getSupportedMethods()		
getSupportedSignatures()		
getSurface()		
getSvmType()		
getSvrProbability()		
getSymbol(int $attr, NumberFormatter $fmt)		
getTZDataVersion()		
getTable(string $name)		
getTableLabel()		
getTableName()		
getTables()		
getTagName(int $index)		
getTagSets()		
getTags()		
getTarget(CairoContext $context)		
getTerminationInfo()		
getTerms()		
getTermsField()		
getTermsIncludeLowerBound()		
getTermsIncludeUpperBound()		
getTermsLimit()		
getTermsLowerBound()		
getTermsMaxCount()		
getTermsMinCount()		
getTermsPrefix()		
getTermsReturnRaw()		
getTermsSort()		
getTermsUpperBound()		
getText()		
getText()		
getText()		
getText()		
getText()		
getText()		
getText()		
getTextAlignment()		
getTextAntialias()		
getTextAttribute(int $attr, NumberFormatter $fmt)		
getTextDecoration()		
getTextEncoding()		
getTextInterlineSpacing()		
getTextInterwordSpacing()		
getTextKerning()		
getTextLeading()		
getTextMatrix()		
getTextRenderingMode()		
getTextRise()		
getTextUnderColor()		
getTextWidth(string $text)		
getTextWidth(string $text)		
getThickness()		
getThis()		
getThreadId()		
getThreadId(mysqlnd_connection $connection)		
getTicks()		
getTicksSince(int $start)		
getTime(IntlCalendar $cal)		
getTimeAllowed()		
getTimeOfDayCached()		
getTimeType(IntlDateFormatter $fmt)		
getTimeZone()		
getTimeZone(IntlCalendar $cal)		
getTimeZoneId(IntlDateFormatter $fmt)		
getTimerTimeout()		
getTimestamp()		
getTimestamp()		
getTimestamp()		
getTimestamp()		
getTimestamp()		
getTimestamp(DateTimeInterface $object)		
getTimestamp(DateTimeInterface $object)		
getTimestamp(DateTimeInterface $object)		
getTimezone(DateTimeInterface $object)		
getTimezone(DateTimeInterface $object)		
getTimezone(DateTimeInterface $object)		
getTitle()		
getTitle()		
getTitle()		
getToNeuron()		
getToken()		
getToken()		
getTolerance(CairoContext $context)		
getTopLevel()		
getTotalCount()		
getTotalCount()		
getTotalHits()		
getTotalHits()		
getTotalSize()		
getTotalSize()		
getTrace([int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT])		
getTrack()		
getTraitAliases()		
getTraitNames()		
getTraits()		
getTransMatrix()		
getTransitions([int $timestamp_begin = '' [, int $timestamp_end = '', DateTimeZone $object]])		
getType()		
getType()		
getType()		
getType()		
getType()		
getType()		
getType()		
getType()		
getType()		
getType()		
getType()		
getType(CairoFontFace $fontface)		
getType()		
getType()		
getType()		
getType()		
getType()		
getType()		
getType(IntlCalendar $cal)		
getTypeName()		
getTypeNamespaceURI()		
getURL()		
getUTF8Width(string $string)		
getUTF8Width(string $string)		
getUnderlinePosition()		
getUnderlineThickness()		
getUnicode(int $character)		
getUnicodeVersion()		
getUnicodeWidth(int $character)		
getUnknown()		
getUnpackedSize()		
getUpsertedCount()		
getUpsertedIds()		
getUri()		
getValue()		
getValue()		
getValue()		
getValue()		
getValue()		
getValue([object $object = ''])		
getVectorGraphics()		
getVersion()		
getVersion()		
getVersion()		
getVersion()		
getVersion()		
getVersion()		
getVersion()		
getVersion()		
getVersion()		
getVersion()		
getVersion()		
getVersions()		
getView()		
getViewpath()		
getW()		
getWarningCount(mysqlnd_connection $connection)		
getWarnings()		
getWarnings()		
getWarnings()		
getWarnings()		
getWarnings()		
getWarningsCount()		
getWarningsCount()		
getWarningsCount()		
getWarningsCount()		
getWarningsCount()		
getWeekendTransition(string $dayOfWeek, IntlCalendar $cal)		
getWeight()		
getWeight()		
getWidth()		
getWidth()		
getWidth()		
getWidth(string $string)		
getWidth(string $string)		
getWidth()		
getWidth()		
getWindowsID(string $timezone)		
getWordSpace()		
getWriteConcern()		
getWriteConcern()		
getWriteConcern()		
getWriteConcern()		
getWriteConcernError()		
getWriteErrors()		
getWriteResult()		
getWritingMode()		
getWtimeout()		
getX()		
getX()		
getXHeight()		
getXScale()		
getXSkew()		
getY()		
getY()		
getYScale()		
getYSkew()		
getYear()		
get_browser([string $user_agent = '' [, bool $return_array = '']])		
get_called_class()		
get_cfg_var(string $option)		
get_charset(mysqli $link)		
get_class([object $object = ''])		
get_class_methods(mixed $class_name)		
get_class_vars(string $class_name)		
get_connection_stats(mysqli $link)		
get_current_user()		
get_declared_classes()		
get_declared_interfaces()		
get_declared_traits()		
get_defined_constants([bool $categorize = ''])		
get_defined_functions([bool $exclude_disabled = ''])		
get_defined_vars()		
get_extension_funcs(string $module_name)		
get_headers(string $url [, int $format = '' [, resource $context = '']])		
get_host_info(resource $link)		
get_html_translation_table([int $table = HTML_SPECIALCHARS [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = "UTF-8"]]])		
get_include_path()		
get_included_files()		
get_loaded_extensions([bool $zend_extensions = ''])		
get_magic_quotes_gpc()		
get_magic_quotes_runtime()		
get_meta_tags(string $filename [, bool $use_include_path = ''])		
get_object_vars(object $object)		
get_parent_class([mixed $object = ''])		
get_required_files()		
get_resource_type(resource $handle)		
get_resources([string $type = ''])		
get_result(mysqli_stmt $stmt)		
get_warnings(mysqli $link)		
get_warnings(mysqli_stmt $stmt)		
getallheaders()		
getcolor([bool $as_array = '' [, bool $normalize_array = '']])		
getcolorcount()		
getcolorvalue(int $color)		
getcopyright()		
getcwd()		
getdate()		
getenv(string $varname [, bool $local_only = ''])		
getfilename()		
getfillcolor()		
getfillopacity()		
getfont()		
getfontsize()		
getfontstyle()		
getfontweight()		
gethostbyaddr(string $ip_address)		
gethostbyname(string $hostname)		
gethostbynamel(string $hostname)		
gethostname()		
getimagebackgroundcolor()		
getimageblueprimary()		
getimagebordercolor()		
getimagechanneldepth(int $channel_type)		
getimagecolors()		
getimagecolorspace()		
getimagecompose()		
getimagedelay()		
getimagedepth()		
getimagedispose()		
getimageextrema()		
getimagefilename()		
getimageformat()		
getimagegamma()		
getimagegreenprimary()		
getimageheight()		
getimagehistogram()		
getimageindex()		
getimageinterlacescheme()		
getimageiterations()		
getimagematte()		
getimagemattecolor()		
getimageprofile(string $name)		
getimageredprimary()		
getimagerenderingintent()		
getimageresolution()		
getimagescene()		
getimagesignature()		
getimagesize(string $filename [, array $imageinfo = ''])		
getimagesizefromstring(string $imagedata [, array $imageinfo = ''])		
getimagetype()		
getimageunits()		
getimagewhitepoint()		
getimagewidth()		
getlastmod()		
getmxrr(string $hostname, array $mxhosts [, array $weight = ''])		
getmygid()		
getmyinode()		
getmypid()		
getmyuid()		
getnext(mixed $object_id)		
getopt(string $options [, array $longopts = '' [, int $optind = '']])		
getpackagename()		
getpeername()		
getpeername()		
getprotobyname(string $name)		
getprotobynumber(int $number)		
getquantumdepth()		
getrandmax()		
getreleasedate()		
getrusage([int $who = ''])		
getsamplingfactors()		
getservbyname(string $service, string $protocol)		
getservbyport(int $port, string $protocol)		
getsize()		
getsockname()		
getsockname()		
getstrokecolor()		
getstrokeopacity()		
getstrokewidth()		
gettext(string $message)		
gettextdecoration()		
gettextencoding()		
gettimeofday([bool $return_float = ''])		
gettype(mixed $var)		
getuid()		
getversion()		
glob(string $pattern [, int $flags = ''])		
globally()		
glyphExtents(array $glyphs)		
glyphPath(array $glyphs, CairoContext $context)		
gmdate()		
gmmktime("Y")		
gmp_abs(GMP $a)		
gmp_add(GMP $a, GMP $b)		
gmp_and(GMP $a, GMP $b)		
gmp_clrbit(GMP $a, int $index)		
gmp_cmp(GMP $a, GMP $b)		
gmp_com(GMP $a)		
gmp_div()		
gmp_div_q(GMP $a, GMP $b [, int $round = GMP_ROUND_ZERO])		
gmp_div_qr(GMP $n, GMP $d [, int $round = GMP_ROUND_ZERO])		
gmp_div_r(GMP $n, GMP $d [, int $round = GMP_ROUND_ZERO])		
gmp_divexact(GMP $n, GMP $d)		
gmp_export(GMP $gmpnumber [, int $word_size = 1 [, int $options =  | ]])		
gmp_fact(mixed $a)		
gmp_gcd(GMP $a, GMP $b)		
gmp_gcdext(GMP $a, GMP $b)		
gmp_hamdist(GMP $a, GMP $b)		
gmp_import(string $data [, int $word_size = 1 [, int $options =  | ]])		
gmp_init(mixed $number [, int $base = ''])		
gmp_intval(GMP $gmpnumber)		
gmp_invert(GMP $a, GMP $b)		
gmp_jacobi(GMP $a, GMP $p)		
gmp_legendre(GMP $a, GMP $p)		
gmp_mod(GMP $n, GMP $d)		
gmp_mul(GMP $a, GMP $b)		
gmp_neg(GMP $a)		
gmp_nextprime(int $a)		
gmp_or(GMP $a, GMP $b)		
gmp_perfect_square(GMP $a)		
gmp_popcount(GMP $a)		
gmp_pow(GMP $base, int $exp)		
gmp_powm(GMP $base, GMP $exp, GMP $mod)		
gmp_prob_prime(GMP $a [, int $reps = 10])		
gmp_random([int $limiter = 20])		
gmp_random_bits(int $bits)		
gmp_random_range(GMP $min, GMP $max)		
gmp_random_seed(mixed $seed)		
gmp_root(GMP $a, int $nth)		
gmp_rootrem(GMP $a, int $nth)		
gmp_scan0(GMP $a, int $start)		
gmp_scan1(GMP $a, int $start)		
gmp_setbit(GMP $a, int $index [, bool $bit_on = ''])		
gmp_sign(GMP $a)		
gmp_sqrt(GMP $a)		
gmp_sqrtrem(GMP $a)		
gmp_strval(GMP $gmpnumber [, int $base = 10])		
gmp_sub(GMP $a, GMP $b)		
gmp_testbit(GMP $a, int $index)		
gmp_xor(GMP $a, GMP $b)		
gmstrftime()		
gnupg_adddecryptkey(resource $identifier, string $fingerprint, string $passphrase)		
gnupg_addencryptkey(resource $identifier, string $fingerprint)		
gnupg_addsignkey(resource $identifier, string $fingerprint [, string $passphrase = ''])		
gnupg_cleardecryptkeys(resource $identifier)		
gnupg_clearencryptkeys(resource $identifier)		
gnupg_clearsignkeys(resource $identifier)		
gnupg_decrypt(resource $identifier, string $text)		
gnupg_decryptverify(resource $identifier, string $text, string $plaintext)		
gnupg_encrypt(resource $identifier, string $plaintext)		
gnupg_encryptsign(resource $identifier, string $plaintext)		
gnupg_export(resource $identifier, string $fingerprint)		
gnupg_geterror(resource $identifier)		
gnupg_getprotocol(resource $identifier)		
gnupg_import(resource $identifier, string $keydata)		
gnupg_init()		
gnupg_keyinfo(resource $identifier, string $pattern)		
gnupg_setarmor(resource $identifier, int $armor)		
gnupg_seterrormode(resource $identifier, int $errormode)		
gnupg_setsignmode(resource $identifier, int $signmode)		
gnupg_sign(resource $identifier, string $plaintext)		
gnupg_verify(resource $identifier, string $signed_text, string $signature [, string $plaintext = ''])		
gopher_parsedir(string $dirent)		
gotExit()		
gotStop()		
grapheme_extract(string $haystack, int $size [, int $extract_type = '' [, int $start = '' [, int $next = '']]])		
grapheme_stripos(string $haystack, string $needle [, int $offset = ''])		
grapheme_stristr(string $haystack, string $needle [, bool $before_needle = ''])		
grapheme_strlen(string $input)		
grapheme_strpos(string $haystack, string $needle [, int $offset = ''])		
grapheme_strripos(string $haystack, string $needle [, int $offset = ''])		
grapheme_strrpos(string $haystack, string $needle [, int $offset = ''])		
grapheme_strstr(string $haystack, string $needle [, bool $before_needle = ''])		
grapheme_substr(string $string, int $start [, int $length = ''])		
gregoriantojd(int $month, int $day, int $year)		
group()		
groupBy(string $sort_expr)		
groupBy(mixed $sort_expr)		
gupnp_context_get_host_ip(resource $context)		
gupnp_context_get_port(resource $context)		
gupnp_context_get_subscription_timeout(resource $context)		
gupnp_context_host_path(resource $context, string $local_path, string $server_path)		
gupnp_context_new([string $host_ip = '' [, int $port = '']])		
gupnp_context_set_subscription_timeout(resource $context, int $timeout)		
gupnp_context_timeout_add(resource $context, int $timeout, mixed $callback [, mixed $arg = ''])		
gupnp_context_unhost_path(resource $context, string $server_path)		
gupnp_control_point_browse_start(resource $cpoint)		
gupnp_control_point_browse_stop(resource $cpoint)		
gupnp_control_point_callback_set(resource $cpoint, int $signal, mixed $callback [, mixed $arg = ''])		
gupnp_control_point_new(resource $context, string $target)		
gupnp_device_action_callback_set(resource $root_device, int $signal, string $action_name, mixed $callback [, mixed $arg = ''])		
gupnp_device_info_get(resource $root_device)		
gupnp_device_info_get_service(resource $root_device, string $type)		
gupnp_root_device_get_available(resource $root_device)		
gupnp_root_device_get_relative_location(resource $root_device)		
gupnp_root_device_new(resource $context, string $location, string $description_dir)		
gupnp_root_device_set_available(resource $root_device, bool $available)		
gupnp_root_device_start(resource $root_device)		
gupnp_root_device_stop(resource $root_device)		
gupnp_service_action_get(resource $action, string $name, int $type)		
gupnp_service_action_return(resource $action)		
gupnp_service_action_return_error(resource $action, int $error_code [, string $error_description = ''])		
gupnp_service_action_set(resource $action, string $name, int $type, mixed $value)		
gupnp_service_freeze_notify(resource $service)		
gupnp_service_info_get(resource $proxy)		
gupnp_service_info_get_introspection(resource $proxy [, mixed $callback = '' [, mixed $arg = '']])		
gupnp_service_introspection_get_state_variable(resource $introspection, string $variable_name)		
gupnp_service_notify(resource $service, string $name, int $type, mixed $value)		
gupnp_service_proxy_action_get(resource $proxy, string $action, string $name, int $type)		
gupnp_service_proxy_action_set(resource $proxy, string $action, string $name, mixed $value, int $type)		
gupnp_service_proxy_add_notify(resource $proxy, string $value, int $type, mixed $callback [, mixed $arg = ''])		
gupnp_service_proxy_callback_set(resource $proxy, int $signal, mixed $callback [, mixed $arg = ''])		
gupnp_service_proxy_get_subscribed(resource $proxy)		
gupnp_service_proxy_remove_notify(resource $proxy, string $value)		
gupnp_service_proxy_send_action(resource $proxy, string $action, array $in_params, array $out_params)		
gupnp_service_proxy_set_subscribed(resource $proxy, bool $subscribed)		
gupnp_service_thaw_notify(resource $service)		
gzclose(resource $zp)		
gzcompress(string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_DEFLATE]])		
gzdecode(string $data [, int $length = ''])		
gzdeflate(string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_RAW]])		
gzencode(string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP]])		
gzeof(resource $zp)		
gzfile(string $filename [, int $use_include_path = ''])		
gzgetc(resource $zp)		
gzgets(resource $zp [, int $length = ''])		
gzgetss(resource $zp, int $length [, string $allowable_tags = ''])		
gzinflate(string $data [, int $length = ''])		
gzip([string $compress_level = ''])		
gzopen(string $filename, string $mode [, int $use_include_path = ''])		
gzpassthru(resource $zp)		
gzputs()		
gzread(resource $zp, int $length)		
gzrewind(resource $zp)		
gzseek(resource $zp, int $offset [, int $whence = SEEK_SET])		
gztell(resource $zp)		
gzuncompress(string $data [, int $length = ''])		
gzwrite(resource $zp, string $string [, int $length = ''])		
haldClutImage(Imagick $clut [, int $channel = Imagick::CHANNEL_DEFAULT])		
handle()		
handle()		
handle([string $soap_request = ''])		
has(string $name)		
has(string $name)		
has(string $name)		
hasAttribute(string $name)		
hasAttributeNS(string $namespaceURI, string $localName)		
hasAttributes()		
hasBinaryProperty(mixed $codepoint, int $property)		
hasBorders()		
hasChildDocuments()		
hasChildDocuments()		
hasChildNodes()		
hasChildren()		
hasChildren()		
hasChildren()		
hasChildren()		
hasChildren()		
hasChildren()		
hasChildren()		
hasChildren()		
hasChildren()		
hasChildren([bool $allow_links = ''])		
hasChildren()		
hasConstant(string $name)		
hasCurrentPoint(CairoContext $context)		
hasData()		
hasDefault()		
hasErrorLabel(string $errorLabel)		
hasExsltSupport()		
hasFeature(string $feature, string $version)		
hasFrame(resource $link)		
hasKey(mixed $key)		
hasMargin()		
hasMargin()		
hasMargin(int $page)		
hasMetadata()		
hasMetadata()		
hasMethod(string $name)		
hasMoreResults()		
hasMoreResults()		
hasNext()		
hasNext()		
hasNextImage()		
hasPrev(resource $result)		
hasPreviousImage()		
hasProperty(string $name)		
hasReturnType()		
hasSameRules(IntlTimeZone $otherTimeZone)		
hasSiblings()		
hasType()		
hasValue(mixed $value)		
hash(string $algo, string $data [, bool $raw_output = ''])		
hash()		
hash()		
hash_algos()		
hash_copy(HashContext $context)		
hash_equals(string $known_string, string $user_string)		
hash_file(string $algo, string $filename [, bool $raw_output = ''])		
hash_final(HashContext $context [, bool $raw_output = ''])		
hash_hkdf(string $algo, string $ikm [, int $length = '' [, string $info = '' [, string $salt = '']]])		
hash_hmac(string $algo, string $data, string $key [, bool $raw_output = ''])		
hash_hmac_algos()		
hash_hmac_file(string $algo, string $filename, string $key [, bool $raw_output = ''])		
hash_init(string $algo [, int $options = '' [, string $key = '']])		
hash_pbkdf2(string $algo, string $password, string $salt, int $iterations [, int $length = '' [, bool $raw_output = '']])		
hash_update(HashContext $context, string $data)		
hash_update_file(HashContext $hcontext, string $filename [, resource $scontext = ''])		
hash_update_stream(HashContext $context, resource $handle [, int $length = -1])		
hasnextimage()		
haspreviousimage()		
having(string $sort_expr)		
having(string $sort_expr)		
head(tidy $object)		
header(string $header [, bool $replace = '' [, int $http_response_code = '']])		
header(array $headerData)		
header()		
header(string $key, string $value [, string $ucwords = ''])		
header_register_callback(callable $callback)		
header_remove([string $name = ''])		
headers_list()		
headers_sent([string $file = '' [, int $line = '']])		
heartbeat(boolean $if_close_connection)		
hebrev(string $hebrew_text [, int $max_chars_per_line = ''])		
hebrevc(string $hebrew_text [, int $max_chars_per_line = ''])		
hex2bin(string $data)		
hexdec(string $hex_string)		
hide()		
highlight_file(string $filename [, bool $return = ''])		
highlight_string(string $str [, bool $return = ''])		
hint(mixed $index)		
hint()		
hrtime([bool $get_as_number = ''])		
html(tidy $object)		
html_entity_decode("default_charset")		
htmlentities("default_charset")		
htmlspecialchars("default_charset")		
htmlspecialchars_decode(string $string [, int $flags = ENT_COMPAT | ENT_HTML401])		
http_build_query(mixed $query_data [, string $numeric_prefix = '' [, string $arg_separator = '' [, int $enc_type = '']]])		
http_response_code([int $response_code = ''])		
hwapi_attribute_new([string $name = '' [, string $value = '']])		
hwapi_content_new(string $content, string $mimetype)		
hwapi_hgcsp(string $hostname [, int $port = ''])		
hwapi_object_new(array $parameter)		
hwstat(array $parameter)		
hypot(float $x, float $y)		
ibase_add_user(resource $service_handle, string $user_name, string $password [, string $first_name = '' [, string $middle_name = '' [, string $last_name = '']]])		
ibase_affected_rows([resource $link_identifier = ''])		
ibase_backup(resource $service_handle, string $source_db, string $dest_file [, int $options = '' [, bool $verbose = '']])		
ibase_blob_add(resource $blob_handle, string $data)		
ibase_blob_cancel(resource $blob_handle)		
ibase_blob_close(resource $blob_handle)		
ibase_blob_create([resource $link_identifier = ''])		
ibase_blob_echo(string $blob_id, resource $link_identifier)		
ibase_blob_get(resource $blob_handle, int $len)		
ibase_blob_import(resource $link_identifier, resource $file_handle)		
ibase_blob_info(resource $link_identifier, string $blob_id)		
ibase_blob_open(resource $link_identifier, string $blob_id)		
ibase_close([resource $connection_id = ''])		
ibase_commit([resource $link_or_trans_identifier = ''])		
ibase_commit_ret([resource $link_or_trans_identifier = ''])		
ibase_connect([string $database = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, int $buffers = '' [, int $dialect = '' [, string $role = '' [, int $sync = '']]]]]]]])		
ibase_db_info(resource $service_handle, string $db, int $action [, int $argument = ''])		
ibase_delete_user(resource $service_handle, string $user_name)		
ibase_drop_db([resource $connection = ''])		
ibase_errcode()		
ibase_errmsg()		
ibase_execute(resource $query [, mixed $bind_arg = '' [, mixed $... = '']])		
ibase_fetch_assoc(resource $result [, int $fetch_flag = ''])		
ibase_fetch_object(resource $result_id [, int $fetch_flag = ''])		
ibase_fetch_row(resource $result_identifier [, int $fetch_flag = ''])		
ibase_field_info(resource $result, int $field_number)		
ibase_free_event_handler(resource $event)		
ibase_free_query(resource $query)		
ibase_free_result(resource $result_identifier)		
ibase_gen_id(string $generator [, int $increment = 1 [, resource $link_identifier = '']])		
ibase_maintain_db(resource $service_handle, string $db, int $action [, int $argument = ''])		
ibase_modify_user(resource $service_handle, string $user_name, string $password [, string $first_name = '' [, string $middle_name = '' [, string $last_name = '']]])		
ibase_name_result(resource $result, string $name)		
ibase_num_fields(resource $result_id)		
ibase_num_params(resource $query)		
ibase_param_info(resource $query, int $param_number)		
ibase_pconnect([string $database = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, int $buffers = '' [, int $dialect = '' [, string $role = '' [, int $sync = '']]]]]]]])		
ibase_prepare(string $query, resource $link_identifier, string $trans)		
ibase_query([resource $link_identifier = '', string $query [, int $bind_args = '']])		
ibase_restore(resource $service_handle, string $source_file, string $dest_db [, int $options = '' [, bool $verbose = '']])		
ibase_rollback([resource $link_or_trans_identifier = ''])		
ibase_rollback_ret([resource $link_or_trans_identifier = ''])		
ibase_server_info(resource $service_handle, int $action)		
ibase_service_attach(string $host, string $dba_username, string $dba_password)		
ibase_service_detach(resource $service_handle)		
ibase_set_event_handler(callable $event_handler, string $event_name1 [, string $event_name2 = '' [, string $... = '', resource $connection]])		
ibase_trans([int $trans_args = '' [, resource $link_identifier = '']])		
ibase_wait_event(string $event_name1 [, string $event_name2 = '' [, string $... = '', resource $connection]])		
iconv(string $in_charset, string $out_charset, string $str)		
iconv_get_encoding([string $type = "all"])		
iconv_mime_decode("iconv.internal_encoding")		
iconv_mime_decode_headers("iconv.internal_encoding")		
iconv_mime_encode(string $field_name, string $field_value [, array $preferences = ''])		
iconv_set_encoding(string $type, string $charset)		
iconv_strlen("iconv.internal_encoding")		
iconv_strpos("iconv.internal_encoding")		
iconv_strrpos("iconv.internal_encoding")		
iconv_substr("iconv.internal_encoding")		
id3_get_frame_long_name(string $frameId)		
id3_get_frame_short_name(string $frameId)		
id3_get_genre_id(string $genre)		
id3_get_genre_list()		
id3_get_genre_name(int $genre_id)		
id3_get_tag(string $filename [, int $version = ID3_BEST])		
id3_get_version(string $filename)		
id3_remove_tag(string $filename [, int $version = ID3_V1_0])		
id3_set_tag(string $filename, array $tag [, int $version = ID3_V1_0])		
idate()		
identify(array $parameter)		
identifyFormat(string $embedText)		
identifyImage([bool $appendRawOutput = ''])		
identity(int $n)		
identityMatrix(CairoContext $context)		
idle(callable $callback [, mixed $data = '' [, int $priority = '']])		
idn_to_ascii(string $domain [, int $options = IDNA_DEFAULT [, int $variant = INTL_IDNA_VARIANT_2003 [, array $idna_info = '']]])		
idn_to_utf8(string $domain [, int $options = IDNA_DEFAULT [, int $variant = INTL_IDNA_VARIANT_2003 [, array $idna_info = '']]])		
ifx_affected_rows(resource $result_id)		
ifx_blobinfile_mode(int $mode)		
ifx_byteasvarchar(int $mode)		
ifx_close([resource $link_identifier = ''])		
ifx_connect([string $database = '' [, string $userid = '' [, string $password = '']]])		
ifx_copy_blob(int $bid)		
ifx_create_blob(int $type, int $mode, string $param)		
ifx_create_char(string $param)		
ifx_do(resource $result_id)		
ifx_error([resource $link_identifier = ''])		
ifx_errormsg([int $errorcode = ''])		
ifx_fetch_row(resource $result_id [, mixed $position = ''])		
ifx_fieldproperties(resource $result_id)		
ifx_fieldtypes(resource $result_id)		
ifx_free_blob(int $bid)		
ifx_free_char(int $bid)		
ifx_free_result(resource $result_id)		
ifx_get_blob(int $bid)		
ifx_get_char(int $bid)		
ifx_getsqlca(resource $result_id)		
ifx_htmltbl_result(resource $result_id [, string $html_table_options = ''])		
ifx_nullformat(int $mode)		
ifx_num_fields(resource $result_id)		
ifx_num_rows(resource $result_id)		
ifx_pconnect([string $database = '' [, string $userid = '' [, string $password = '']]])		
ifx_prepare(string $query, resource $link_identifier [, int $cursor_def = '', mixed $blobidarray])		
ifx_query(string $query, resource $link_identifier [, int $cursor_type = '' [, mixed $blobidarray = '']])		
ifx_textasvarchar(int $mode)		
ifx_update_blob(int $bid, string $content)		
ifx_update_char(int $bid, string $content)		
ifxus_close_slob(int $bid)		
ifxus_create_slob(int $mode)		
ifxus_free_slob(int $bid)		
ifxus_open_slob(int $bid, int $mode)		
ifxus_read_slob(int $bid, int $nbytes)		
ifxus_seek_slob(int $bid, int $mode, int $offset)		
ifxus_tell_slob(int $bid)		
ifxus_write_slob(int $bid, string $content)		
ignore_user_abort([bool $value = ''])		
iis_add_server(string $path, string $comment, string $server_ip, int $port, string $host_name, int $rights, int $start_server)		
iis_get_dir_security(int $server_instance, string $virtual_path)		
iis_get_script_map(int $server_instance, string $virtual_path, string $script_extension)		
iis_get_server_by_comment(string $comment)		
iis_get_server_by_path(string $path)		
iis_get_server_rights(int $server_instance, string $virtual_path)		
iis_get_service_state(string $service_id)		
iis_remove_server(int $server_instance)		
iis_set_app_settings(int $server_instance, string $virtual_path, string $application_scope)		
iis_set_dir_security(int $server_instance, string $virtual_path, int $directory_flags)		
iis_set_script_map(int $server_instance, string $virtual_path, string $script_extension, string $engine_path, int $allow_scripting)		
iis_set_server_rights(int $server_instance, string $virtual_path, int $directory_flags)		
iis_start_server(int $server_instance)		
iis_start_service(string $service_id)		
iis_stop_server(int $server_instance)		
iis_stop_service(string $service_id)		
image2wbmp(resource $image [, string $filename = '' [, int $foreground = '']])		
image_type_to_extension(int $imagetype [, bool $include_dot = ''])		
image_type_to_mime_type(int $imagetype)		
imageaffine(resource $image, array $affine [, array $clip = ''])		
imageaffinematrixconcat(array $m1, array $m2)		
imageaffinematrixget(int $type [, mixed $options = ''])		
imagealphablending(resource $image, bool $blendmode)		
imageantialias(resource $image, bool $enabled)		
imagearc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color)		
imagebmp(resource $image [, mixed $to = '' [, bool $compressed = '']])		
imagechar(resource $image, int $font, int $x, int $y, string $c, int $color)		
imagecharup(resource $image, int $font, int $x, int $y, string $c, int $color)		
imagecolorallocate(resource $image, int $red, int $green, int $blue)		
imagecolorallocatealpha(resource $image, int $red, int $green, int $blue, int $alpha)		
imagecolorat(resource $image, int $x, int $y)		
imagecolorclosest(resource $image, int $red, int $green, int $blue)		
imagecolorclosestalpha(resource $image, int $red, int $green, int $blue, int $alpha)		
imagecolorclosesthwb(resource $image, int $red, int $green, int $blue)		
imagecolordeallocate(resource $image, int $color)		
imagecolorexact(resource $image, int $red, int $green, int $blue)		
imagecolorexactalpha(resource $image, int $red, int $green, int $blue, int $alpha)		
imagecolormatch(resource $image1, resource $image2)		
imagecolorresolve(resource $image, int $red, int $green, int $blue)		
imagecolorresolvealpha(resource $image, int $red, int $green, int $blue, int $alpha)		
imagecolorset(resource $image, int $index, int $red, int $green, int $blue [, int $alpha = ''])		
imagecolorsforindex(resource $image, int $index)		
imagecolorstotal(resource $image)		
imagecolortransparent(resource $image [, int $color = ''])		
imageconvolution(resource $image, array $matrix, float $div, float $offset)		
imagecopy(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h)		
imagecopymerge(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct)		
imagecopymergegray(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct)		
imagecopyresampled(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h)		
imagecopyresized(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h)		
imagecreate(int $width, int $height)		
imagecreatefrombmp(string $filename)		
imagecreatefromgd(string $filename)		
imagecreatefromgd2(string $filename)		
imagecreatefromgd2part(string $filename, int $srcX, int $srcY, int $width, int $height)		
imagecreatefromgif(string $filename)		
imagecreatefromjpeg(string $filename)		
imagecreatefrompng(string $filename)		
imagecreatefromstring(string $image)		
imagecreatefromwbmp(string $filename)		
imagecreatefromwebp(string $filename)		
imagecreatefromxbm(string $filename)		
imagecreatefromxpm(string $filename)		
imagecreatetruecolor(int $width, int $height)		
imagecrop(resource $image, array $rect)		
imagecropauto(resource $image [, int $mode = -1 [, float $threshold = .5 [, int $color = -1]]])		
imagedashedline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)		
imagedestroy(resource $image)		
imageellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color)		
imagefill(resource $image, int $x, int $y, int $color)		
imagefilledarc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color, int $style)		
imagefilledellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color)		
imagefilledpolygon(resource $image, array $points, int $num_points, int $color)		
imagefilledrectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)		
imagefilltoborder(resource $image, int $x, int $y, int $border, int $color)		
imagefilter(resource $image, int $filtertype [, int $arg1 = '' [, int $arg2 = '' [, int $arg3 = '' [, int $arg4 = '']]]])		
imageflip(resource $image, int $mode)		
imagefontheight(int $font)		
imagefontwidth(int $font)		
imageftbbox(float $size, float $angle, string $fontfile, string $text [, array $extrainfo = ''])		
imagefttext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text [, array $extrainfo = ''])		
imagegammacorrect(resource $image, float $inputgamma, float $outputgamma)		
imagegd(resource $image [, mixed $to = null])		
imagegd2(resource $image [, mixed $to = null [, int $chunk_size = 128 [, int $type = IMG_GD2_RAW]]])		
imagegetclip(resource $im)		
imagegif(resource $image [, mixed $to = ''])		
imagegrabscreen()		
imagegrabwindow(int $window_handle [, int $client_area = ''])		
imageinterlace(resource $image [, int $interlace = ''])		
imageistruecolor(resource $image)		
imagejpeg(resource $image [, mixed $to = '' [, int $quality = '']])		
imagelayereffect(resource $image, int $effect)		
imageline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)		
imageloadfont(string $file)		
imageopenpolygon(resource $image, array $points, int $num_points, int $color)		
imagepalettecopy(resource $destination, resource $source)		
imagepalettetotruecolor(resource $src)		
imagepng(resource $image [, mixed $to = '' [, int $quality = '' [, int $filters = '']]])		
imagepolygon(resource $image, array $points, int $num_points, int $color)		
imagepsbbox(string $text, resource $font, int $size, int $space, int $tightness, float $angle)		
imagepsencodefont(resource $font_index, string $encodingfile)		
imagepsextendfont(resource $font_index, float $extend)		
imagepsfreefont(resource $font_index)		
imagepsloadfont(string $filename)		
imagepsslantfont(resource $font_index, float $slant)		
imagepstext(resource $image, string $text, resource $font_index, int $size, int $foreground, int $background, int $x, int $y [, int $space = '' [, int $tightness = '' [, float $angle = 0.0 [, int $antialias_steps = 4]]]])		
imagerectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)		
imageresolution(resource $image [, int $res_x = '' [, int $res_y = '']])		
imagerotate(resource $image, float $angle, int $bgd_color [, int $ignore_transparent = ''])		
imagesavealpha(resource $image, bool $saveflag)		
imagescale(resource $image, int $new_width [, int $new_height = -1 [, int $mode = IMG_BILINEAR_FIXED]])		
imagesetbrush(resource $image, resource $brush)		
imagesetclip(resource $im, int $x1, int $y1, int $x2, int $y2)		
imagesetinterpolation(resource $image [, int $method = IMG_BILINEAR_FIXED])		
imagesetpixel(resource $image, int $x, int $y, int $color)		
imagesetstyle(resource $image, array $style)		
imagesetthickness(resource $image, int $thickness)		
imagesettile(resource $image, resource $tile)		
imagestring(resource $image, int $font, int $x, int $y, string $string, int $color)		
imagestringup(resource $image, int $font, int $x, int $y, string $string, int $color)		
imagesx(resource $image)		
imagesy(resource $image)		
imagetruecolortopalette(resource $image, bool $dither, int $ncolors)		
imagettfbbox(float $size, float $angle, string $fontfile, string $text)		
imagettftext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text)		
imagetypes()		
imagewbmp(resource $image [, mixed $to = '' [, int $foreground = '']])		
imagewebp(resource $image [, mixed $to = '' [, int $quality = 80]])		
imagexbm(resource $image, string $filename [, int $foreground = ''])		
imap_8bit(string $string)		
imap_alerts()		
imap_append(resource $imap_stream, string $mailbox, string $message [, string $options = '' [, string $internal_date = '']])		
imap_base64(string $text)		
imap_binary(string $string)		
imap_body(resource $imap_stream, int $msg_number [, int $options = ''])		
imap_bodystruct(resource $imap_stream, int $msg_number, string $section)		
imap_check(resource $imap_stream)		
imap_clearflag_full(resource $imap_stream, string $sequence, string $flag [, int $options = ''])		
imap_close(resource $imap_stream [, int $flag = ''])		
imap_create()		
imap_createmailbox(resource $imap_stream, string $mailbox)		
imap_delete(resource $imap_stream, int $msg_number [, int $options = ''])		
imap_deletemailbox(resource $imap_stream, string $mailbox)		
imap_errors()		
imap_expunge(resource $imap_stream)		
imap_fetch_overview(resource $imap_stream, string $sequence [, int $options = ''])		
imap_fetchbody(resource $imap_stream, int $msg_number, string $section [, int $options = ''])		
imap_fetchheader(resource $imap_stream, int $msg_number [, int $options = ''])		
imap_fetchmime(resource $imap_stream, int $msg_number, string $section [, int $options = ''])		
imap_fetchstructure(resource $imap_stream, int $msg_number [, int $options = ''])		
imap_fetchtext()		
imap_gc(resource $imap_stream, int $caches)		
imap_get_quota(resource $imap_stream, string $quota_root)		
imap_get_quotaroot(resource $imap_stream, string $quota_root)		
imap_getacl(resource $imap_stream, string $mailbox)		
imap_getmailboxes(resource $imap_stream, string $ref, string $pattern)		
imap_getsubscribed(resource $imap_stream, string $ref, string $pattern)		
imap_header()		
imap_headerinfo(resource $imap_stream, int $msg_number [, int $fromlength = '' [, int $subjectlength = '' [, string $defaulthost = '']]])		
imap_headers(resource $imap_stream)		
imap_last_error()		
imap_list(resource $imap_stream, string $ref, string $pattern)		
imap_listmailbox()		
imap_listscan(resource $imap_stream, string $ref, string $pattern, string $content)		
imap_listsubscribed()		
imap_lsub(resource $imap_stream, string $ref, string $pattern)		
imap_mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $cc = '' [, string $bcc = '' [, string $rpath = '']]]])		
imap_mail_compose(array $envelope, array $body)		
imap_mail_copy(resource $imap_stream, string $msglist, string $mailbox [, int $options = ''])		
imap_mail_move(resource $imap_stream, string $msglist, string $mailbox [, int $options = ''])		
imap_mailboxmsginfo(resource $imap_stream)		
imap_mime_header_decode(string $text)		
imap_msgno(resource $imap_stream, int $uid)		
imap_mutf7_to_utf8(string $in)		
imap_num_msg(resource $imap_stream)		
imap_num_recent(resource $imap_stream)		
imap_open(string $mailbox, string $username, string $password [, int $options = '' [, int $n_retries = '' [, array $params = '']]])		
imap_ping(resource $imap_stream)		
imap_qprint(string $string)		
imap_rename()		
imap_renamemailbox(resource $imap_stream, string $old_mbox, string $new_mbox)		
imap_reopen(resource $imap_stream, string $mailbox [, int $options = '' [, int $n_retries = '']])		
imap_rfc822_parse_adrlist(string $address, string $default_host)		
imap_rfc822_parse_headers(string $headers [, string $defaulthost = "UNKNOWN"])		
imap_rfc822_write_address(string $mailbox, string $host, string $personal)		
imap_savebody(resource $imap_stream, mixed $file, int $msg_number [, string $part_number = "" [, int $options = '']])		
imap_scan()		
imap_scanmailbox()		
imap_search(resource $imap_stream, string $criteria [, int $options = SE_FREE [, string $charset = '']])		
imap_set_quota(resource $imap_stream, string $quota_root, int $quota_limit)		
imap_setacl(resource $imap_stream, string $mailbox, string $id, string $rights)		
imap_setflag_full(resource $imap_stream, string $sequence, string $flag [, int $options = NIL])		
imap_sort(resource $imap_stream, int $criteria, int $reverse [, int $options = '' [, string $search_criteria = '' [, string $charset = '']]])		
imap_status(resource $imap_stream, string $mailbox, int $options)		
imap_subscribe(resource $imap_stream, string $mailbox)		
imap_thread(resource $imap_stream [, int $options = SE_FREE])		
imap_timeout(int $timeout_type [, int $timeout = -1])		
imap_uid(resource $imap_stream, int $msg_number)		
imap_undelete(resource $imap_stream, int $msg_number [, int $flags = ''])		
imap_unsubscribe(resource $imap_stream, string $mailbox)		
imap_utf7_decode(string $text)		
imap_utf7_encode(string $data)		
imap_utf8(string $mime_encoded_text)		
imap_utf8_to_mutf7(string $in)		
immortal([bool $liveForever = ''])		
implementsInterface(string $interface)		
implode(string $glue, array $pieces)		
implodeImage(float $radius)		
implodeimage(float $radius)		
import(string $filename)		
import()		
importChar(string $libswf, string $name)		
importFont(string $libswf, string $name)		
importImagePixels(int $x, int $y, int $width, int $height, string $map, int $storage, array $pixels)		
importNode(DOMNode $importedNode [, bool $deep = ''])		
importStylesheet(object $stylesheet)		
import_request_variables(string $types [, string $prefix = ''])		
inDaylightTime(IntlCalendar $cal)		
inFill(float $x, float $y, CairoContext $context)		
inNamespace()		
inNamespace()		
inStroke(float $x, float $y, CairoContext $context)		
inTransaction()		
in_array(mixed $needle, array $haystack [, bool $strict = ''])		
inc()		
include(string $file)		
inclued_get_data()		
incr(string $key, string $column [, integer $incrby = ''])		
increment(string $key [, int $offset = 1 [, int $initial_value = '' [, int $expiry = '']]])		
increment(string $key [, int $value = 1])		
incrementByKey(string $server_key, string $key [, int $offset = 1 [, int $initial_value = '' [, int $expiry = '']]])		
inet_ntop(string $in_addr)		
inet_pton(string $address)		
inflate_add(resource $context, string $encoded_data [, int $flush_mode = ZLIB_SYNC_FLUSH])		
inflate_get_read_len(resource $resource)		
inflate_get_status(resource $resource)		
inflate_init()		
info()		
info()		
info()		
info()		
info(array $parameter)		
info(string $message [, array $content = '' [, string $logger = '']])		
info(resource $link)		
info()		
ingres_autocommit(resource $link)		
ingres_autocommit_state(resource $link)		
ingres_charset(resource $link)		
ingres_close(resource $link)		
ingres_commit(resource $link)		
ingres_connect([string $database = '' [, string $username = '' [, string $password = '' [, array $options = '']]]])		
ingres_cursor(resource $result)		
ingres_errno([resource $link = ''])		
ingres_error([resource $link = ''])		
ingres_errsqlstate([resource $link = ''])		
ingres_escape_string(resource $link, string $source_string)		
ingres_execute(resource $result [, array $params = '' [, string $types = '']])		
ingres_fetch_array(resource $result [, int $result_type = ''])		
ingres_fetch_assoc(resource $result)		
ingres_fetch_object(resource $result [, int $result_type = ''])		
ingres_fetch_proc_return(resource $result)		
ingres_fetch_row(resource $result)		
ingres_field_length(resource $result, int $index)		
ingres_field_name(resource $result, int $index)		
ingres_field_nullable(resource $result, int $index)		
ingres_field_precision(resource $result, int $index)		
ingres_field_scale(resource $result, int $index)		
ingres_field_type(resource $result, int $index)		
ingres_free_result(resource $result)		
ingres_next_error([resource $link = ''])		
ingres_num_fields(resource $result)		
ingres_num_rows(resource $result)		
ingres_pconnect([string $database = '' [, string $username = '' [, string $password = '' [, array $options = '']]]])		
ingres_prepare(resource $link, string $query)		
ingres_query(resource $link, string $query [, array $params = '' [, string $types = '']])		
ingres_result_seek(resource $result, int $position)		
ingres_rollback(resource $link)		
ingres_set_environment(resource $link, array $options)		
ingres_unbuffered_query(resource $link, string $query [, array $params = '' [, string $types = '']])		
ini_alter()		
ini_get(string $varname)		
ini_get_all([string $extension = '' [, bool $details = '']])		
ini_restore(string $varname)		
ini_set(string $varname, string $newvalue)		
init(mysqlnd_connection $connection)		
init()		
init()		
initHeader()		
initIdentity()		
initRotate(float $radians)		
initScale(float $sx, float $sy)		
initTranslate(float $tx, float $ty)		
initView(string $templates_dir [, array $options = ''])		
initView([array $options = ''])		
inotify_add_watch(resource $inotify_instance, string $pathname, int $mask)		
inotify_init()		
inotify_queue_len(resource $inotify_instance)		
inotify_read(resource $inotify_instance)		
inotify_rm_watch(resource $inotify_instance, int $watch_descriptor)		
insert(HW_API_Attribute $attribute)		
insert()		
insert(array $parameter)		
insert(array|object $document)		
insert(mixed $columns [, mixed $... = ''])		
insert(int $index [, mixed $...values = ''])		
insert(int $index [, mixed $...values = ''])		
insert(int $index [, mixed $...values = ''])		
insert(mixed $value [, int $index = ''])		
insert(mixed $value [, int $sequenceIndex = '' [, mixed $propertyIdentifier = '']])		
insert(mixed $value)		
insert(mixed $value, mixed $priority)		
insertAfter(CommonMark\Node $sibling)		
insertAt(string $name, int $page, UI\Control $control)		
insertAt(mixed $value, int $offset)		
insertBefore(CommonMark\Node $sibling)		
insertBefore(DOMNode $newnode [, DOMNode $refnode = ''])		
insertData(int $offset, string $data)		
insertFormula(int $row, int $column, string $formula)		
insertImage(int $row, int $column, string $localImagePath)		
insertMacro(string $name, string $regex)		
insertMacro(string $name, string $regex)		
insertPage(object $page)		
insertText(int $row, int $column, double $data [, string $format = ''])		
insert_id(resource $link)		
insertanchor(array $parameter)		
insertcollection(array $parameter)		
insertdocument(array $parameter)		
intdiv(int $dividend, int $divisor)		
interceptFileFuncs()		
interface_exists(string $interface_name [, bool $autoload = ''])		
intersect(Ds\Map $map)		
intersect(Ds\Set $set)		
intl_error_name(int $error_code)		
intl_get_error_code()		
intl_get_error_message()		
intl_is_failure(int $error_code)		
intlcal_get_error_code(IntlCalendar $calendar)		
intlcal_get_error_message(IntlCalendar $calendar)		
intltz_get_error_code()		
intltz_get_error_message()		
intval(mixed $var [, int $base = 10])		
inverseFourierTransformImage(Imagick $complement, bool $magnitude)		
invert()		
invert()		
invoke([mixed $parameter = '' [, mixed $... = '']])		
invoke(object $object [, mixed $parameter = '' [, mixed $... = '']])		
invoke(int $revents)		
invokeArgs(array $args)		
invokeArgs(object $object, array $args)		
invokePending()		
io(mixed $fd, int $events, callable $callback [, mixed $data = '' [, int $priority = '']])		
ip2long(string $ip_address)		
iptcembed(string $iptcdata, string $jpeg_file_name [, int $spool = ''])		
iptcparse(string $iptcblock)		
is2LeggedEndpoint(mixed $params_array)		
isAbstract()		
isAbstract()		
isAbstractType()		
isAcknowledged()		
isAnonymous()		
isApplied()		
isArbiter()		
isArray()		
isAsp()		
isBoundary(int $offset)		
isBroken(RarArchive $rarfile)		
isBuffering()		
isBuiltin()		
isCRCChecked()		
isCallable()		
isChecked()		
isChecked()		
isCli()		
isCloneable()		
isClosure()		
isComment()		
isCompressed([int $compression_type = 9021976])		
isCompressed()		
isCompressedBZIP2()		
isCompressedGZ()		
isConnected()		
isConnected()		
isConnected()		
isConnected()		
isConnected()		
isConstructor()		
isContainment()		
isCopyrighted()		
isCorrupted()		
isCorrupted()		
isDataType()		
isDead()		
isDefault()		
isDefault()		
isDefault()		
isDefaultNamespace(string $namespaceURI)		
isDefaultValueAvailable()		
isDefaultValueConstant()		
isDeprecated()		
isDestructor()		
isDir()		
isDir()		
isDirectory()		
isDisabled()		
isDispatched()		
isDot()		
isElementContentWhitespace()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEmpty()		
isEnabled()		
isEncrypted()		
isEquivalentTo(IntlCalendar $other, IntlCalendar $cal)		
isExecutable()		
isExecutable()		
isFile()		
isFile()		
isFileFormat(int $format)		
isFinal()		
isFinal()		
isFullScreen()		
isGarbage()		
isGenerator()		
isGet()		
isHead()		
isHidden()		
isHtml()		
isIDIgnorable(mixed $codepoint)		
isIDPart(mixed $codepoint)		
isIDStart(mixed $codepoint)		
isISOControl(mixed $codepoint)		
isId()		
isInstance(SDO_DataObject $data_object)		
isInstance(object $object)		
isInstantiable()		
isInterface()		
isInternal()		
isInternal()		
isInvertible()		
isIterable()		
isIterateable()		
isJavaIDPart(mixed $codepoint)		
isJavaIDStart(mixed $codepoint)		
isJavaSpaceChar(mixed $codepoint)		
isJoined()		
isJste()		
isKnown()		
isLeapYear(int $year)		
isLenient(IntlCalendar $cal)		
isLenient(IntlDateFormatter $fmt)		
isLink()		
isLink()		
isLocalName()		
isLogging()		
isMany()		
isMirrored(mixed $codepoint)		
isNick(string $name0, string $name1 [, int $country = ''])		
isNormalized(string $input [, int $form = Normalizer::FORM_C])		
isNumberSigned()		
isOpenType()		
isOptional()		
isOptions()		
isOriginal()		
isPadded()		
isPadded()		
isPadded()		
isPadded()		
isPassedByReference()		
isPassive()		
isPersistent()		
isPersistent()		
isPersistent()		
isPersistent()		
isPhp()		
isPixelSimilar(ImagickPixel $color, float $fuzz)		
isPixelSimilarQuantum(string $color [, string $fuzz = ''])		
isPost()		
isPrimary()		
isPristine()		
isPrivate()		
isPrivate()		
isPrivate()		
isPrivate()		
isProtected()		
isProtected()		
isProtected()		
isProtected()		
isProtectionEnabled()		
isPublic()		
isPublic()		
isPublic()		
isPut()		
isReadOnly()		
isReadOnly()		
isReadable()		
isReadable()		
isRecoverable()		
isRef(mixed $ref)		
isRegistered()		
isRequestTokenEndpoint(bool $will_issue_request_token)		
isRouted()		
isRunning()		
isRunning()		
isRunning()		
isRunning()		
isSameNode(DOMNode $node)		
isSecondary()		
isSequencedType()		
isSet()		
isSet(int $field, IntlCalendar $cal)		
isShutdown()		
isSimilar(ImagickPixel $color, float $fuzz)		
isSolid(RarArchive $rarfile)		
isStarted()		
isStatic()		
isStatic()		
isStatic()		
isSubclassOf(string $class)		
isSupported(string $feature, string $version)		
isSuspicious(string $text [, string $error = ''])		
isTemporary()		
isTerminated()		
isText()		
isTrait()		
isUAlphabetic(mixed $codepoint)		
isULowercase(mixed $codepoint)		
isUUppercase(mixed $codepoint)		
isUWhiteSpace(mixed $codepoint)		
isUserDefined()		
isUserDefined()		
isUsingExceptions()		
isValid()		
isValid(mixed $value)		
isValidPharFilename(string $filename [, bool $executable = ''])		
isVariadic()		
isVariadic()		
isView()		
isVisible()		
isWaiting()		
isWeekend([float $date = null, IntlCalendar $cal])		
isWhitespace(mixed $codepoint)		
isWhitespaceInElementContent()		
isWorking()		
isWritable()		
isWritable()		
isWritable()		
isWritable()		
isXhtml(tidy $object)		
isXml(tidy $object)		
isXmlHttpRequest()		
isXmlHttpRequest()		
isXmlHttpRequest()		
is_a(object $object, string $class_name [, bool $allow_string = ''])		
is_array(mixed $var)		
is_bool(mixed $var)		
is_callable(mixed $var [, bool $syntax_only = '' [, string $callable_name = '']])		
is_countable(mixed $var)		
is_dir(string $filename)		
is_double()		
is_executable(string $filename)		
is_file(string $filename)		
is_finite(float $val)		
is_float(mixed $var)		
is_infinite(float $val)		
is_int(mixed $var)		
is_integer()		
is_iterable(mixed $var)		
is_link(string $filename)		
is_long()		
is_nan(float $val)		
is_null(mixed $var)		
is_numeric(mixed $var)		
is_object(mixed $var)		
is_readable(string $filename)		
is_real()		
is_resource(mixed $var)		
is_scalar(mixed $var)		
is_soap_fault(mixed $object)		
is_string(mixed $var)		
is_subclass_of(mixed $object, string $class_name [, bool $allow_string = ''])		
is_tainted(string $string)		
is_uploaded_file(string $filename)		
is_writable(string $filename)		
is_writeable()		
isalnum(mixed $codepoint)		
isalpha(mixed $codepoint)		
isbase(mixed $codepoint)		
isblank(mixed $codepoint)		
iscntrl(mixed $codepoint)		
isdefined(mixed $codepoint)		
isdigit(mixed $codepoint)		
isgraph(mixed $codepoint)		
islower(mixed $codepoint)		
isprint(mixed $codepoint)		
ispunct(mixed $codepoint)		
isset(mixed $var [, mixed $... = ''])		
isspace(mixed $codepoint)		
istitle(mixed $codepoint)		
isupper(mixed $codepoint)		
isxdigit(mixed $codepoint)		
italic(resource $handle)		
item(int $index)		
item(int $index)		
iteration()		
iterator_apply(Traversable $iterator, callable $function [, array $args = ''])		
iterator_count(Traversable $iterator)		
iterator_to_array(Traversable $iterator [, bool $use_keys = ''])		
jddayofweek(int $julianday [, int $mode = CAL_DOW_DAYNO])		
jdmonthname(int $julianday, int $mode)		
jdtofrench(int $juliandaycount)		
jdtogregorian(int $julianday)		
jdtojewish(int $juliandaycount [, bool $hebrew = '' [, int $fl = '']])		
jdtojulian(int $julianday)		
jdtounix(int $jday)		
jewishtojd(int $month, int $day, int $year)		
jobHandle()		
jobStatus(string $job_handle)		
join()		
join()		
join([string $glue = ''])		
join([string $glue = ''])		
join([string $glue = ''])		
join([string $glue = ''])		
join()		
jpeg2wbmp(string $jpegname, string $wbmpname, int $dest_height, int $dest_width, int $threshold)		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
jsonSerialize()		
json_decode(string $json [, bool $assoc = '' [, int $depth = 512 [, int $options = '']]])		
json_encode(mixed $value [, int $options = '' [, int $depth = 512]])		
json_last_error()		
json_last_error_msg()		
judy_type(Judy $array)		
judy_version()		
juliantojd(int $month, int $day, int $year)		
kadm5_chpass_principal(resource $handle, string $principal, string $password)		
kadm5_create_principal(resource $handle, string $principal [, string $password = '' [, array $options = '']])		
kadm5_delete_principal(resource $handle, string $principal)		
kadm5_destroy(resource $handle)		
kadm5_flush(resource $handle)		
kadm5_get_policies(resource $handle)		
kadm5_get_principal(resource $handle, string $principal)		
kadm5_get_principals(resource $handle)		
kadm5_init_with_password(string $admin_server, string $realm, string $principal, string $password)		
kadm5_modify_principal(resource $handle, string $principal, array $options)		
keepalive([bool $value = ''])		
key(array $array)		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key()		
key_exists()		
keys()		
kill(int $processid, mysqli $link)		
kill(resource $link, int $processid)		
kill()		
kill()		
kill(integer $pid [, string $signal_no = ''])		
killClient(integer $client_id)		
killConnection(mysqlnd_connection $connection, int $pid)		
killCursor(string $server_hash, int|MongoInt64 $id)		
krsort(array $array [, int $sort_flags = SORT_REGULAR])		
ksort(array $array [, int $sort_flags = SORT_REGULAR])		
ksort()		
ksort()		
ksort([callable $comparator = ''])		
ksorted([callable $comparator = ''])		
labelFrame(string $label)		
labelFrame(string $label)		
labelImage(string $label)		
labelimage(string $label)		
langdepvalue(string $language)		
last()		
last()		
last()		
last()		
last()		
last()		
last([string $index = ''])		
lastEmpty([int $index = -1])		
lastError()		
lastError(resource $dbhandle)		
lastErrorCode()		
lastErrorMsg()		
lastInsertId([string $name = ''])		
lastInsertRowID()		
lastInsertRowid(resource $dbhandle)		
lcfirst(string $str)		
lcg_value()		
lchgrp(string $filename, mixed $group)		
lchown(string $filename, mixed $user)		
ldap_8859_to_t61(string $value)		
ldap_add(resource $link_identifier, string $dn, array $entry [, array $serverctrls = ''])		
ldap_bind(resource $link_identifier [, string $bind_rdn = '' [, string $bind_password = '']])		
ldap_close()		
ldap_compare(resource $link_identifier, string $dn, string $attribute, string $value [, array $serverctrls = ''])		
ldap_connect([string $host = '' [, int $port = 389]])		
ldap_control_paged_result(resource $link, int $pagesize [, bool $iscritical = '' [, string $cookie = ""]])		
ldap_control_paged_result_response(resource $link, resource $result [, string $cookie = '' [, int $estimated = '']])		
ldap_count_entries(resource $link_identifier, resource $result_identifier)		
ldap_delete(resource $link_identifier, string $dn [, array $serverctrls = ''])		
ldap_dn2ufn(string $dn)		
ldap_err2str(int $errno)		
ldap_errno(resource $link_identifier)		
ldap_error(resource $link_identifier)		
ldap_escape(string $value [, string $ignore = '' [, int $flags = '']])		
ldap_exop(resource $link, string $reqoid [, string $reqdata = '' [, array $servercontrols = '' [, string $retdata = '' [, string $retoid = '']]]])		
ldap_exop_passwd(resource $link [, string $user = '' [, string $oldpw = '' [, string $newpw = '' [, array $serverctrls = '']]]])		
ldap_exop_refresh(resource $link, string $dn, int $ttl)		
ldap_exop_whoami(resource $link)		
ldap_explode_dn(string $dn, int $with_attrib)		
ldap_first_attribute(resource $link_identifier, resource $result_entry_identifier)		
ldap_first_entry(resource $link_identifier, resource $result_identifier)		
ldap_first_reference(resource $link, resource $result)		
ldap_free_result(resource $result_identifier)		
ldap_get_attributes(resource $link_identifier, resource $result_entry_identifier)		
ldap_get_dn(resource $link_identifier, resource $result_entry_identifier)		
ldap_get_entries(resource $link_identifier, resource $result_identifier)		
ldap_get_option(resource $link_identifier, int $option, mixed $retval)		
ldap_get_values(resource $link_identifier, resource $result_entry_identifier, string $attribute)		
ldap_get_values_len(resource $link_identifier, resource $result_entry_identifier, string $attribute)		
ldap_list(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '' [, array $serverctrls = '']]]]]])		
ldap_mod_add(resource $link_identifier, string $dn, array $entry [, array $serverctrls = ''])		
ldap_mod_del(resource $link_identifier, string $dn, array $entry [, array $serverctrls = ''])		
ldap_mod_replace(resource $link_identifier, string $dn, array $entry [, array $serverctrls = ''])		
ldap_modify()		
ldap_modify_batch(resource $link_identifier, string $dn, array $entry [, array $serverctrls = ''])		
ldap_next_attribute(resource $link_identifier, resource $result_entry_identifier)		
ldap_next_entry(resource $link_identifier, resource $result_entry_identifier)		
ldap_next_reference(resource $link, resource $entry)		
ldap_parse_exop(resource $link, resource $result [, string $retdata = '' [, string $retoid = '']])		
ldap_parse_reference(resource $link, resource $entry, array $referrals)		
ldap_parse_result(resource $link, resource $result, int $errcode [, string $matcheddn = '' [, string $errmsg = '' [, array $referrals = '' [, array $serverctrls = '']]]])		
ldap_read(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '' [, array $serverctrls = '']]]]]])		
ldap_rename(resource $link_identifier, string $dn, string $newrdn, string $newparent, bool $deleteoldrdn [, array $serverctrls = ''])		
ldap_sasl_bind(resource $link [, string $binddn = '' [, string $password = '' [, string $sasl_mech = '' [, string $sasl_realm = '' [, string $sasl_authc_id = '' [, string $sasl_authz_id = '' [, string $props = '']]]]]]])		
ldap_search(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '' [, array $serverctrls = '']]]]]])		
ldap_set_option(resource $link_identifier, int $option, mixed $newval)		
ldap_set_rebind_proc(resource $link, callable $callback)		
ldap_sort(resource $link, resource $result, string $sortfilter)		
ldap_start_tls(resource $link)		
ldap_t61_to_8859(string $value)		
ldap_unbind(resource $link_identifier)		
leastSquaresByFactorisation(array $a, array $b)		
leastSquaresBySVD(array $a, array $b)		
leave(IVisitable $visitable)		
left(string $tok)		
left(string $tok)		
lengths(resource $result)		
levelImage(float $blackPoint, float $gamma, float $whitePoint [, int $channel = Imagick::CHANNEL_DEFAULT])		
levelToString(int $level)		
levelimage(float $blackPoint, float $gamma, float $whitePoint [, int $channel = Gmagick::CHANNEL_DEFAULT])		
levenshtein(string $str1, string $str2, int $cost_ins, int $cost_rep, int $cost_del)		
libxml_clear_errors()		
libxml_disable_entity_loader([bool $disable = ''])		
libxml_get_errors()		
libxml_get_last_error()		
libxml_set_external_entity_loader(callable $resolver_function)		
libxml_set_streams_context(resource $streams_context)		
libxml_use_internal_errors([bool $use_errors = ''])		
limit(int $num)		
limit(integer $rows)		
limit(integer $rows)		
limit(integer $rows)		
limit(integer $rows)		
limit(integer $rows)		
limit(integer $rows)		
limit(integer $rows)		
line(float $sx, float $sy, float $ex, float $ey)		
line(float $sx, float $sy, float $ex, float $ey)		
lineTo(UI\Point $point, float $radius, float $angle, float $sweep, float $negative)		
lineTo(float $x, float $y)		
lineTo(float $x, float $y, CairoContext $context)		
linearStretchImage(float $blackPoint, float $whitePoint)		
link(string $target, string $link)		
link(array $parameter)		
linkinfo(string $path)		
liquidRescaleImage(int $width, int $height, float $delta_x, float $rigidity)		
list(mixed $var1 [, mixed $... = ''])		
listAbbreviations()		
listClients()		
listCollections()		
listDBs()		
listFields(mysqlnd_connection $connection, string $table, string $achtung_wild)		
listIDs()		
listIdentifiers([int $what = DateTimeZone::ALL [, string $country = '']])		
listMethod(mysqlnd_connection $connection, string $query, string $achtung_wild, string $par1)		
listRegistry()		
list_directory(string $path [, int $level = ''])		
listen(string $host, integer $port, string $socket_type)		
load(string $filename)		
load(string $filename [, int $options = ''])		
load()		
loadExtension(string $shared_library)		
loadFile(string $xml_file)		
loadFromFile(string $filename [, int $options = ''])		
loadFromFile(string $filename [, int $size = '' [, int $options = '']])		
loadFromFile(string $filename [, int $size = '' [, int $options = '']])		
loadFromFile(string $filename [, int $size = '' [, int $options = '']])		
loadFromString(string $contents [, int $options = ''])		
loadFromString(string $contents [, int $size = '' [, int $options = '']])		
loadFromString(string $contents [, int $size = '' [, int $options = '']])		
loadFromString(string $contents [, int $size = '' [, int $options = '']])		
loadHTML(string $source [, int $options = ''])		
loadHTMLFile(string $filename [, int $options = ''])		
loadHosts(string $hosts)		
loadJPEG(string $filename)		
loadPNG(string $filename [, bool $deferred = ''])		
loadPhar(string $filename [, string $alias = ''])		
loadRaw(string $filename, int $width, int $height, int $color_space)		
loadString(string $xml_string)		
loadTTC(string $fontfile, int $index [, bool $embed = ''])		
loadTTF(string $fontfile [, bool $embed = ''])		
loadType1(string $afmfile [, string $pfmfile = ''])		
loadXML(string $source [, int $options = ''])		
locale_accept_from_http(string $header)		
locale_canonicalize(string $locale)		
locale_compose(array $subtags)		
locale_filter_matches(string $langtag, string $locale [, bool $canonicalize = ''])		
locale_get_all_variants(string $locale)		
locale_get_default()		
locale_get_display_language(string $locale [, string $in_locale = ''])		
locale_get_display_name(string $locale [, string $in_locale = ''])		
locale_get_display_region(string $locale [, string $in_locale = ''])		
locale_get_display_script(string $locale [, string $in_locale = ''])		
locale_get_display_variant(string $locale [, string $in_locale = ''])		
locale_get_keywords(string $locale)		
locale_get_primary_language(string $locale)		
locale_get_region(string $locale)		
locale_get_script(string $locale)		
locale_lookup(array $langtag, string $locale [, bool $canonicalize = '' [, string $default = '']])		
locale_parse(string $locale)		
locale_set_default(string $locale)		
localeconv()		
localtime()		
localtime(string $value [, int $position = '', IntlDateFormatter $fmt])		
locateName(string $name [, int $flags = ''])		
lock()		
lock([int $wait = -1])		
lock([int $wait = -1])		
lock(array $parameter)		
lock(int $mutex)		
lock()		
lock()		
lock()		
lock()		
lock()		
lock()		
lock()		
lockExclusive([integer $lock_waiting_option = ''])		
lockExclusive([integer $lock_waiting_option = ''])		
lockShared([integer $lock_waiting_option = ''])		
lockShared([integer $lock_waiting_option = ''])		
lock_read()		
log(float $arg [, float $base = M_E])		
log(string $level [, string $message = '' [, array $content = '' [, string $logger = '']]])		
log10(float $arg)		
log1p(float $number)		
log_cmd_delete(array $server, array $writeOptions, array $deleteOptions, array $protocolOptions)		
log_cmd_insert(array $server, array $document, array $writeOptions, array $protocolOptions)		
log_cmd_update(array $server, array $writeOptions, array $updateOptions, array $protocolOptions)		
log_getmore(array $server, array $info)		
log_killcursor(array $server, array $info)		
log_reply(array $server, array $messageHeaders, array $operationHeaders)		
log_write_batch(array $server, array $writeOptions, array $batch, array $protocolOptions)		
long2ip(int $proper_address)		
lookup(array $langtag, string $locale [, bool $canonicalize = '' [, string $default = '']])		
lookupNamespace(string $prefix)		
lookupNamespaceUri(string $prefix)		
lookupPrefix(string $namespaceURI)		
loop([callable $callback = '' [, callable $error_callback = '']])		
loop([int $flags = ''])		
loopCount(int $point)		
loopFork()		
loopInPoint(int $point)		
loopOutPoint(int $point)		
lstat(string $filename)		
ltrim(string $str [, string $character_mask = ''])		
lzf_compress(string $data)		
lzf_decompress(string $data)		
lzf_optimized_for()		
m_checkstatus(resource $conn, int $identifier)		
m_completeauthorizations(resource $conn, int $array)		
m_connect(resource $conn)		
m_connectionerror(resource $conn)		
m_deletetrans(resource $conn, int $identifier)		
m_destroyconn(resource $conn)		
m_destroyengine()		
m_getcell(resource $conn, int $identifier, string $column, int $row)		
m_getcellbynum(resource $conn, int $identifier, int $column, int $row)		
m_getcommadelimited(resource $conn, int $identifier)		
m_getheader(resource $conn, int $identifier, int $column_num)		
m_initconn()		
m_initengine(string $location)		
m_iscommadelimited(resource $conn, int $identifier)		
m_maxconntimeout(resource $conn, int $secs)		
m_monitor(resource $conn)		
m_numcolumns(resource $conn, int $identifier)		
m_numrows(resource $conn, int $identifier)		
m_parsecommadelimited(resource $conn, int $identifier)		
m_responsekeys(resource $conn, int $identifier)		
m_responseparam(resource $conn, int $identifier, string $key)		
m_returnstatus(resource $conn, int $identifier)		
m_setblocking(resource $conn, int $tf)		
m_setdropfile(resource $conn, string $directory)		
m_setip(resource $conn, string $host, int $port)		
m_setssl(resource $conn, string $host, int $port)		
m_setssl_cafile(resource $conn, string $cafile)		
m_setssl_files(resource $conn, string $sslkeyfile, string $sslcertfile)		
m_settimeout(resource $conn, int $seconds)		
m_sslcert_gen_hash(string $filename)		
m_transactionssent(resource $conn)		
m_transinqueue(resource $conn)		
m_transkeyval(resource $conn, int $identifier, string $key, string $value)		
m_transnew(resource $conn)		
m_transsend(resource $conn, int $identifier)		
m_uwait(int $microsecs)		
m_validateidentifier(resource $conn, int $tf)		
m_verifyconnection(resource $conn, int $tf)		
m_verifysslcert(resource $conn, int $tf)		
magic_quotes_runtime()		
magnifyImage()		
magnifyimage()		
mail(string $to, string $subject, string $message [, mixed $additional_headers = '' [, string $additional_parameters = '']])		
mailparse_determine_best_xfer_encoding(resource $fp)		
mailparse_msg_create()		
mailparse_msg_extract_part(resource $mimemail, string $msgbody [, callable $callbackfunc = ''])		
mailparse_msg_extract_part_file(resource $mimemail, mixed $filename [, callable $callbackfunc = ''])		
mailparse_msg_extract_whole_part_file(resource $mimemail, string $filename [, callable $callbackfunc = ''])		
mailparse_msg_free(resource $mimemail)		
mailparse_msg_get_part(resource $mimemail, string $mimesection)		
mailparse_msg_get_part_data(resource $mimemail)		
mailparse_msg_get_structure(resource $mimemail)		
mailparse_msg_parse(resource $mimemail, string $data)		
mailparse_msg_parse_file(string $filename)		
mailparse_rfc822_parse_addresses(string $addresses)		
mailparse_stream_encode(resource $sourcefp, resource $destfp, string $encoding)		
mailparse_uudecode_all(resource $fp)		
main()		
makeRequest(EventHttpRequest $req, int $type, string $uri)		
map(callable $callback)		
map(callable $callback)		
map(callable $callback)		
map(callable $callback)		
mapImage(Imagick $map, bool $dither)		
mapPhar([string $alias = '' [, int $dataoffset = '']])		
mapimage(gmagick $gmagick, bool $dither)		
markDirty()		
markDirtyRectangle(float $x, float $y, float $width, float $height)		
mask(CairoPattern $pattern, CairoContext $context)		
maskSurface(CairoSurface $surface [, float $x = '' [, float $y = '', CairoContext $context]])		
match(string $uri)		
matte(float $x, float $y, int $paintMethod)		
matteFloodfillImage(float $alpha, float $fuzz, mixed $bordercolor, int $x, int $y)		
max(array $values, mixed $value1, mixed $value2 [, mixed $... = ''])		
max()		
maxTimeMS(int $ms)		
maxdb([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])		
maxdb_affected_rows(resource $link)		
maxdb_autocommit(resource $link, bool $mode)		
maxdb_bind_param()		
maxdb_bind_result()		
maxdb_change_user(resource $link, string $user, string $password, string $database)		
maxdb_character_set_name(resource $link)		
maxdb_client_encoding()		
maxdb_close(resource $link)		
maxdb_close_long_data()		
maxdb_commit(resource $link)		
maxdb_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])		
maxdb_connect_errno()		
maxdb_connect_error()		
maxdb_data_seek(resource $result, int $offset)		
maxdb_debug(string $debug)		
maxdb_disable_reads_from_master(resource $link)		
maxdb_disable_rpl_parse(resource $link)		
maxdb_dump_debug_info(resource $link)		
maxdb_embedded_connect([string $dbname = ''])		
maxdb_enable_reads_from_master(resource $link)		
maxdb_enable_rpl_parse(resource $link)		
maxdb_errno(resource $link)		
maxdb_error(resource $link)		
maxdb_escape_string()		
maxdb_execute()		
maxdb_fetch()		
maxdb_fetch_array(resource $result [, int $resulttype = ''])		
maxdb_fetch_assoc(resource $result)		
maxdb_fetch_field(resource $result)		
maxdb_fetch_field_direct(resource $result, int $fieldnr)		
maxdb_fetch_fields(resource $result)		
maxdb_fetch_lengths(resource $result)		
maxdb_fetch_object(object $result)		
maxdb_fetch_row(resource $result)		
maxdb_field_count(resource $link)		
maxdb_field_seek(resource $result, int $fieldnr)		
maxdb_field_tell(resource $result)		
maxdb_free_result(resource $result)		
maxdb_get_client_info()		
maxdb_get_client_version()		
maxdb_get_host_info(resource $link)		
maxdb_get_metadata()		
maxdb_get_proto_info(resource $link)		
maxdb_get_server_info(resource $link)		
maxdb_get_server_version(resource $link)		
maxdb_info(resource $link)		
maxdb_init()		
maxdb_insert_id(resource $link)		
maxdb_kill(resource $link, int $processid)		
maxdb_master_query(resource $link, string $query)		
maxdb_more_results(resource $link)		
maxdb_multi_query(resource $link, string $query)		
maxdb_next_result(resource $link)		
maxdb_num_fields(resource $result)		
maxdb_num_rows(resource $result)		
maxdb_options(resource $link, int $option, mixed $value)		
maxdb_param_count()		
maxdb_ping(resource $link)		
maxdb_prepare(resource $link, string $query)		
maxdb_query(resource $link, string $query [, int $resultmode = ''])		
maxdb_real_connect(resource $link [, string $hostname = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])		
maxdb_real_escape_string(resource $link, string $escapestr)		
maxdb_real_query(resource $link, string $query)		
maxdb_report(int $flags)		
maxdb_rollback(resource $link)		
maxdb_rpl_parse_enabled(resource $link)		
maxdb_rpl_probe(resource $link)		
maxdb_rpl_query_type(resource $link)		
maxdb_select_db(resource $link, string $dbname)		
maxdb_send_long_data()		
maxdb_send_query(resource $link, string $query)		
maxdb_server_end()		
maxdb_server_init([array $server = '' [, array $groups = '']])		
maxdb_set_opt()		
maxdb_sqlstate(resource $link)		
maxdb_ssl_set(resource $link, string $key, string $cert, string $ca, string $capath, string $cipher)		
maxdb_stat(resource $link)		
maxdb_stmt_affected_rows(resource $stmt)		
maxdb_stmt_bind_param(resource $stmt, string $types, mixed $var1 [, mixed $... = '', array $var])		
maxdb_stmt_bind_result(resource $stmt, mixed $var1 [, mixed $... = ''])		
maxdb_stmt_close(resource $stmt)		
maxdb_stmt_close_long_data(resource $stmt, int $param_nr)		
maxdb_stmt_data_seek(resource $statement, int $offset)		
maxdb_stmt_errno(resource $stmt)		
maxdb_stmt_error(resource $stmt)		
maxdb_stmt_execute(resource $stmt)		
maxdb_stmt_fetch(resource $stmt)		
maxdb_stmt_free_result(resource $stmt)		
maxdb_stmt_init(resource $link)		
maxdb_stmt_num_rows(resource $stmt)		
maxdb_stmt_param_count(resource $stmt)		
maxdb_stmt_prepare(resource $stmt, string $query)		
maxdb_stmt_reset(resource $stmt)		
maxdb_stmt_result_metadata(resource $stmt)		
maxdb_stmt_send_long_data(resource $stmt, int $param_nr, string $data)		
maxdb_stmt_sqlstate(resource $stmt)		
maxdb_stmt_store_result(resource $stmt)		
maxdb_store_result(resource $link)		
maxdb_thread_id(resource $link)		
maxdb_thread_safe()		
maxdb_use_result(resource $link)		
maxdb_warning_count(resource $link)		
mb_check_encoding()		
mb_chr(int $cp [, string $encoding = ''])		
mb_convert_case()		
mb_convert_encoding()		
mb_convert_kana()		
mb_convert_variables(string $to_encoding, mixed $from_encoding, mixed $vars [, mixed $... = ''])		
mb_decode_mimeheader(string $str)		
mb_decode_numericentity()		
mb_detect_encoding()		
mb_detect_order()		
mb_encode_mimeheader()		
mb_encode_numericentity()		
mb_encoding_aliases(string $encoding)		
mb_ereg(string $pattern, string $string [, array $regs = ''])		
mb_ereg_match(string $pattern, string $string [, string $option = "msr"])		
mb_ereg_replace(string $pattern, string $replacement, string $string [, string $option = "msr"])		
mb_ereg_replace_callback(string $pattern, callable $callback, string $string [, string $option = "msr"])		
mb_ereg_search([string $pattern = '' [, string $option = "ms"]])		
mb_ereg_search_getpos()		
mb_ereg_search_getregs()		
mb_ereg_search_init(string $string [, string $pattern = '' [, string $option = "msr"]])		
mb_ereg_search_pos([string $pattern = '' [, string $option = "ms"]])		
mb_ereg_search_regs([string $pattern = '' [, string $option = "ms"]])		
mb_ereg_search_setpos(int $position)		
mb_eregi(string $pattern, string $string [, array $regs = ''])		
mb_eregi_replace(string $pattern, string $replace, string $string [, string $option = "msri"])		
mb_get_info([string $type = "all"])		
mb_http_input([string $type = ""])		
mb_http_output()		
mb_internal_encoding()		
mb_language()		
mb_list_encodings()		
mb_ord(string $str [, string $encoding = ''])		
mb_output_handler(string $contents, int $status)		
mb_parse_str(string $encoded_string [, array $result = ''])		
mb_preferred_mime_name(string $encoding)		
mb_regex_encoding()		
mb_regex_set_options()		
mb_scrub(string $str [, string $encoding = ''])		
mb_send_mail(string $to, string $subject, string $message [, mixed $additional_headers = '' [, string $additional_parameter = '']])		
mb_split(string $pattern, string $string [, int $limit = -1])		
mb_strcut()		
mb_strimwidth()		
mb_stripos()		
mb_stristr()		
mb_strlen()		
mb_strpos()		
mb_strrchr()		
mb_strrichr()		
mb_strripos()		
mb_strrpos()		
mb_strstr()		
mb_strtolower()		
mb_strtoupper()		
mb_strwidth()		
mb_substitute_character()		
mb_substr()		
mb_substr_count()		
mcrypt_cbc(string $cipher, string $key, string $data, int $mode [, string $iv = ''])		
mcrypt_cfb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])		
mcrypt_create_iv(int $size [, int $source = MCRYPT_DEV_URANDOM])		
mcrypt_decrypt(string $cipher, string $key, string $data, string $mode [, string $iv = ''])		
mcrypt_ecb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])		
mcrypt_enc_get_algorithms_name(resource $td)		
mcrypt_enc_get_block_size(resource $td)		
mcrypt_enc_get_iv_size(resource $td)		
mcrypt_enc_get_key_size(resource $td)		
mcrypt_enc_get_modes_name(resource $td)		
mcrypt_enc_get_supported_key_sizes(resource $td)		
mcrypt_enc_is_block_algorithm(resource $td)		
mcrypt_enc_is_block_algorithm_mode(resource $td)		
mcrypt_enc_is_block_mode(resource $td)		
mcrypt_enc_self_test(resource $td)		
mcrypt_encrypt(string $cipher, string $key, string $data, string $mode [, string $iv = ''])		
mcrypt_generic(resource $td, string $data)		
mcrypt_generic_deinit(resource $td)		
mcrypt_generic_end(resource $td)		
mcrypt_generic_init(resource $td, string $key, string $iv)		
mcrypt_get_block_size(string $cipher, string $mode)		
mcrypt_get_cipher_name(string $cipher)		
mcrypt_get_iv_size(string $cipher, string $mode)		
mcrypt_get_key_size(string $cipher, string $mode)		
mcrypt_list_algorithms("mcrypt.algorithms_dir")		
mcrypt_list_modes("mcrypt.modes_dir")		
mcrypt_module_close(resource $td)		
mcrypt_module_get_algo_block_size(string $algorithm [, string $lib_dir = ''])		
mcrypt_module_get_algo_key_size(string $algorithm [, string $lib_dir = ''])		
mcrypt_module_get_supported_key_sizes(string $algorithm [, string $lib_dir = ''])		
mcrypt_module_is_block_algorithm(string $algorithm [, string $lib_dir = ''])		
mcrypt_module_is_block_algorithm_mode(string $mode [, string $lib_dir = ''])		
mcrypt_module_is_block_mode(string $mode [, string $lib_dir = ''])		
mcrypt_module_open(string $algorithm, string $algorithm_directory, string $mode, string $mode_directory)		
mcrypt_module_self_test(string $algorithm [, string $lib_dir = ''])		
mcrypt_ofb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])		
md5(string $str [, bool $raw_output = ''])		
md5_file(string $filename [, bool $raw_output = ''])		
mdecrypt_generic(resource $td, string $data)		
measureText(string $text, float $width [, bool $wordwrap = ''])		
measureText(string $text, float $width, float $font_size, float $char_space, float $word_space [, bool $word_wrap = ''])		
medianFilterImage(float $radius)		
medianfilterimage(float $radius)		
memcache_debug(bool $on_off)		
memoryUsage()		
memory_get_peak_usage([bool $real_usage = ''])		
memory_get_usage([bool $real_usage = ''])		
merge(DOMDocument $src, DOMDocument $diff)		
merge(mixed $values)		
merge(mixed $values)		
merge(mixed $values)		
merge(mixed $values)		
merge(mixed $values)		
merge(SolrDocument $sourceDoc [, bool $overwrite = ''])		
merge(SolrInputDocument $sourceDoc [, bool $overwrite = ''])		
merge(mixed $from [, bool $overwrite = ''])		
merge(mixed $src, mixed $diff)		
merge(string $src, string $diff)		
merge(string $src, string $diff)		
merge(CairoFontOptions $other)		
mergeCells(string $scope, string $data)		
mergeImageLayers(int $layer_method)		
metaSearch(array $queries, int $type)		
metaphone(string $str [, int $phonemes = ''])		
method_exists(mixed $object, string $method_name)		
mhash(int $hash, string $data [, string $key = ''])		
mhash_count()		
mhash_get_block_size(int $hash)		
mhash_get_hash_name(int $hash)		
mhash_keygen_s2k(int $hash, string $password, string $salt, int $bytes)		
microtime([bool $get_as_float = ''])		
mime_content_type(string $filename)		
mimetype()		
min(array $values, mixed $value1, mixed $value2 [, mixed $... = ''])		
ming_keypress(string $char)		
ming_setcubicthreshold(int $threshold)		
ming_setscale(float $scale)		
ming_setswfcompression(int $level)		
ming_useconstants(int $use)		
ming_useswfversion(int $version)		
minifyImage()		
minifyimage()		
mkdir(string $pathname [, int $mode = 0777 [, bool $recursive = '' [, resource $context = '']]])		
mkdir(string $path, int $mode, int $options)		
mktime("Y")		
modify(string $modify, DateTime $object)		
modify(string $modify)		
modify(string $search_condition)		
modulateImage(float $brightness, float $saturation, float $hue)		
modulateimage(float $brightness, float $saturation, float $hue)		
money_format(string $format, float $number)		
montageImage(ImagickDraw $draw, string $tile_geometry, string $thumbnail_geometry, int $mode, string $frame)		
moreResults(mysqlnd_connection $connection)		
more_results(mysql_stmt $stmt)		
more_results(mysqli $link)		
more_results(resource $link)		
morphImages(int $number_frames)		
morphology(int $morphologyMethod, int $iterations, ImagickKernel $ImagickKernel [, int $channel = Imagick::CHANNEL_DEFAULT])		
mosaicImages()		
motionBlurImage(float $radius, float $sigma, float $angle [, int $channel = Imagick::CHANNEL_DEFAULT])		
motionblurimage(float $radius, float $sigma, float $angle)		
mount(string $pharpath, string $externalpath)		
move(array $parameter)		
move(float $dx, float $dy)		
move(int $toIndex, int $fromIndex)		
movePen(float $dx, float $dy)		
movePenTo(float $x, float $y)		
moveTextPos(float $x, float $y [, bool $set_leading = ''])		
moveTo(float $x, float $y)		
moveTo(float $x, float $y)		
moveTo(float $x, float $y)		
moveTo(float $x, float $y)		
moveTo(float $x, float $y, CairoContext $context)		
moveToAttribute(string $name)		
moveToAttributeNo(int $index)		
moveToAttributeNs(string $localName, string $namespaceURI)		
moveToElement()		
moveToFirstAttribute()		
moveToNextAttribute()		
moveToNextLine()		
move_uploaded_file(string $filename, string $destination)		
mqseries_back(resource $hconn, resource $compCode, resource $reason)		
mqseries_begin(resource $hconn, array $beginOptions, resource $compCode, resource $reason)		
mqseries_close(resource $hconn, resource $hobj, int $options, resource $compCode, resource $reason)		
mqseries_cmit(resource $hconn, resource $compCode, resource $reason)		
mqseries_conn(string $qManagerName, resource $hconn, resource $compCode, resource $reason)		
mqseries_connx(string $qManagerName, array $connOptions, resource $hconn, resource $compCode, resource $reason)		
mqseries_disc(resource $hconn, resource $compCode, resource $reason)		
mqseries_get(resource $hConn, resource $hObj, array $md, array $gmo, int $bufferLength, string $msg, int $data_length, resource $compCode, resource $reason)		
mqseries_inq(resource $hconn, resource $hobj, int $selectorCount, array $selectors, int $intAttrCount, resource $intAttr, int $charAttrLength, resource $charAttr, resource $compCode, resource $reason)		
mqseries_open(resource $hconn, array $objDesc, int $option, resource $hobj, resource $compCode, resource $reason)		
mqseries_put(resource $hConn, resource $hObj, array $md, array $pmo, string $message, resource $compCode, resource $reason)		
mqseries_put1(resource $hconn, resource $objDesc, resource $msgDesc, resource $pmo, string $buffer, resource $compCode, resource $reason)		
mqseries_set(resource $hConn, resource $hObj, int $selectorCount, array $selectors, int $intAttrCount, array $intAttrs, int $charAttrLength, array $charAttrs, resource $compCode, resource $reason)		
mqseries_strerror(int $reason)		
msession_connect(string $host, string $port)		
msession_count()		
msession_create(string $session [, string $classname = '' [, string $data = '']])		
msession_destroy(string $name)		
msession_disconnect()		
msession_find(string $name, string $value)		
msession_get(string $session, string $name, string $value)		
msession_get_array(string $session)		
msession_get_data(string $session)		
msession_inc(string $session, string $name)		
msession_list()		
msession_listvar(string $name)		
msession_lock(string $name)		
msession_plugin(string $session, string $val [, string $param = ''])		
msession_randstr(int $param)		
msession_set(string $session, string $name, string $value)		
msession_set_array(string $session, array $tuples)		
msession_set_data(string $session, string $value)		
msession_timeout(string $session [, int $param = ''])		
msession_uniq(int $param [, string $classname = '' [, string $data = '']])		
msession_unlock(string $session, int $key)		
msg(string $title, string $msg)		
msg_get_queue(int $key [, int $perms = 0666])		
msg_queue_exists(int $key)		
msg_receive(resource $queue, int $desiredmsgtype, int $msgtype, int $maxsize, mixed $message [, bool $unserialize = '' [, int $flags = '' [, int $errorcode = '']]])		
msg_remove_queue(resource $queue)		
msg_send(resource $queue, int $msgtype, mixed $message [, bool $serialize = '' [, bool $blocking = '' [, int $errorcode = '']]])		
msg_set_queue(resource $queue, array $data)		
msg_stat_queue(resource $queue)		
msgfmt_create(string $locale, string $pattern)		
msgfmt_format(array $args, MessageFormatter $fmt)		
msgfmt_format_message(string $locale, string $pattern, array $args)		
msgfmt_get_error_code(MessageFormatter $fmt)		
msgfmt_get_error_message(MessageFormatter $fmt)		
msgfmt_get_locale(NumberFormatter $formatter)		
msgfmt_get_pattern(MessageFormatter $fmt)		
msgfmt_parse(string $value, MessageFormatter $fmt)		
msgfmt_parse_message(string $locale, string $pattern, string $source, string $value)		
msgfmt_set_pattern(string $pattern, MessageFormatter $fmt)		
msql()		
msql_affected_rows(resource $result)		
msql_close([resource $link_identifier = ''])		
msql_connect([string $hostname = ''])		
msql_create_db(string $database_name [, resource $link_identifier = ''])		
msql_createdb()		
msql_data_seek(resource $result, int $row_number)		
msql_db_query(string $database, string $query [, resource $link_identifier = ''])		
msql_dbname()		
msql_drop_db(string $database_name [, resource $link_identifier = ''])		
msql_error()		
msql_fetch_array(resource $result [, int $result_type = ''])		
msql_fetch_field(resource $result [, int $field_offset = ''])		
msql_fetch_object(resource $result)		
msql_fetch_row(resource $result)		
msql_field_flags(resource $result, int $field_offset)		
msql_field_len(resource $result, int $field_offset)		
msql_field_name(resource $result, int $field_offset)		
msql_field_seek(resource $result, int $field_offset)		
msql_field_table(resource $result, int $field_offset)		
msql_field_type(resource $result, int $field_offset)		
msql_fieldflags()		
msql_fieldlen()		
msql_fieldname()		
msql_fieldtable()		
msql_fieldtype()		
msql_free_result(resource $result)		
msql_list_dbs([resource $link_identifier = ''])		
msql_list_fields(string $database, string $tablename [, resource $link_identifier = ''])		
msql_list_tables(string $database [, resource $link_identifier = ''])		
msql_num_fields(resource $result)		
msql_num_rows(resource $query_identifier)		
msql_numfields()		
msql_numrows()		
msql_pconnect([string $hostname = ''])		
msql_query(string $query [, resource $link_identifier = ''])		
msql_regcase()		
msql_result(resource $result, int $row [, mixed $field = ''])		
msql_select_db(string $database_name [, resource $link_identifier = ''])		
msql_tablename()		
mssql_bind(resource $stmt, string $param_name, mixed $var, int $type [, bool $is_output = '' [, bool $is_null = '' [, int $maxlen = -1]]])		
mssql_close([resource $link_identifier = ''])		
mssql_connect([string $servername = '' [, string $username = '' [, string $password = '' [, bool $new_link = '']]]])		
mssql_data_seek(resource $result_identifier, int $row_number)		
mssql_execute(resource $stmt [, bool $skip_results = ''])		
mssql_fetch_array(resource $result [, int $result_type = MSSQL_BOTH])		
mssql_fetch_assoc(resource $result_id)		
mssql_fetch_batch(resource $result)		
mssql_fetch_field(resource $result [, int $field_offset = -1])		
mssql_fetch_object(resource $result)		
mssql_fetch_row(resource $result)		
mssql_field_length(resource $result [, int $offset = -1])		
mssql_field_name(resource $result [, int $offset = -1])		
mssql_field_seek(resource $result, int $field_offset)		
mssql_field_type(resource $result [, int $offset = -1])		
mssql_free_result(resource $result)		
mssql_free_statement(resource $stmt)		
mssql_get_last_message()		
mssql_guid_string(string $binary [, bool $short_format = ''])		
mssql_init(string $sp_name [, resource $link_identifier = ''])		
mssql_min_error_severity(int $severity)		
mssql_min_message_severity(int $severity)		
mssql_next_result(resource $result_id)		
mssql_num_fields(resource $result)		
mssql_num_rows(resource $result)		
mssql_pconnect([string $servername = '' [, string $username = '' [, string $password = '' [, bool $new_link = '']]]])		
mssql_query(string $query [, resource $link_identifier = '' [, int $batch_size = '']])		
mssql_result(resource $result, int $row, mixed $field)		
mssql_rows_affected(resource $link_identifier)		
mssql_select_db(string $database_name [, resource $link_identifier = ''])		
mt_getrandmax()		
mt_rand(int $min, int $max)		
mt_srand([int $seed = '' [, int $mode = MT_RAND_MT19937]])		
multColor(float $red, float $green, float $blue [, float $a = ''])		
multi_query(resource $link, string $query)		
multi_query(string $query, mysqli $link)		
multiply(CairoMatrix $matrix1, CairoMatrix $matrix2)		
multiply(UI\Draw\Matrix $matrix)		
mungServer(array $munglist)		
mysql_affected_rows([resource $link_identifier = null])		
mysql_client_encoding([resource $link_identifier = null])		
mysql_close([resource $link_identifier = null])		
mysql_connect("mysql.default_password")		
mysql_create_db(string $database_name [, resource $link_identifier = null])		
mysql_data_seek(resource $result, int $row_number)		
mysql_db_name(resource $result, int $row [, mixed $field = null])		
mysql_db_query(string $database, string $query [, resource $link_identifier = null])		
mysql_drop_db(string $database_name [, resource $link_identifier = null])		
mysql_errno([resource $link_identifier = null])		
mysql_error([resource $link_identifier = null])		
mysql_escape_string(string $unescaped_string)		
mysql_fetch_array(resource $result [, int $result_type = MYSQL_BOTH])		
mysql_fetch_assoc(resource $result)		
mysql_fetch_field(resource $result [, int $field_offset = ''])		
mysql_fetch_lengths(resource $result)		
mysql_fetch_object(resource $result [, string $class_name = '' [, array $params = '']])		
mysql_fetch_row(resource $result)		
mysql_field_flags(resource $result, int $field_offset)		
mysql_field_len(resource $result, int $field_offset)		
mysql_field_name(resource $result, int $field_offset)		
mysql_field_seek(resource $result, int $field_offset)		
mysql_field_table(resource $result, int $field_offset)		
mysql_field_type(resource $result, int $field_offset)		
mysql_free_result(resource $result)		
mysql_get_client_info()		
mysql_get_host_info([resource $link_identifier = null])		
mysql_get_proto_info([resource $link_identifier = null])		
mysql_get_server_info([resource $link_identifier = null])		
mysql_info([resource $link_identifier = null])		
mysql_insert_id([resource $link_identifier = null])		
mysql_list_dbs([resource $link_identifier = null])		
mysql_list_fields(string $database_name, string $table_name [, resource $link_identifier = null])		
mysql_list_processes([resource $link_identifier = null])		
mysql_list_tables(string $database [, resource $link_identifier = null])		
mysql_num_fields(resource $result)		
mysql_num_rows(resource $result)		
mysql_pconnect("mysql.default_password")		
mysql_ping([resource $link_identifier = null])		
mysql_query(string $query [, resource $link_identifier = null])		
mysql_real_escape_string(string $unescaped_string [, resource $link_identifier = null])		
mysql_result(resource $result, int $row [, mixed $field = ''])		
mysql_select_db(string $database_name [, resource $link_identifier = null])		
mysql_set_charset(string $charset [, resource $link_identifier = null])		
mysql_stat([resource $link_identifier = null])		
mysql_tablename(resource $result, int $i)		
mysql_thread_id([resource $link_identifier = null])		
mysql_unbuffered_query(string $query [, resource $link_identifier = null])		
mysqli("mysqli.default_socket")		
mysqli_autocommit(bool $mode, mysqli $link)		
mysqli_begin_transaction([int $flags = '' [, string $name = '', mysqli $link]])		
mysqli_bind_param()		
mysqli_bind_result()		
mysqli_change_user(string $user, string $password, string $database, mysqli $link)		
mysqli_character_set_name(mysqli $link)		
mysqli_client_encoding()		
mysqli_close(mysqli $link)		
mysqli_commit([int $flags = '' [, string $name = '', mysqli $link]])		
mysqli_connect()		
mysqli_data_seek(int $offset, mysqli_result $result)		
mysqli_debug(string $message)		
mysqli_disable_reads_from_master(mysqli $link)		
mysqli_disable_rpl_parse(mysqli $link)		
mysqli_dump_debug_info(mysqli $link)		
mysqli_embedded_server_end()		
mysqli_embedded_server_start(int $start, array $arguments, array $groups)		
mysqli_enable_reads_from_master(mysqli $link)		
mysqli_enable_rpl_parse(mysqli $link)		
mysqli_escape_string()		
mysqli_execute()		
mysqli_fetch()		
mysqli_fetch_all([int $resulttype = MYSQLI_NUM, mysqli_result $result])		
mysqli_fetch_array([int $resulttype = MYSQLI_BOTH, mysqli_result $result])		
mysqli_fetch_assoc(mysqli_result $result)		
mysqli_fetch_field(mysqli_result $result)		
mysqli_fetch_field_direct(int $fieldnr, mysqli_result $result)		
mysqli_fetch_fields(mysqli_result $result)		
mysqli_fetch_object([string $class_name = "stdClass" [, array $params = '', mysqli_result $result]])		
mysqli_fetch_row(mysqli_result $result)		
mysqli_field_seek(int $fieldnr, mysqli_result $result)		
mysqli_free_result(mysqli_result $result)		
mysqli_get_cache_stats()		
mysqli_get_charset(mysqli $link)		
mysqli_get_client_stats()		
mysqli_get_connection_stats(mysqli $link)		
mysqli_get_links_stats()		
mysqli_get_metadata()		
mysqli_get_warnings(mysqli $link)		
mysqli_init()		
mysqli_kill(int $processid, mysqli $link)		
mysqli_master_query(mysqli $link, string $query)		
mysqli_more_results(mysqli $link)		
mysqli_multi_query(string $query, mysqli $link)		
mysqli_next_result(mysqli $link)		
mysqli_options(int $option, mixed $value, mysqli $link)		
mysqli_param_count()		
mysqli_ping(mysqli $link)		
mysqli_poll(array $read, array $error, array $reject, int $sec [, int $usec = ''])		
mysqli_prepare(string $query, mysqli $link)		
mysqli_query(string $query [, int $resultmode = MYSQLI_STORE_RESULT, mysqli $link])		
mysqli_real_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '' [, int $flags = '', mysqli $link]]]]]]])		
mysqli_real_escape_string(string $escapestr, mysqli $link)		
mysqli_real_query(string $query, mysqli $link)		
mysqli_reap_async_query(mysqli $link)		
mysqli_refresh(int $options, resource $link)		
mysqli_release_savepoint(string $name, mysqli $link)		
mysqli_report()		
mysqli_rollback([int $flags = '' [, string $name = '', mysqli $link]])		
mysqli_rpl_parse_enabled(mysqli $link)		
mysqli_rpl_probe(mysqli $link)		
mysqli_rpl_query_type(string $query, mysqli $link)		
mysqli_savepoint(string $name, mysqli $link)		
mysqli_select_db(string $dbname, mysqli $link)		
mysqli_send_long_data()		
mysqli_send_query(string $query, mysqli $link)		
mysqli_set_charset(string $charset, mysqli $link)		
mysqli_set_local_infile_default(mysqli $link)		
mysqli_set_local_infile_handler(mysqli $link, callable $read_func)		
mysqli_set_opt()		
mysqli_slave_query(mysqli $link, string $query)		
mysqli_ssl_set(string $key, string $cert, string $ca, string $capath, string $cipher, mysqli $link)		
mysqli_stat(mysqli $link)		
mysqli_stmt(mysqli $link [, string $query = ''])		
mysqli_stmt_attr_get(int $attr, mysqli_stmt $stmt)		
mysqli_stmt_attr_set(int $attr, int $mode, mysqli_stmt $stmt)		
mysqli_stmt_bind_param(string $types, mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])		
mysqli_stmt_bind_result(mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])		
mysqli_stmt_close(mysqli_stmt $stmt)		
mysqli_stmt_data_seek(int $offset, mysqli_stmt $stmt)		
mysqli_stmt_execute(mysqli_stmt $stmt)		
mysqli_stmt_fetch(mysqli_stmt $stmt)		
mysqli_stmt_free_result(mysqli_stmt $stmt)		
mysqli_stmt_get_result(mysqli_stmt $stmt)		
mysqli_stmt_get_warnings(mysqli_stmt $stmt)		
mysqli_stmt_init(mysqli $link)		
mysqli_stmt_more_results(mysql_stmt $stmt)		
mysqli_stmt_next_result(mysql_stmt $stmt)		
mysqli_stmt_prepare(string $query, mysqli_stmt $stmt)		
mysqli_stmt_reset(mysqli_stmt $stmt)		
mysqli_stmt_result_metadata(mysqli_stmt $stmt)		
mysqli_stmt_send_long_data(int $param_nr, string $data, mysqli_stmt $stmt)		
mysqli_stmt_store_result(mysqli_stmt $stmt)		
mysqli_store_result([int $option = '', mysqli $link])		
mysqli_thread_safe()		
mysqli_use_result(mysqli $link)		
mysqli_warning()		
mysqlnd_memcache_get_config(mixed $connection)		
mysqlnd_memcache_set(mixed $mysql_connection [, Memcached $memcache_connection = '' [, string $pattern = '' [, callback $callback = '']]])		
mysqlnd_ms_dump_servers(mixed $connection)		
mysqlnd_ms_fabric_select_global(mixed $connection, mixed $table_name)		
mysqlnd_ms_fabric_select_shard(mixed $connection, mixed $table_name, mixed $shard_key)		
mysqlnd_ms_get_last_gtid(mixed $connection)		
mysqlnd_ms_get_last_used_connection(mixed $connection)		
mysqlnd_ms_get_stats()		
mysqlnd_ms_match_wild(string $table_name, string $wildcard)		
mysqlnd_ms_query_is_select(string $query)		
mysqlnd_ms_set_qos(mixed $connection, int $service_level [, int $service_level_option = '' [, mixed $option_value = '']])		
mysqlnd_ms_set_user_pick_server(string $function)		
mysqlnd_ms_xa_begin(mixed $connection, string $gtrid [, int $timeout = ''])		
mysqlnd_ms_xa_commit(mixed $connection, string $gtrid)		
mysqlnd_ms_xa_gc(mixed $connection [, string $gtrid = '' [, bool $ignore_max_retries = '']])		
mysqlnd_ms_xa_rollback(mixed $connection, string $gtrid)		
mysqlnd_qc_clear_cache()		
mysqlnd_qc_get_available_handlers()		
mysqlnd_qc_get_cache_info()		
mysqlnd_qc_get_core_stats()		
mysqlnd_qc_get_normalized_query_trace_log()		
mysqlnd_qc_get_query_trace_log()		
mysqlnd_qc_set_cache_condition(int $condition_type, mixed $condition, mixed $condition_option)		
mysqlnd_qc_set_is_select(string $callback)		
mysqlnd_qc_set_storage_handler(string $handler)		
mysqlnd_qc_set_user_handlers(string $get_hash, string $find_query_in_cache, string $return_to_cache, string $add_query_to_cache_if_not_exists, string $query_is_select, string $update_query_run_time_stats, string $get_stats, string $clear_cache)		
mysqlnd_uh_convert_to_mysqlnd(mysqli $mysql_connection)		
mysqlnd_uh_set_connection_proxy(MysqlndUhConnection $connection_proxy [, mysqli $mysqli_connection = ''])		
mysqlnd_uh_set_statement_proxy(MysqlndUhStatement $statement_proxy)		
name(string $process_name)		
natcasesort(array $array)		
natcasesort()		
natcasesort()		
natsort(array $array)		
natsort()		
natsort()		
ncurses_addch(int $ch)		
ncurses_addchnstr(string $s, int $n)		
ncurses_addchstr(string $s)		
ncurses_addnstr(string $s, int $n)		
ncurses_addstr(string $text)		
ncurses_assume_default_colors(int $fg, int $bg)		
ncurses_attroff(int $attributes)		
ncurses_attron(int $attributes)		
ncurses_attrset(int $attributes)		
ncurses_baudrate()		
ncurses_beep()		
ncurses_bkgd(int $attrchar)		
ncurses_bkgdset(int $attrchar)		
ncurses_border(int $left, int $right, int $top, int $bottom, int $tl_corner, int $tr_corner, int $bl_corner, int $br_corner)		
ncurses_bottom_panel(resource $panel)		
ncurses_can_change_color()		
ncurses_cbreak()		
ncurses_clear()		
ncurses_clrtobot()		
ncurses_clrtoeol()		
ncurses_color_content(int $color, int $r, int $g, int $b)		
ncurses_color_set(int $pair)		
ncurses_curs_set(int $visibility)		
ncurses_def_prog_mode()		
ncurses_def_shell_mode()		
ncurses_define_key(string $definition, int $keycode)		
ncurses_del_panel(resource $panel)		
ncurses_delay_output(int $milliseconds)		
ncurses_delch()		
ncurses_deleteln()		
ncurses_delwin(resource $window)		
ncurses_doupdate()		
ncurses_echo()		
ncurses_echochar(int $character)		
ncurses_end()		
ncurses_erase()		
ncurses_erasechar()		
ncurses_filter()		
ncurses_flash()		
ncurses_flushinp()		
ncurses_getch()		
ncurses_getmaxyx(resource $window, int $y, int $x)		
ncurses_getmouse(array $mevent)		
ncurses_getyx(resource $window, int $y, int $x)		
ncurses_halfdelay(int $tenth)		
ncurses_has_colors()		
ncurses_has_ic()		
ncurses_has_il()		
ncurses_has_key(int $keycode)		
ncurses_hide_panel(resource $panel)		
ncurses_hline(int $charattr, int $n)		
ncurses_inch()		
ncurses_init()		
ncurses_init_color(int $color, int $r, int $g, int $b)		
ncurses_init_pair(int $pair, int $fg, int $bg)		
ncurses_insch(int $character)		
ncurses_insdelln(int $count)		
ncurses_insertln()		
ncurses_insstr(string $text)		
ncurses_instr(string $buffer)		
ncurses_isendwin()		
ncurses_keyok(int $keycode, bool $enable)		
ncurses_keypad(resource $window, bool $bf)		
ncurses_killchar()		
ncurses_longname()		
ncurses_meta(resource $window, bool $8bit)		
ncurses_mouse_trafo(int $y, int $x, bool $toscreen)		
ncurses_mouseinterval(int $milliseconds)		
ncurses_mousemask(int $newmask, int $oldmask)		
ncurses_move(int $y, int $x)		
ncurses_move_panel(resource $panel, int $startx, int $starty)		
ncurses_mvaddch(int $y, int $x, int $c)		
ncurses_mvaddchnstr(int $y, int $x, string $s, int $n)		
ncurses_mvaddchstr(int $y, int $x, string $s)		
ncurses_mvaddnstr(int $y, int $x, string $s, int $n)		
ncurses_mvaddstr(int $y, int $x, string $s)		
ncurses_mvcur(int $old_y, int $old_x, int $new_y, int $new_x)		
ncurses_mvdelch(int $y, int $x)		
ncurses_mvgetch(int $y, int $x)		
ncurses_mvhline(int $y, int $x, int $attrchar, int $n)		
ncurses_mvinch(int $y, int $x)		
ncurses_mvvline(int $y, int $x, int $attrchar, int $n)		
ncurses_mvwaddstr(resource $window, int $y, int $x, string $text)		
ncurses_napms(int $milliseconds)		
ncurses_new_panel(resource $window)		
ncurses_newpad(int $rows, int $cols)		
ncurses_newwin(int $rows, int $cols, int $y, int $x)		
ncurses_nl()		
ncurses_nocbreak()		
ncurses_noecho()		
ncurses_nonl()		
ncurses_noqiflush()		
ncurses_noraw()		
ncurses_pair_content(int $pair, int $f, int $b)		
ncurses_panel_above(resource $panel)		
ncurses_panel_below(resource $panel)		
ncurses_panel_window(resource $panel)		
ncurses_pnoutrefresh(resource $pad, int $pminrow, int $pmincol, int $sminrow, int $smincol, int $smaxrow, int $smaxcol)		
ncurses_prefresh(resource $pad, int $pminrow, int $pmincol, int $sminrow, int $smincol, int $smaxrow, int $smaxcol)		
ncurses_putp(string $text)		
ncurses_qiflush()		
ncurses_raw()		
ncurses_refresh(int $ch)		
ncurses_replace_panel(resource $panel, resource $window)		
ncurses_reset_prog_mode()		
ncurses_reset_shell_mode()		
ncurses_resetty()		
ncurses_savetty()		
ncurses_scr_dump(string $filename)		
ncurses_scr_init(string $filename)		
ncurses_scr_restore(string $filename)		
ncurses_scr_set(string $filename)		
ncurses_scrl(int $count)		
ncurses_show_panel(resource $panel)		
ncurses_slk_attr()		
ncurses_slk_attroff(int $intarg)		
ncurses_slk_attron(int $intarg)		
ncurses_slk_attrset(int $intarg)		
ncurses_slk_clear()		
ncurses_slk_color(int $intarg)		
ncurses_slk_init(int $format)		
ncurses_slk_noutrefresh()		
ncurses_slk_refresh()		
ncurses_slk_restore()		
ncurses_slk_set(int $labelnr, string $label, int $format)		
ncurses_slk_touch()		
ncurses_standend()		
ncurses_standout()		
ncurses_start_color()		
ncurses_termattrs()		
ncurses_termname()		
ncurses_timeout(int $millisec)		
ncurses_top_panel(resource $panel)		
ncurses_typeahead(int $fd)		
ncurses_ungetch(int $keycode)		
ncurses_ungetmouse(array $mevent)		
ncurses_update_panels()		
ncurses_use_default_colors()		
ncurses_use_env(bool $flag)		
ncurses_use_extended_names(bool $flag)		
ncurses_vidattr(int $intarg)		
ncurses_vline(int $charattr, int $n)		
ncurses_waddch(resource $window, int $ch)		
ncurses_waddstr(resource $window, string $str [, int $n = ''])		
ncurses_wattroff(resource $window, int $attrs)		
ncurses_wattron(resource $window, int $attrs)		
ncurses_wattrset(resource $window, int $attrs)		
ncurses_wborder(resource $window, int $left, int $right, int $top, int $bottom, int $tl_corner, int $tr_corner, int $bl_corner, int $br_corner)		
ncurses_wclear(resource $window)		
ncurses_wcolor_set(resource $window, int $color_pair)		
ncurses_werase(resource $window)		
ncurses_wgetch(resource $window)		
ncurses_whline(resource $window, int $charattr, int $n)		
ncurses_wmouse_trafo(resource $window, int $y, int $x, bool $toscreen)		
ncurses_wmove(resource $window, int $y, int $x)		
ncurses_wnoutrefresh(resource $window)		
ncurses_wrefresh(resource $window)		
ncurses_wstandend(resource $window)		
ncurses_wstandout(resource $window)		
ncurses_wvline(resource $window, int $charattr, int $n)		
negateImage(bool $gray [, int $channel = Imagick::CHANNEL_DEFAULT])		
newFigure(UI\Point $point)		
newFigureWithArc(UI\Point $point, float $radius, float $angle, float $sweep, float $negative)		
newImage(int $cols, int $rows, mixed $background [, string $format = ''])		
newInstance(mixed $args [, mixed $... = ''])		
newInstanceArgs([array $args = ''])		
newInstanceWithoutConstructor()		
newPath(CairoContext $context)		
newPixelIterator(Imagick $wand)		
newPixelRegionIterator(Imagick $wand, int $x, int $y, int $columns, int $rows)		
newPseudoImage(int $columns, int $rows, string $pseudoString)		
newSubPath(CairoContext $context)		
newimage(int $width, int $height, string $background [, string $format = ''])		
newt_bell()		
newt_button(int $left, int $top, string $text)		
newt_button_bar(array $buttons)		
newt_centered_window(int $width, int $height [, string $title = ''])		
newt_checkbox(int $left, int $top, string $text, string $def_value [, string $seq = ''])		
newt_checkbox_get_value(resource $checkbox)		
newt_checkbox_set_flags(resource $checkbox, int $flags, int $sense)		
newt_checkbox_set_value(resource $checkbox, string $value)		
newt_checkbox_tree(int $left, int $top, int $height [, int $flags = ''])		
newt_checkbox_tree_add_item(resource $checkboxtree, string $text, mixed $data, int $flags, int $index [, int $... = ''])		
newt_checkbox_tree_find_item(resource $checkboxtree, mixed $data)		
newt_checkbox_tree_get_current(resource $checkboxtree)		
newt_checkbox_tree_get_entry_value(resource $checkboxtree, mixed $data)		
newt_checkbox_tree_get_multi_selection(resource $checkboxtree, string $seqnum)		
newt_checkbox_tree_get_selection(resource $checkboxtree)		
newt_checkbox_tree_multi(int $left, int $top, int $height, string $seq [, int $flags = ''])		
newt_checkbox_tree_set_current(resource $checkboxtree, mixed $data)		
newt_checkbox_tree_set_entry(resource $checkboxtree, mixed $data, string $text)		
newt_checkbox_tree_set_entry_value(resource $checkboxtree, mixed $data, string $value)		
newt_checkbox_tree_set_width(resource $checkbox_tree, int $width)		
newt_clear_key_buffer()		
newt_cls()		
newt_compact_button(int $left, int $top, string $text)		
newt_component_add_callback(resource $component, mixed $func_name, mixed $data)		
newt_component_takes_focus(resource $component, bool $takes_focus)		
newt_create_grid(int $cols, int $rows)		
newt_cursor_off()		
newt_cursor_on()		
newt_delay(int $microseconds)		
newt_draw_form(resource $form)		
newt_draw_root_text(int $left, int $top, string $text)		
newt_entry(int $left, int $top, int $width [, string $init_value = '' [, int $flags = '']])		
newt_entry_get_value(resource $entry)		
newt_entry_set(resource $entry, string $value [, bool $cursor_at_end = ''])		
newt_entry_set_filter(resource $entry, callable $filter, mixed $data)		
newt_entry_set_flags(resource $entry, int $flags, int $sense)		
newt_finished()		
newt_form([resource $vert_bar = '' [, string $help = '' [, int $flags = '']]])		
newt_form_add_component(resource $form, resource $component)		
newt_form_add_components(resource $form, array $components)		
newt_form_add_hot_key(resource $form, int $key)		
newt_form_destroy(resource $form)		
newt_form_get_current(resource $form)		
newt_form_run(resource $form, array $exit_struct)		
newt_form_set_background(resource $from, int $background)		
newt_form_set_height(resource $form, int $height)		
newt_form_set_size(resource $form)		
newt_form_set_timer(resource $form, int $milliseconds)		
newt_form_set_width(resource $form, int $width)		
newt_form_watch_fd(resource $form, resource $stream [, int $flags = ''])		
newt_get_screen_size(int $cols, int $rows)		
newt_grid_add_components_to_form(resource $grid, resource $form, bool $recurse)		
newt_grid_basic_window(resource $text, resource $middle, resource $buttons)		
newt_grid_free(resource $grid, bool $recurse)		
newt_grid_get_size(resouce $grid, int $width, int $height)		
newt_grid_h_close_stacked(int $element1_type, resource $element1 [, resource $... = ''])		
newt_grid_h_stacked(int $element1_type, resource $element1 [, resource $... = ''])		
newt_grid_place(resource $grid, int $left, int $top)		
newt_grid_set_field(resource $grid, int $col, int $row, int $type, resource $val, int $pad_left, int $pad_top, int $pad_right, int $pad_bottom, int $anchor [, int $flags = ''])		
newt_grid_simple_window(resource $text, resource $middle, resource $buttons)		
newt_grid_v_close_stacked(int $element1_type, resource $element1 [, resource $... = ''])		
newt_grid_v_stacked(int $element1_type, resource $element1 [, resource $... = ''])		
newt_grid_wrapped_window(resource $grid, string $title)		
newt_grid_wrapped_window_at(resource $grid, string $title, int $left, int $top)		
newt_init()		
newt_label(int $left, int $top, string $text)		
newt_label_set_text(resource $label, string $text)		
newt_listbox(int $left, int $top, int $height [, int $flags = ''])		
newt_listbox_append_entry(resource $listbox, string $text, mixed $data)		
newt_listbox_clear(resource $listobx)		
newt_listbox_clear_selection(resource $listbox)		
newt_listbox_delete_entry(resource $listbox, mixed $key)		
newt_listbox_get_current(resource $listbox)		
newt_listbox_get_selection(resource $listbox)		
newt_listbox_insert_entry(resource $listbox, string $text, mixed $data, mixed $key)		
newt_listbox_item_count(resource $listbox)		
newt_listbox_select_item(resource $listbox, mixed $key, int $sense)		
newt_listbox_set_current(resource $listbox, int $num)		
newt_listbox_set_current_by_key(resource $listbox, mixed $key)		
newt_listbox_set_data(resource $listbox, int $num, mixed $data)		
newt_listbox_set_entry(resource $listbox, int $num, string $text)		
newt_listbox_set_width(resource $listbox, int $width)		
newt_listitem(int $left, int $top, string $text, bool $is_default, resouce $prev_item, mixed $data [, int $flags = ''])		
newt_listitem_get_data(resource $item)		
newt_listitem_set(resource $item, string $text)		
newt_open_window(int $left, int $top, int $width, int $height [, string $title = ''])		
newt_pop_help_line()		
newt_pop_window()		
newt_push_help_line([string $text = ''])		
newt_radio_get_current(resource $set_member)		
newt_radiobutton(int $left, int $top, string $text, bool $is_default [, resource $prev_button = ''])		
newt_redraw_help_line()		
newt_reflow_text(string $text, int $width, int $flex_down, int $flex_up, int $actual_width, int $actual_height)		
newt_refresh()		
newt_resize_screen([bool $redraw = ''])		
newt_resume()		
newt_run_form(resource $form)		
newt_scale(int $left, int $top, int $width, int $full_value)		
newt_scale_set(resource $scale, int $amount)		
newt_scrollbar_set(resource $scrollbar, int $where, int $total)		
newt_set_help_callback(mixed $function)		
newt_set_suspend_callback(callable $function, mixed $data)		
newt_suspend()		
newt_textbox(int $left, int $top, int $width, int $height [, int $flags = ''])		
newt_textbox_get_num_lines(resource $textbox)		
newt_textbox_reflowed(int $left, int $top, char $*text, int $width, int $flex_down, int $flex_up [, int $flags = ''])		
newt_textbox_set_height(resource $textbox, int $height)		
newt_textbox_set_text(resource $textbox, string $text)		
newt_vertical_scrollbar(int $left, int $top, int $height [, int $normal_colorset = '' [, int $thumb_colorset = '']])		
newt_wait_for_key()		
newt_win_choice(string $title, string $button1_text, string $button2_text, string $format [, mixed $args = '' [, mixed $... = '']])		
newt_win_entries(string $title, string $text, int $suggested_width, int $flex_down, int $flex_up, int $data_width, array $items, string $button1 [, string $... = ''])		
newt_win_menu(string $title, string $text, int $suggestedWidth, int $flexDown, int $flexUp, int $maxListHeight, array $items, int $listItem [, string $button1 = '' [, string $... = '']])		
newt_win_message(string $title, string $button_text, string $format [, mixed $args = '' [, mixed $... = '']])		
newt_win_messagev(string $title, string $button_text, string $format, array $args)		
newt_win_ternary(string $title, string $button1_text, string $button2_text, string $button3_text, string $format [, mixed $args = '' [, mixed $... = '']])		
next(array $array)		
next()		
next()		
next()		
next()		
next([string $localname = ''])		
next(resource $result)		
next(resource $result)		
next([int $offset = ''])		
next()		
next(mixed $index)		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
next()		
nextElement()		
nextElement()		
nextEmpty(int $index)		
nextFrame()		
nextFrame()		
nextImage()		
nextResult(mysqlnd_connection $connection)		
nextResult()		
nextResult()		
nextRowset()		
next_result(mysql_stmt $stmt)		
next_result(mysqli $link)		
next_result(resource $link)		
nextimage()		
ngettext(string $msgid1, string $msgid2, int $n)		
nl2br(string $string [, bool $is_xhtml = ''])		
nl_langinfo(int $item)		
noMultiple()		
nonassoc(string $tok)		
nonassoc(string $tok)		
normalize(string $input [, int $form = Normalizer::FORM_C])		
normalize()		
normalizeDocument()		
normalizeImage([int $channel = Imagick::CHANNEL_DEFAULT])		
normalizeimage([int $channel = ''])		
normalizer_get_raw_decomposition(string $input)		
normalizer_is_normalized(string $input [, int $form = Normalizer::FORM_C])		
normalizer_normalize(string $input [, int $form = Normalizer::FORM_C])		
notice(string $message [, array $content = '' [, string $logger = '']])		
notify()		
notify()		
notifyOne()		
now()		
now()		
nowUpdate()		
nowUpdate()		
nsapi_request_headers()		
nsapi_response_headers()		
nsapi_virtual(string $uri)		
num()		
numColumns()		
numFields(resource $result)		
numFields(resource $result)		
numRows(resource $result)		
num_rows(resource $result)		
num_rows(resource $stmt)		
number_format(float $number, int $decimals, string $dec_point, string $thousands_sep)		
numfmt_create(string $locale, int $style [, string $pattern = ''])		
numfmt_format(number $value [, int $type = '', NumberFormatter $fmt])		
numfmt_format_currency(float $value, string $currency, NumberFormatter $fmt)		
numfmt_get_attribute(int $attr, NumberFormatter $fmt)		
numfmt_get_error_code(NumberFormatter $fmt)		
numfmt_get_error_message(NumberFormatter $fmt)		
numfmt_get_locale([int $type = '', NumberFormatter $fmt])		
numfmt_get_pattern(NumberFormatter $fmt)		
numfmt_get_symbol(int $attr, NumberFormatter $fmt)		
numfmt_get_text_attribute(int $attr, NumberFormatter $fmt)		
numfmt_parse(string $value [, int $type = '' [, int $position = '', NumberFormatter $fmt]])		
numfmt_parse_currency(string $value, string $currency [, int $position = '', NumberFormatter $fmt])		
numfmt_set_attribute(int $attr, int $value, NumberFormatter $fmt)		
numfmt_set_pattern(string $pattern, NumberFormatter $fmt)		
numfmt_set_symbol(int $attr, string $value, NumberFormatter $fmt)		
numfmt_set_text_attribute(int $attr, string $value, NumberFormatter $fmt)		
oauth_get_sbs(string $http_method, string $uri [, array $request_parameters = ''])		
oauth_urlencode(string $uri)		
ob_clean()		
ob_end_clean()		
ob_end_flush()		
ob_flush()		
ob_get_clean()		
ob_get_contents()		
ob_get_flush()		
ob_get_length()		
ob_get_level()		
ob_get_status([bool $full_status = FALSE])		
ob_gzhandler(string $buffer, int $mode)		
ob_iconv_handler(string $contents, int $status)		
ob_implicit_flush([int $flag = 1])		
ob_list_handlers()		
ob_start([callable $output_callback = '' [, int $chunk_size = '' [, int $flags = '']]])		
ob_tidyhandler(string $input [, int $mode = ''])		
object(array $parameter)		
objectbyanchor(array $parameter)		
oci_bind_array_by_name(resource $statement, string $name, array $var_array, int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC]])		
oci_bind_by_name(resource $statement, string $bv_name, mixed $variable [, int $maxlength = -1 [, int $type = SQLT_CHR]])		
oci_cancel(resource $statement)		
oci_client_version()		
oci_close(resource $connection)		
oci_commit(resource $connection)		
oci_connect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])		
oci_define_by_name(resource $statement, string $column_name, mixed $variable [, int $type = SQLT_CHR])		
oci_error([resource $resource = ''])		
oci_execute(resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS])		
oci_fetch(resource $statement)		
oci_fetch_all(resource $statement, array $output [, int $skip = '' [, int $maxrows = -1 [, int $flags =  + ]]])		
oci_fetch_array(resource $statement [, int $mode = ''])		
oci_fetch_assoc(resource $statement)		
oci_fetch_object(resource $statement)		
oci_fetch_row(resource $statement)		
oci_field_is_null(resource $statement, mixed $field)		
oci_field_name(resource $statement, mixed $field)		
oci_field_precision(resource $statement, mixed $field)		
oci_field_scale(resource $statement, mixed $field)		
oci_field_size(resource $statement, mixed $field)		
oci_field_type(resource $statement, mixed $field)		
oci_field_type_raw(resource $statement, mixed $field)		
oci_free_descriptor(resource $descriptor)		
oci_free_statement(resource $statement)		
oci_get_implicit_resultset(resource $statement)		
oci_internal_debug(bool $onoff)		
oci_lob_copy(OCI-Lob $lob_to, OCI-Lob $lob_from [, int $length = ''])		
oci_lob_is_equal(OCI-Lob $lob1, OCI-Lob $lob2)		
oci_new_collection(resource $connection, string $tdo [, string $schema = ''])		
oci_new_connect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])		
oci_new_cursor(resource $connection)		
oci_new_descriptor(resource $connection [, int $type = OCI_DTYPE_LOB])		
oci_num_fields(resource $statement)		
oci_num_rows(resource $statement)		
oci_parse(resource $connection, string $sql_text)		
oci_password_change(resource $connection, string $username, string $old_password, string $new_password, string $dbname)		
oci_pconnect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])		
oci_register_taf_callback(resource $connection [, mixed $callbackFn = ''])		
oci_result(resource $statement, mixed $field)		
oci_rollback(resource $connection)		
oci_server_version(resource $connection)		
oci_set_action(resource $connection, string $action_name)		
oci_set_client_identifier(resource $connection, string $client_identifier)		
oci_set_client_info(resource $connection, string $client_info)		
oci_set_edition(string $edition)		
oci_set_module_name(resource $connection, string $module_name)		
oci_set_prefetch(resource $statement, int $rows)		
oci_statement_type(resource $statement)		
oci_unregister_taf_callback(resource $connection)		
ocibindbyname()		
ocicancel()		
ocicloselob()		
ocicollappend()		
ocicollassign()		
ocicollassignelem()		
ocicollgetelem()		
ocicollmax()		
ocicollsize()		
ocicolltrim()		
ocicolumnisnull()		
ocicolumnname()		
ocicolumnprecision()		
ocicolumnscale()		
ocicolumnsize()		
ocicolumntype()		
ocicolumntyperaw()		
ocicommit()		
ocidefinebyname()		
ocierror()		
ociexecute()		
ocifetch()		
ocifetchinto()		
ocifetchstatement()		
ocifreecollection()		
ocifreecursor()		
ocifreedesc()		
ocifreestatement()		
ociinternaldebug()		
ociloadlob()		
ocilogoff()		
ocilogon()		
ocinewcollection()		
ocinewcursor()		
ocinewdescriptor()		
ocinlogon()		
ocinumcols()		
ociparse()		
ociplogon()		
ociresult()		
ocirollback()		
ocirowcount()		
ocisavelob()		
ocisavelobfile()		
ociserverversion()		
ocisetprefetch()		
ocistatementtype()		
ociwritelobtofile()		
ociwritetemporarylob()		
octdec(string $octal_string)		
odbc_autocommit(resource $connection_id [, bool $OnOff = ''])		
odbc_binmode(resource $result_id, int $mode)		
odbc_close(resource $connection_id)		
odbc_close_all()		
odbc_columnprivileges(resource $connection_id, string $qualifier, string $owner, string $table_name, string $column_name)		
odbc_columns(resource $connection_id [, string $qualifier = '' [, string $schema = '' [, string $table_name = '' [, string $column_name = '']]]])		
odbc_commit(resource $connection_id)		
odbc_connect(string $dsn, string $user, string $password [, int $cursor_type = ''])		
odbc_cursor(resource $result_id)		
odbc_data_source(resource $connection_id, int $fetch_type)		
odbc_do()		
odbc_error([resource $connection_id = ''])		
odbc_errormsg([resource $connection_id = ''])		
odbc_exec(resource $connection_id, string $query_string [, int $flags = ''])		
odbc_execute(resource $result_id [, array $parameters_array = ''])		
odbc_fetch_array(resource $result [, int $rownumber = ''])		
odbc_fetch_into(resource $result_id, array $result_array [, int $rownumber = ''])		
odbc_fetch_object(resource $result [, int $rownumber = ''])		
odbc_fetch_row(resource $result_id [, int $row_number = 1])		
odbc_field_len(resource $result_id, int $field_number)		
odbc_field_name(resource $result_id, int $field_number)		
odbc_field_num(resource $result_id, string $field_name)		
odbc_field_precision()		
odbc_field_scale(resource $result_id, int $field_number)		
odbc_field_type(resource $result_id, int $field_number)		
odbc_foreignkeys(resource $connection_id, string $pk_qualifier, string $pk_owner, string $pk_table, string $fk_qualifier, string $fk_owner, string $fk_table)		
odbc_free_result(resource $result_id)		
odbc_gettypeinfo(resource $connection_id [, int $data_type = ''])		
odbc_longreadlen(resource $result_id, int $length)		
odbc_next_result(resource $result_id)		
odbc_num_fields(resource $result_id)		
odbc_num_rows(resource $result_id)		
odbc_pconnect(string $dsn, string $user, string $password [, int $cursor_type = ''])		
odbc_prepare(resource $connection_id, string $query_string)		
odbc_primarykeys(resource $connection_id, string $qualifier, string $owner, string $table)		
odbc_procedurecolumns(resource $connection_id, string $qualifier, string $owner, string $proc, string $column)		
odbc_procedures(resource $connection_id, string $qualifier, string $owner, string $name)		
odbc_result(resource $result_id, mixed $field)		
odbc_result_all(resource $result_id [, string $format = ''])		
odbc_rollback(resource $connection_id)		
odbc_setoption(resource $id, int $function, int $option, int $param)		
odbc_specialcolumns(resource $connection_id, int $type, string $qualifier, string $table, int $scope, int $nullable)		
odbc_statistics(resource $connection_id, string $qualifier, string $owner, string $table_name, int $unique, int $accuracy)		
odbc_tableprivileges(resource $connection_id, string $qualifier, string $owner, string $name)		
odbc_tables(resource $connection_id [, string $qualifier = '' [, string $owner = '' [, string $name = '' [, string $types = '']]]])		
of(float $size, UI\Point $point)		
offset(integer $position)		
offset(integer $position)		
offset(integer $position)		
offsetExists(int $index)		
offsetExists(mixed $index)		
offsetExists(mixed $index)		
offsetExists(mixed $offset)		
offsetExists(object $object)		
offsetExists(string $fieldName)		
offsetExists(string $offset)		
offsetExists(string $property_name)		
offsetExists(int $index)		
offsetExists(object $object)		
offsetExists(string $index)		
offsetExists(string $index)		
offsetExists(string $name)		
offsetExists(string $name)		
offsetExists(string $name)		
offsetGet(string $index)		
offsetGet(string $fieldName)		
offsetGet(string $offset)		
offsetGet(int $index)		
offsetGet(mixed $index)		
offsetGet(mixed $index)		
offsetGet(mixed $offset)		
offsetGet(object $object)		
offsetGet(string $index)		
offsetGet(string $property_name)		
offsetGet(object $object)		
offsetGet(string $index)		
offsetGet(string $name)		
offsetGet(string $name)		
offsetGet(string $name)		
offsetSet(mixed $offset, mixed $value)		
offsetSet(object $object [, mixed $data = ''])		
offsetSet(int $index, mixed $newval)		
offsetSet(int $offset, mixed $connection)		
offsetSet(mixed $index, mixed $newval)		
offsetSet(mixed $index, mixed $newval)		
offsetSet(object $object, mixed $value)		
offsetSet(string $fieldName, string $fieldValue)		
offsetSet(string $index, string $newval)		
offsetSet(string $index, string $newval)		
offsetSet(string $name, string $value)		
offsetSet(string $name, string $value)		
offsetSet(string $name, string $value)		
offsetSet(string $offset, string $value)		
offsetSet(string $offset, string $value)		
offsetSet(string $property_name, string $property_value)		
offsetUnset(mixed $offset)		
offsetUnset(string $offset)		
offsetUnset(string $offset)		
offsetUnset(object $object)		
offsetUnset(int $index)		
offsetUnset(int $offset)		
offsetUnset(mixed $index)		
offsetUnset(mixed $index)		
offsetUnset(object $object)		
offsetUnset(string $fieldName)		
offsetUnset(string $index)		
offsetUnset(string $index)		
offsetUnset(string $name)		
offsetUnset(string $name)		
offsetUnset(string $name)		
offsetUnset(string $property_name)		
oilPaintImage(float $radius)		
oilpaintimage(float $radius)		
on(string $event_name, callable $callback)		
on(string $event_name, callable $callback)		
on(string $event, callable $callback)		
on(string $event_name, callable $callback)		
on(string $event_name, callable $callback)		
on(string $event_name, callable $callback)		
on(string $event_name, callable $callback)		
onChange()		
onChange()		
onChange()		
onChange()		
onChange()		
onChange()		
onClick()		
onClick()		
onClose()		
onClosing()		
onCreate()		
onDraw(UI\Draw\Pen $pen, UI\Size $areaSize, UI\Point $clipPoint, UI\Size $clipSize)		
onExecute()		
onKey(string $key, int $ext, int $flags)		
onMouse(UI\Point $areaPoint, UI\Size $areaSize, int $flags)		
onSelected()		
onSelected()		
onToggle()		
opaquePaintImage(mixed $target, mixed $fill, float $fuzz, bool $invert [, int $channel = Imagick::CHANNEL_DEFAULT])		
opcache_compile_file(string $file)		
opcache_get_configuration()		
opcache_get_status([bool $get_scripts = ''])		
opcache_invalidate(string $script [, bool $force = ''])		
opcache_is_script_cached(string $file)		
opcache_reset()		
open(string $filename [, string $password = null [, callable $volume_callback = null]])		
open(string $filename [, string $size = '' [, string $offset = '']])		
open()		
open(string $URI [, string $encoding = '' [, int $options = '']])		
open(string $save_path, string $session_name)		
open(string $save_path, string $session_name)		
open(string $filename [, int $flags = ''])		
open()		
open(string $filename [, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE [, string $encryption_key = '']])		
openBlob(string $table, string $column, int $rowid [, string $dbname = "main" [, int $flags = SQLITE3_OPEN_READONLY]])		
openFile([string $open_mode = "r" [, bool $use_include_path = '' [, resource $context = '']]])		
openMemory()		
openUri(string $uri)		
openal_buffer_create()		
openal_buffer_data(resource $buffer, int $format, string $data, int $freq)		
openal_buffer_destroy(resource $buffer)		
openal_buffer_get(resource $buffer, int $property)		
openal_buffer_loadwav(resource $buffer, string $wavfile)		
openal_context_create(resource $device)		
openal_context_current(resource $context)		
openal_context_destroy(resource $context)		
openal_context_process(resource $context)		
openal_context_suspend(resource $context)		
openal_device_close(resource $device)		
openal_device_open([string $device_desc = ''])		
openal_listener_get(int $property)		
openal_listener_set(int $property, mixed $setting)		
openal_source_create()		
openal_source_destroy(resource $source)		
openal_source_get(resource $source, int $property)		
openal_source_pause(resource $source)		
openal_source_play(resource $source)		
openal_source_rewind(resource $source)		
openal_source_set(resource $source, int $property, mixed $setting)		
openal_source_stop(resource $source)		
openal_stream(resource $source, int $format, int $rate)		
opendir(string $path [, resource $context = ''])		
openlog(string $ident, int $option, int $facility)		
openssl_cipher_iv_length(string $method)		
openssl_csr_export(mixed $csr, string $out [, bool $notext = ''])		
openssl_csr_export_to_file(mixed $csr, string $outfilename [, bool $notext = ''])		
openssl_csr_get_public_key(mixed $csr [, bool $use_shortnames = ''])		
openssl_csr_get_subject(mixed $csr [, bool $use_shortnames = ''])		
openssl_csr_new(array $dn, resource $privkey [, array $configargs = '' [, array $extraattribs = '']])		
openssl_csr_sign(mixed $csr, mixed $cacert, mixed $priv_key, int $days [, array $configargs = '' [, int $serial = '']])		
openssl_decrypt(string $data, string $method, string $key [, int $options = '' [, string $iv = "" [, string $tag = "" [, string $aad = ""]]]])		
openssl_dh_compute_key(string $pub_key, resource $dh_key)		
openssl_digest(string $data, string $method [, bool $raw_output = ''])		
openssl_encrypt(string $data, string $method, string $key [, int $options = '' [, string $iv = "" [, string $tag = null [, string $aad = "" [, int $tag_length = 16]]]]])		
openssl_error_string()		
openssl_free_key(resource $key_identifier)		
openssl_get_cert_locations()		
openssl_get_cipher_methods([bool $aliases = ''])		
openssl_get_curve_names()		
openssl_get_md_methods([bool $aliases = ''])		
openssl_get_privatekey()		
openssl_get_publickey()		
openssl_open(string $sealed_data, string $open_data, string $env_key, mixed $priv_key_id [, string $method = "RC4" [, string $iv = '']])		
openssl_pbkdf2(string $password, string $salt, int $key_length, int $iterations [, string $digest_algorithm = "sha1"])		
openssl_pkcs12_export(mixed $x509, string $out, mixed $priv_key, string $pass [, array $args = ''])		
openssl_pkcs12_export_to_file(mixed $x509, string $filename, mixed $priv_key, string $pass [, array $args = ''])		
openssl_pkcs12_read(string $pkcs12, array $certs, string $pass)		
openssl_pkcs7_decrypt(string $infilename, string $outfilename, mixed $recipcert [, mixed $recipkey = ''])		
openssl_pkcs7_encrypt(string $infile, string $outfile, mixed $recipcerts, array $headers [, int $flags = '' [, int $cipherid = OPENSSL_CIPHER_RC2_40]])		
openssl_pkcs7_read(string $infilename, array $certs)		
openssl_pkcs7_sign(string $infilename, string $outfilename, mixed $signcert, mixed $privkey, array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts = '']])		
openssl_pkcs7_verify(string $filename, int $flags [, string $outfilename = '' [, array $cainfo = '' [, string $extracerts = '' [, string $content = '' [, string $p7bfilename = '']]]]])		
openssl_pkey_export(mixed $key, string $out [, string $passphrase = '' [, array $configargs = '']])		
openssl_pkey_export_to_file(mixed $key, string $outfilename [, string $passphrase = '' [, array $configargs = '']])		
openssl_pkey_free(resource $key)		
openssl_pkey_get_details(resource $key)		
openssl_pkey_get_private(mixed $key [, string $passphrase = ""])		
openssl_pkey_get_public(mixed $certificate)		
openssl_pkey_new([array $configargs = ''])		
openssl_private_decrypt(string $data, string $decrypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])		
openssl_private_encrypt(string $data, string $crypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])		
openssl_public_decrypt(string $data, string $decrypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])		
openssl_public_encrypt(string $data, string $crypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])		
openssl_random_pseudo_bytes(int $length [, bool $crypto_strong = ''])		
openssl_seal(string $data, string $sealed_data, array $env_keys, array $pub_key_ids [, string $method = "RC4" [, string $iv = '']])		
openssl_sign(string $data, string $signature, mixed $priv_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1])		
openssl_spki_export(string $spkac)		
openssl_spki_export_challenge(string $spkac)		
openssl_spki_new(resource $privkey, string $challenge [, int $algorithm = ''])		
openssl_spki_verify(string $spkac)		
openssl_verify(string $data, string $signature, mixed $pub_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1])		
openssl_x509_check_private_key(mixed $cert, mixed $key)		
openssl_x509_checkpurpose()		
openssl_x509_export(mixed $x509, string $output [, bool $notext = ''])		
openssl_x509_export_to_file(mixed $x509, string $outfilename [, bool $notext = ''])		
openssl_x509_fingerprint(mixed $x509 [, string $hash_algorithm = "sha1" [, bool $raw_output = '']])		
openssl_x509_free(resource $x509cert)		
openssl_x509_parse(mixed $x509cert [, bool $shortnames = ''])		
openssl_x509_read(mixed $x509certdata)		
optimize([int $maxSegments = 1 [, bool $softCommit = '' [, bool $waitSearcher = '']]])		
optimizeImageLayers()		
options(int $option, mixed $value, mysqli $link)		
options(resource $link, int $option, mixed $value)		
options()		
ord(string $string)		
ord(mixed $character)		
orderby(string $orderby_expr)		
orderby(mixed $sort_expr [, mixed $... = ''])		
orderby(mixed $orderby_expr [, mixed $... = ''])		
orderedPosterizeImage(string $threshold_map [, int $channel = Imagick::CHANNEL_DEFAULT])		
out()		
out(mixed $keys)		
out(mixed $keys)		
output()		
output()		
output([int $compression = ''])		
outputMemory([bool $flush = '', resource $xmlwriter])		
output_add_rewrite_var(string $name, string $value)		
output_reset_rewrite_vars()		
override_function(string $function_name, string $function_args, string $function_code)		
pack(string $format [, mixed $args = '' [, mixed $... = '']])		
pack(string $data [, int $is_fast = ''])		
pack(string $data [, string $opcode = '' [, string $finish = '' [, string $mask = '']]])		
pages()		
paint(CairoContext $context)		
paintFloodfillImage(mixed $fill, float $fuzz, mixed $bordercolor, int $x, int $y [, int $channel = Imagick::CHANNEL_DEFAULT])		
paintOpaqueImage(mixed $target, mixed $fill, float $fuzz [, int $channel = Imagick::CHANNEL_DEFAULT])		
paintTransparentImage(mixed $target, float $alpha, float $fuzz)		
paintWithAlpha(float $alpha, CairoContext $context)		
pairs()		
parallelCollectionScan(int $num_cursors)		
paramCount()		
param_count(resource $stmt)		
parents(array $parameter)		
parse(string $value, MessageFormatter $fmt)		
parse(string $value [, int $position = '', IntlDateFormatter $fmt])		
parse(string $value [, int $type = '' [, int $position = '', NumberFormatter $fmt]])		
parse(string $buffer)		
parseCurrency(string $value, string $currency [, int $position = '', NumberFormatter $fmt])		
parseFile(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = '']]])		
parseLocale(string $locale)		
parseMessage(string $locale, string $pattern, string $source, string $value)		
parseResolvConf(int $flags, string $filename)		
parseString(string $input [, mixed $config = '' [, string $encoding = '']])		
parse_ini_file(string $filename [, bool $process_sections = '' [, int $scanner_mode = INI_SCANNER_NORMAL]])		
parse_ini_string(string $ini [, bool $process_sections = '' [, int $scanner_mode = INI_SCANNER_NORMAL]])		
parse_str(string $encoded_string [, array $result = ''])		
parse_url(string $url [, int $component = -1])		
parsekit_compile_file(string $filename [, array $errors = '' [, int $options = PARSEKIT_QUIET]])		
parsekit_compile_string(string $phpcode [, array $errors = '' [, int $options = PARSEKIT_QUIET]])		
parsekit_func_arginfo(mixed $function)		
partial([bool $okay = ''])		
passthru(string $command [, int $return_var = ''])		
password_get_info(string $hash)		
password_hash(string $password, int $algo [, array $options = ''])		
password_needs_rehash(string $hash, int $algo [, array $options = ''])		
password_verify(string $password, string $hash)		
patch(string $document)		
pathClose()		
pathCurveToAbsolute(float $x1, float $y1, float $x2, float $y2, float $x, float $y)		
pathCurveToQuadraticBezierAbsolute(float $x1, float $y1, float $x, float $y)		
pathCurveToQuadraticBezierRelative(float $x1, float $y1, float $x, float $y)		
pathCurveToQuadraticBezierSmoothAbsolute(float $x, float $y)		
pathCurveToQuadraticBezierSmoothRelative(float $x, float $y)		
pathCurveToRelative(float $x1, float $y1, float $x2, float $y2, float $x, float $y)		
pathCurveToSmoothAbsolute(float $x2, float $y2, float $x, float $y)		
pathCurveToSmoothRelative(float $x2, float $y2, float $x, float $y)		
pathEllipticArcAbsolute(float $rx, float $ry, float $x_axis_rotation, bool $large_arc_flag, bool $sweep_flag, float $x, float $y)		
pathEllipticArcRelative(float $rx, float $ry, float $x_axis_rotation, bool $large_arc_flag, bool $sweep_flag, float $x, float $y)		
pathExtents(CairoContext $context)		
pathFinish()		
pathLineToAbsolute(float $x, float $y)		
pathLineToHorizontalAbsolute(float $x)		
pathLineToHorizontalRelative(float $x)		
pathLineToRelative(float $x, float $y)		
pathLineToVerticalAbsolute(float $y)		
pathLineToVerticalRelative(float $y)		
pathMoveToAbsolute(float $x, float $y)		
pathMoveToRelative(float $x, float $y)		
pathStart()		
pathinfo(string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME])		
pause()		
pause(integer $fd)		
pclose(resource $handle)		
pcntl_alarm(int $seconds)		
pcntl_async_signals([bool $on = ''])		
pcntl_errno()		
pcntl_exec(string $path [, array $args = '' [, array $envs = '']])		
pcntl_fork()		
pcntl_get_last_error()		
pcntl_getpriority()		
pcntl_setpriority()		
pcntl_signal(int $signo, callable|int $handler [, bool $restart_syscalls = ''])		
pcntl_signal_dispatch()		
pcntl_signal_get_handler(int $signo)		
pcntl_sigprocmask(int $how, array $set [, array $oldset = ''])		
pcntl_sigtimedwait(array $set [, array $siginfo = '' [, int $seconds = '' [, int $nanoseconds = '']]])		
pcntl_sigwaitinfo(array $set [, array $siginfo = ''])		
pcntl_strerror(int $errno)		
pcntl_wait(int $status [, int $options = '' [, array $rusage = '']])		
pcntl_waitpid(int $pid, int $status [, int $options = '' [, array $rusage = '']])		
pcntl_wexitstatus(int $status)		
pcntl_wifexited(int $status)		
pcntl_wifsignaled(int $status)		
pcntl_wifstopped(int $status)		
pcntl_wstopsig(int $status)		
pcntl_wtermsig(int $status)		
pconnect(string $host [, int $port = '' [, int $timeout = '']])		
pdo_drivers()		
peek(string $target [, array $properties = ''])		
peek()		
peek()		
peek()		
peekAll(string $target [, array $properties = ''])		
pending(int $flags)		
periodic(float $offset, float $interval, callable $callback [, mixed $data = '' [, int $priority = '']])		
pfsockopen("default_socket_timeout")		
pg_affected_rows(resource $result)		
pg_cancel_query(resource $connection)		
pg_client_encoding([resource $connection = ''])		
pg_close([resource $connection = ''])		
pg_connect(string $connection_string [, int $connect_type = ''])		
pg_connect_poll(resource $connection)		
pg_connection_busy(resource $connection)		
pg_connection_reset(resource $connection)		
pg_connection_status(resource $connection)		
pg_consume_input(resource $connection)		
pg_convert(resource $connection, string $table_name, array $assoc_array [, int $options = ''])		
pg_copy_from(resource $connection, string $table_name, array $rows [, string $delimiter = '' [, string $null_as = '']])		
pg_copy_to(resource $connection, string $table_name [, string $delimiter = '' [, string $null_as = '']])		
pg_dbname([resource $connection = ''])		
pg_delete(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])		
pg_end_copy([resource $connection = ''])		
pg_escape_bytea([resource $connection = '', string $data])		
pg_escape_identifier([resource $connection = '', string $data])		
pg_escape_literal([resource $connection = '', string $data])		
pg_escape_string([resource $connection = '', string $data])		
pg_execute([resource $connection = '', string $stmtname, array $params])		
pg_fetch_all(resource $result [, int $result_type = PGSQL_ASSOC])		
pg_fetch_all_columns(resource $result [, int $column = ''])		
pg_fetch_array(resource $result [, int $row = '' [, int $result_type = PGSQL_BOTH]])		
pg_fetch_assoc(resource $result [, int $row = ''])		
pg_fetch_object(resource $result [, int $row = '' [, int $result_type = PGSQL_ASSOC [, string $class_name = '' [, array $params = '']]]])		
pg_fetch_result(resource $result, int $row, mixed $field)		
pg_fetch_row(resource $result [, int $row = ''])		
pg_field_is_null(resource $result, int $row, mixed $field)		
pg_field_name(resource $result, int $field_number)		
pg_field_num(resource $result, string $field_name)		
pg_field_prtlen(resource $result, int $row_number, mixed $field_name_or_number)		
pg_field_size(resource $result, int $field_number)		
pg_field_table(resource $result, int $field_number [, bool $oid_only = ''])		
pg_field_type(resource $result, int $field_number)		
pg_field_type_oid(resource $result, int $field_number)		
pg_flush(resource $connection)		
pg_free_result(resource $result)		
pg_get_notify(resource $connection [, int $result_type = ''])		
pg_get_pid(resource $connection)		
pg_get_result([resource $connection = ''])		
pg_host([resource $connection = ''])		
pg_insert(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])		
pg_last_error([resource $connection = ''])		
pg_last_notice(resource $connection [, int $option = PGSQL_NOTICE_LAST])		
pg_last_oid(resource $result)		
pg_lo_close(resource $large_object)		
pg_lo_create([resource $connection = '', mixed $object_id])		
pg_lo_export([resource $connection = '', int $oid, string $pathname])		
pg_lo_import([resource $connection = '', string $pathname [, mixed $object_id = '']])		
pg_lo_open(resource $connection, int $oid, string $mode)		
pg_lo_read(resource $large_object [, int $len = 8192])		
pg_lo_read_all(resource $large_object)		
pg_lo_seek(resource $large_object, int $offset [, int $whence = PGSQL_SEEK_CUR])		
pg_lo_tell(resource $large_object)		
pg_lo_truncate(resource $large_object, int $size)		
pg_lo_unlink(resource $connection, int $oid)		
pg_lo_write(resource $large_object, string $data [, int $len = ''])		
pg_meta_data(resource $connection, string $table_name [, bool $extended = ''])		
pg_num_fields(resource $result)		
pg_num_rows(resource $result)		
pg_options([resource $connection = ''])		
pg_parameter_status([resource $connection = '', string $param_name])		
pg_pconnect(string $connection_string [, int $connect_type = ''])		
pg_ping([resource $connection = ''])		
pg_port([resource $connection = ''])		
pg_prepare([resource $connection = '', string $stmtname, string $query])		
pg_put_line([resource $connection = '', string $data])		
pg_query([resource $connection = '', string $query])		
pg_query_params([resource $connection = '', string $query, array $params])		
pg_result_error(resource $result)		
pg_result_error_field(resource $result, int $fieldcode)		
pg_result_seek(resource $result, int $offset)		
pg_result_status(resource $result [, int $type = PGSQL_STATUS_LONG])		
pg_select(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC [, int $result_type = PGSQL_ASSOC]])		
pg_send_execute(resource $connection, string $stmtname, array $params)		
pg_send_prepare(resource $connection, string $stmtname, string $query)		
pg_send_query(resource $connection, string $query)		
pg_send_query_params(resource $connection, string $query, array $params)		
pg_set_client_encoding([resource $connection = '', string $encoding])		
pg_set_error_verbosity([resource $connection = '', int $verbosity])		
pg_socket(resource $connection)		
pg_trace(string $pathname [, string $mode = "w" [, resource $connection = '']])		
pg_transaction_status(resource $connection)		
pg_tty([resource $connection = ''])		
pg_unescape_bytea(string $data)		
pg_untrace([resource $connection = ''])		
pg_update(resource $connection, string $table_name, array $data, array $condition [, int $options = PGSQL_DML_EXEC])		
pg_version([resource $connection = ''])		
pgsqlCopyFromArray(string $table_name, array $rows [, string $delimiter = '\t' [, string $null_as = "\\\\N" [, string $fields = '']]])		
pgsqlCopyFromFile(string $table_name, string $filename [, string $delimiter = '\t' [, string $null_as = "\\\\N" [, string $fields = '']]])		
pgsqlCopyToArray(string $table_name [, string $delimiter = '\t' [, string $null_as = "\\\\N" [, string $fields = '']]])		
pgsqlCopyToFile(string $table_name, string $filename [, string $delimiter = '\t' [, string $null_as = "\\\\N" [, string $fields = '']]])		
pgsqlGetNotify([int $result_type = '' [, int $ms_timeout = '']])		
pgsqlGetPid()		
pgsqlLOBCreate()		
pgsqlLOBOpen(string $oid [, string $mode = "rb"])		
pgsqlLOBUnlink(string $oid)		
phdfs(string $ip, string $port)		
php_check_syntax(string $filename [, string $error_message = ''])		
php_ini_loaded_file()		
php_ini_scanned_files()		
php_logo_guid()		
php_sapi_name()		
php_strip_whitespace(string $filename)		
php_uname([string $mode = "a"])		
phpcredits([int $flag = CREDITS_ALL])		
phpdbg_break_file(string $file, int $line)		
phpdbg_break_function(string $function)		
phpdbg_break_method(string $class, string $method)		
phpdbg_break_next()		
phpdbg_clear()		
phpdbg_color(int $element, string $color)		
phpdbg_end_oplog([array $options = ''])		
phpdbg_exec([string $context = ''])		
phpdbg_get_executable([array $options = ''])		
phpdbg_prompt(string $string)		
phpdbg_start_oplog()		
phpinfo([int $what = INFO_ALL])		
phpversion([string $extension = ''])		
pi()		
ping()		
ping(mysqli $link)		
ping(mysqlnd_connection $connection)		
ping(resource $link)		
ping(string $workload)		
pingImage(string $filename)		
pingImageBlob(string $image)		
pingImageFile(resource $filehandle [, string $fileName = ''])		
pipe(string $socket)		
png2wbmp(string $pngname, string $wbmpname, int $dest_height, int $dest_width, int $threshold)		
point(float $x, float $y)		
point(float $x, float $y)		
polaroidImage(ImagickDraw $properties, float $angle)		
poll(array $read, array $error, array $reject, int $sec [, int $usec = ''])		
poll(array $readable, array $writable [, int $timeout = -1])		
polygon(array $coordinates)		
polygon(array $coordinates)		
polyline(array $coordinate_array)		
polyline(array $coordinates)		
poolDebug()		
pop()		
pop()		
pop()		
pop()		
pop()		
pop()		
pop()		
pop()		
pop()		
pop()		
pop()		
pop()		
pop([integer $maxsize = ''])		
pop()		
popClipPath()		
popDefs()		
popGroup(CairoContext $context)		
popGroupToSource(CairoContext $context)		
popPattern()		
popen(string $command, string $mode)		
pos()		
posix_access(string $file [, int $mode = POSIX_F_OK])		
posix_ctermid()		
posix_errno()		
posix_get_last_error()		
posix_getcwd()		
posix_getegid()		
posix_geteuid()		
posix_getgid()		
posix_getgrgid(int $gid)		
posix_getgrnam(string $name)		
posix_getgroups()		
posix_getlogin()		
posix_getpgid(int $pid)		
posix_getpgrp()		
posix_getpid()		
posix_getppid()		
posix_getpwnam(string $username)		
posix_getpwuid(int $uid)		
posix_getrlimit()		
posix_getsid(int $pid)		
posix_getuid()		
posix_initgroups(string $name, int $base_group_id)		
posix_isatty(mixed $fd)		
posix_kill(int $pid, int $sig)		
posix_mkfifo(string $pathname, int $mode)		
posix_mknod(string $pathname, int $mode [, int $major = '' [, int $minor = '']])		
posix_setegid(int $gid)		
posix_seteuid(int $uid)		
posix_setgid(int $gid)		
posix_setpgid(int $pid, int $pgid)		
posix_setrlimit(int $resource, int $softlimit, int $hardlimit)		
posix_setsid()		
posix_setuid(int $uid)		
posix_strerror(int $errno)		
posix_times()		
posix_ttyname(mixed $fd)		
posix_uname()		
post()		
post(string $path, string $data, callable $callback)		
postDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)		
posterizeImage(int $levels, bool $dither)		
pow(number $base, number $exp)		
preDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)		
preResponse(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)		
precedence(string $tok)		
precedence(string $tok)		
preceding(int $offset)		
predict(array $data)		
predict_probability(array $data)		
preg_filter(mixed $pattern, mixed $replacement, mixed $subject [, int $limit = -1 [, int $count = '']])		
preg_grep(string $pattern, array $input [, int $flags = ''])		
preg_last_error()		
preg_match(string $pattern, string $subject [, array $matches = '' [, int $flags = '' [, int $offset = '']]])		
preg_match_all(string $pattern, string $subject [, array $matches = '' [, int $flags = '' [, int $offset = '']]])		
preg_quote(string $str [, string $delimiter = ''])		
preg_replace(mixed $pattern, mixed $replacement, mixed $subject [, int $limit = -1 [, int $count = '']])		
preg_replace_callback(mixed $pattern, callable $callback, mixed $subject [, int $limit = -1 [, int $count = '']])		
preg_replace_callback_array(array $patterns_and_callbacks, mixed $subject [, int $limit = -1 [, int $count = '']])		
preg_split(string $pattern, string $subject [, int $limit = -1 [, int $flags = '']])		
prepare(callable $callback [, mixed $data = '' [, int $priority = '']])		
prepare()		
prepare(string $query)		
prepare(mysqlnd_prepared_statement $statement, string $query)		
prepare(string $query, mysqli_stmt $stmt)		
prepare(resource $link, string $query)		
prepare(resource $stmt, string $query)		
prepare(string $query, mysqli $link)		
prepare([string $query = ''])		
prepend(string $data)		
prepend(string $key, string $value)		
prependBody(string $content [, string $key = ''])		
prependBuffer(EventBuffer $buf)		
prependByKey(string $server_key, string $key, string $value)		
prependChild(CommonMark\Node $child)		
prev(array $array)		
prev(resource $result)		
prev(mixed $index)		
prev()		
prev()		
prevEmpty(mixed $index)		
prevError()		
previewImages(int $preview)		
previous()		
previousImage()		
previousimage()		
print(string $arg)		
print_r(mixed $expression [, bool $return = ''])		
printf(string $format [, mixed $args = '' [, mixed $... = '']])		
priorityInit(int $n_priorities)		
proc_close(resource $process)		
proc_get_status(resource $process)		
proc_nice(int $increment)		
proc_open(string $cmd, array $descriptorspec, array $pipes [, string $cwd = '' [, array $env = '' [, array $other_options = '']]])		
proc_terminate(resource $process [, int $signal = 15])		
profileImage(string $name, string $profile)		
profileimage(string $name, string $profile)		
property_exists(mixed $class, string $property)		
protect(integer $fd [, boolean $is_protected = ''])		
protocol_version(resource $link)		
ps_add_bookmark(resource $psdoc, string $text [, int $parent = '' [, int $open = '']])		
ps_add_launchlink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename)		
ps_add_locallink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, int $page, string $dest)		
ps_add_note(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open)		
ps_add_pdflink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename, int $page, string $dest)		
ps_add_weblink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $url)		
ps_arc(resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta)		
ps_arcn(resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta)		
ps_begin_page(resource $psdoc, float $width, float $height)		
ps_begin_pattern(resource $psdoc, float $width, float $height, float $xstep, float $ystep, int $painttype)		
ps_begin_template(resource $psdoc, float $width, float $height)		
ps_circle(resource $psdoc, float $x, float $y, float $radius)		
ps_clip(resource $psdoc)		
ps_close(resource $psdoc)		
ps_close_image(resource $psdoc, int $imageid)		
ps_closepath(resource $psdoc)		
ps_closepath_stroke(resource $psdoc)		
ps_continue_text(resource $psdoc, string $text)		
ps_curveto(resource $psdoc, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)		
ps_delete(resource $psdoc)		
ps_end_page(resource $psdoc)		
ps_end_pattern(resource $psdoc)		
ps_end_template(resource $psdoc)		
ps_fill(resource $psdoc)		
ps_fill_stroke(resource $psdoc)		
ps_findfont(resource $psdoc, string $fontname, string $encoding [, bool $embed = ''])		
ps_get_buffer(resource $psdoc)		
ps_get_parameter(resource $psdoc, string $name [, float $modifier = ''])		
ps_get_value(resource $psdoc, string $name [, float $modifier = ''])		
ps_hyphenate(resource $psdoc, string $text)		
ps_include_file(resource $psdoc, string $file)		
ps_lineto(resource $psdoc, float $x, float $y)		
ps_makespotcolor(resource $psdoc, string $name [, int $reserved = ''])		
ps_moveto(resource $psdoc, float $x, float $y)		
ps_new()		
ps_open_file(resource $psdoc [, string $filename = ''])		
ps_open_image(resource $psdoc, string $type, string $source, string $data, int $lenght, int $width, int $height, int $components, int $bpc, string $params)		
ps_open_image_file(resource $psdoc, string $type, string $filename [, string $stringparam = '' [, int $intparam = '']])		
ps_open_memory_image(resource $psdoc, int $gd)		
ps_place_image(resource $psdoc, int $imageid, float $x, float $y, float $scale)		
ps_rect(resource $psdoc, float $x, float $y, float $width, float $height)		
ps_restore(resource $psdoc)		
ps_rotate(resource $psdoc, float $rot)		
ps_save(resource $psdoc)		
ps_scale(resource $psdoc, float $x, float $y)		
ps_set_border_color(resource $psdoc, float $red, float $green, float $blue)		
ps_set_border_dash(resource $psdoc, float $black, float $white)		
ps_set_border_style(resource $psdoc, string $style, float $width)		
ps_set_info(resource $p, string $key, string $val)		
ps_set_parameter(resource $psdoc, string $name, string $value)		
ps_set_text_pos(resource $psdoc, float $x, float $y)		
ps_set_value(resource $psdoc, string $name, float $value)		
ps_setcolor(resource $psdoc, string $type, string $colorspace, float $c1, float $c2, float $c3, float $c4)		
ps_setdash(resource $psdoc, float $on, float $off)		
ps_setflat(resource $psdoc, float $value)		
ps_setfont(resource $psdoc, int $fontid, float $size)		
ps_setgray(resource $psdoc, float $gray)		
ps_setlinecap(resource $psdoc, int $type)		
ps_setlinejoin(resource $psdoc, int $type)		
ps_setlinewidth(resource $psdoc, float $width)		
ps_setmiterlimit(resource $psdoc, float $value)		
ps_setoverprintmode(resource $psdoc, int $mode)		
ps_setpolydash(resource $psdoc, float $arr)		
ps_shading(resource $psdoc, string $type, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist)		
ps_shading_pattern(resource $psdoc, int $shadingid, string $optlist)		
ps_shfill(resource $psdoc, int $shadingid)		
ps_show(resource $psdoc, string $text)		
ps_show2(resource $psdoc, string $text, int $len)		
ps_show_boxed(resource $psdoc, string $text, float $left, float $bottom, float $width, float $height, string $hmode [, string $feature = ''])		
ps_show_xy(resource $psdoc, string $text, float $x, float $y)		
ps_show_xy2(resource $psdoc, string $text, int $len, float $xcoor, float $ycoor)		
ps_string_geometry(resource $psdoc, string $text [, int $fontid = '' [, float $size = 0.0]])		
ps_stringwidth(resource $psdoc, string $text [, int $fontid = '' [, float $size = 0.0]])		
ps_stroke(resource $psdoc)		
ps_symbol(resource $psdoc, int $ord)		
ps_symbol_name(resource $psdoc, int $ord [, int $fontid = ''])		
ps_symbol_width(resource $psdoc, int $ord [, int $fontid = '' [, float $size = 0.0]])		
ps_translate(resource $psdoc, float $x, float $y)		
pseudoInverse(array $a)		
pspell_add_to_personal(int $dictionary_link, string $word)		
pspell_add_to_session(int $dictionary_link, string $word)		
pspell_check(int $dictionary_link, string $word)		
pspell_clear_session(int $dictionary_link)		
pspell_config_create(string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '']]])		
pspell_config_data_dir(int $conf, string $directory)		
pspell_config_dict_dir(int $conf, string $directory)		
pspell_config_ignore(int $dictionary_link, int $n)		
pspell_config_mode(int $dictionary_link, int $mode)		
pspell_config_personal(int $dictionary_link, string $file)		
pspell_config_repl(int $dictionary_link, string $file)		
pspell_config_runtogether(int $dictionary_link, bool $flag)		
pspell_config_save_repl(int $dictionary_link, bool $flag)		
pspell_new(string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '' [, int $mode = '']]]])		
pspell_new_config(int $config)		
pspell_new_personal(string $personal, string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '' [, int $mode = '']]]])		
pspell_save_wordlist(int $dictionary_link)		
pspell_store_replacement(int $dictionary_link, string $misspelled, string $correct)		
pspell_suggest(int $dictionary_link, string $word)		
pullup(int $size)		
push()		
push(string $data)		
push(string $data)		
push(string $name, string $rule)		
push(string $name, string $rule)		
push([mixed $...values = ''])		
push([mixed $...values = ''])		
push([mixed $...values = ''])		
push([mixed $...values = ''])		
push([mixed $...values = ''])		
push(mixed $item)		
push(mixed $value)		
push(mixed $value)		
push(mixed $value)		
push(mixed $value, int $priority)		
push(string $data [, string $opcode = '' [, string $finish = '']])		
push(string $fd, string $data [, string $opcode = '' [, string $finish = '']])		
push(string $regex, int $id)		
push(string $regex, int $id, string $state, string $newState)		
pushClipPath(string $clip_mask_id)		
pushDefs()		
pushGroup(CairoContext $context)		
pushGroupWithContent(int $content, CairoContext $context)		
pushPattern(string $pattern_id, float $x, float $y, float $width, float $height)		
pushState(string $state)		
put(mixed $keys [, string $value = null])		
put(string $key, array $columns)		
put()		
put(mixed $key, mixed $value)		
putAll(mixed $pairs)		
putCat(mixed $keys [, string $value = ''])		
putCat(string $key, array $columns)		
putKeep(mixed $keys [, string $value = ''])		
putKeep(string $key, array $columns)		
putNr(mixed $keys [, string $value = null])		
putNr(mixed $keys [, string $value = ''])		
putShl(string $key, string $value, int $width)		
putShl(string $key, string $value, int $width)		
putenv(string $setting)		
px_close(resource $pxdoc)		
px_create_fp(resource $pxdoc, resource $file, array $fielddesc)		
px_date2string(resource $pxdoc, int $value, string $format)		
px_delete(resource $pxdoc)		
px_delete_record(resource $pxdoc, int $num)		
px_get_field(resource $pxdoc, int $fieldno)		
px_get_info(resource $pxdoc)		
px_get_parameter(resource $pxdoc, string $name)		
px_get_record(resource $pxdoc, int $num [, int $mode = ''])		
px_get_schema(resource $pxdoc [, int $mode = ''])		
px_get_value(resource $pxdoc, string $name)		
px_insert_record(resource $pxdoc, array $data)		
px_new()		
px_numfields(resource $pxdoc)		
px_numrecords(resource $pxdoc)		
px_open_fp(resource $pxdoc, resource $file)		
px_put_record(resource $pxdoc, array $record [, int $recpos = -1])		
px_retrieve_record(resource $pxdoc, int $num [, int $mode = ''])		
px_set_blob_file(resource $pxdoc, string $filename)		
px_set_parameter(resource $pxdoc, string $name, string $value)		
px_set_tablename(resource $pxdoc, string $name)		
px_set_targetencoding(resource $pxdoc, string $encoding)		
px_set_value(resource $pxdoc, string $name, float $value)		
px_timestamp2string(resource $pxdoc, float $value, string $format)		
px_update_record(resource $pxdoc, array $data, int $num)		
quantizeImage(int $numberColors, int $colorspace, int $treedepth, bool $dither, bool $measureError)		
quantizeImages(int $numberColors, int $colorspace, int $treedepth, bool $dither, bool $measureError)		
quantizeimage(int $numColors, int $colorspace, int $treeDepth, bool $dither, bool $measureError)		
quantizeimages(int $numColors, int $colorspace, int $treeDepth, bool $dither, bool $measureError)		
query(string $expression [, DOMNode $contextnode = '' [, bool $registerNodeNS = '']])		
query(string $statement, int $PDO::FETCH_COLUMN, int $colno, int $PDO::FETCH_CLASS, string $classname, array $ctorargs, int $PDO::FETCH_INTO, object $object)		
query()		
query(string $sql, callable $callback)		
query(string $query)		
query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, string $error_msg = '']])		
query(SolrParams $query)		
query(string $query [, string $index = "*" [, string $comment = ""]])		
query(mysqlnd_connection $connection, string $query)		
query(resource $link, string $query [, int $resultmode = ''])		
query(string $query [, int $resultmode = MYSQLI_STORE_RESULT, mysqli $link])		
query(string $query)		
queryFontMetrics(ImagickDraw $properties, string $text [, bool $multiline = ''])		
queryFonts([string $pattern = "*"])		
queryFormats([string $pattern = "*"])		
queryPhrase(string $str)		
queryReadResultsetHeader(mysqlnd_connection $connection, mysqlnd_statement $mysqlnd_stmt)		
querySingle(string $query [, bool $entire_row = ''])		
queryfontmetrics(GmagickDraw $draw, string $text)		
queryfonts([string $pattern = "*"])		
queryformats([string $pattern = "*"])		
quit()		
quit()		
quote(string $string [, int $parameter_type = PDO::PARAM_STR])		
quoteName(string $name)		
quoted_printable_decode(string $str)		
quoted_printable_encode(string $str)		
quotemeta(string $str)		
rad2deg(float $number)		
radialBlurImage(float $angle [, int $channel = Imagick::CHANNEL_DEFAULT])		
radialblurimage(float $angle [, int $channel = Gmagick::CHANNEL_DEFAULT])		
radius_acct_open()		
radius_add_server(resource $radius_handle, string $hostname, int $port, string $secret, int $timeout, int $max_tries)		
radius_auth_open()		
radius_close(resource $radius_handle)		
radius_config(resource $radius_handle, string $file)		
radius_create_request(resource $radius_handle, int $type)		
radius_cvt_addr(string $data)		
radius_cvt_int(string $data)		
radius_cvt_string(string $data)		
radius_demangle(resource $radius_handle, string $mangled)		
radius_demangle_mppe_key(resource $radius_handle, string $mangled)		
radius_get_attr(resource $radius_handle)		
radius_get_tagged_attr_data(string $data)		
radius_get_tagged_attr_tag(string $data)		
radius_get_vendor_attr(string $data)		
radius_put_addr(resource $radius_handle, int $type, string $addr [, int $options = '' [, int $tag = '']])		
radius_put_attr(resource $radius_handle, int $type, string $value [, int $options = '' [, int $tag = '']])		
radius_put_int(resource $radius_handle, int $type, int $value [, int $options = '' [, int $tag = '']])		
radius_put_string(resource $radius_handle, int $type, string $value [, int $options = '' [, int $tag = '']])		
radius_put_vendor_addr(resource $radius_handle, int $vendor, int $type, string $addr)		
radius_put_vendor_attr(resource $radius_handle, int $vendor, int $type, string $value [, int $options = '' [, int $tag = '']])		
radius_put_vendor_int(resource $radius_handle, int $vendor, int $type, int $value [, int $options = '' [, int $tag = '']])		
radius_put_vendor_string(resource $radius_handle, int $vendor, int $type, string $value [, int $options = '' [, int $tag = '']])		
radius_request_authenticator(resource $radius_handle)		
radius_salt_encrypt_attr(resource $radius_handle, string $data)		
radius_send_request(resource $radius_handle)		
radius_server_secret(resource $radius_handle)		
radius_strerror(resource $radius_handle)		
raiseImage(int $width, int $height, int $x, int $y, bool $raise)		
raiseimage(int $width, int $height, int $x, int $y, bool $raise)		
rand(int $min, int $max)		
randomThresholdImage(float $low, float $high [, int $channel = Imagick::CHANNEL_DEFAULT])		
random_bytes(int $length)		
random_int(int $min, int $max)		
range(mixed $start, mixed $end [, number $step = 1])		
rar_broken_is(RarArchive $rarfile)		
rar_close(RarArchive $rarfile)		
rar_comment_get(RarArchive $rarfile)		
rar_entry_get(string $entryname, RarArchive $rarfile)		
rar_list(RarArchive $rarfile)		
rar_open(string $filename [, string $password = null [, callable $volume_callback = null]])		
rar_solid_is(RarArchive $rarfile)		
rar_wrapper_cache_stats()		
rawcontent()		
rawcookie(string $name [, string $value = '' [, string $expires = '' [, string $path = '' [, string $domain = '' [, string $secure = '' [, string $httponly = '']]]]]])		
rawurldecode(string $str)		
rawurlencode(string $str)		
reInit()		
read([int $start = '' [, int $length = '']])		
read(string $filename)		
read()		
read(string $filename, callable $callback [, integer $chunk_size = '' [, integer $offset = '']])		
read([integer $maxsize = ''])		
read([resource $dir_handle = ''])		
read(int $length)		
read(int $max_bytes)		
read(int $size)		
read(integer $offset, integer $length)		
read(string $buffer, int $len)		
read(string $path [, int $length = ''])		
read(string $session_id)		
read(string $session_id)		
readBuffer(EventBuffer $buf)		
readFile(string $filename, callable $callback)		
readFrame([string $class_name = "stompFrame", resource $link])		
readFrom(mixed $fd, int $howmuch)		
readFromStream(int $bytes)		
readImage(string $filename)		
readImageBlob(string $image [, string $filename = ''])		
readImageFile(resource $filehandle [, string $fileName = ''])		
readInnerXml()		
readLine(int $eol_style)		
readOnly()		
readOuterXml()		
readString()		
read_exif_data()		
readdir([resource $dir_handle = ''])		
readfile(string $filename [, bool $use_include_path = '' [, resource $context = '']])		
readgzfile(string $filename [, int $use_include_path = ''])		
readimage(string $filename)		
readimageblob(string $imageContents [, string $filename = ''])		
readimagefile(resource $fp [, string $filename = ''])		
readimages(array $filenames)		
readline([string $prompt = ''])		
readline_add_history(string $line)		
readline_callback_handler_install(string $prompt, callable $callback)		
readline_callback_handler_remove()		
readline_callback_read_char()		
readline_clear_history()		
readline_completion_function(callable $function)		
readline_info([string $varname = '' [, string $newvalue = '']])		
readline_list_history()		
readline_on_new_line()		
readline_read_history([string $filename = ''])		
readline_redisplay()		
readline_write_history([string $filename = ''])		
readlink(string $path)		
readlock([int $wait = -1])		
readonly()		
readonly()		
readonly()		
readunlock()		
real_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '' [, int $flags = '', mysqli $link]]]]]]])		
real_connect(resource $link [, string $hostname = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])		
real_escape_string(resource $link, string $escapestr)		
real_escape_string(string $escapestr, mysqli $link)		
real_query(resource $link, string $query)		
real_query(string $query, mysqli $link)		
realpath(string $path)		
realpath_cache_get()		
realpath_cache_size()		
reapQuery(mysqlnd_connection $connection)		
reap_async_query(mysqli $link)		
reason()		
reasonText([int $reason = ''])		
receive(string $target [, array $properties = ''])		
recode()		
recode_file(string $request, resource $input, resource $output)		
recode_string(string $request, string $string)		
recolorImage(array $matrix)		
recommendedBackends()		
recoverFromCorruption()		
recoverFromCorruption()		
rectangle(float $x1, float $y1, float $x2, float $y2)		
rectangle(float $x, float $y, float $width, float $height)		
rectangle(float $x1, float $y1, float $x2, float $y2)		
rectangle(float $x, float $y, float $width, float $height, CairoContext $context)		
recv()		
recv()		
recv()		
recv([int $mode = ''])		
recv([string $size = '' [, string $flag = '']])		
recvData(int $data_len)		
recvMulti([int $mode = ''])		
recycle()		
redirect(string $url)		
redraw()		
reduce(callable $callback [, mixed $initial = ''])		
reduce(callable $callback [, mixed $initial = ''])		
reduce(callable $callback [, mixed $initial = ''])		
reduce(callable $callback [, mixed $initial = ''])		
reduce(callable $callback [, mixed $initial = ''])		
reduceNoiseImage(float $radius)		
reducenoiseimage(float $radius)		
refresh(int $options, resource $link)		
refreshServer(mysqlnd_connection $connection, int $options)		
register(string $function_name [, int $timeout = ''])		
register()		
registerCallback(string $name, callable $function)		
registerExtension()		
registerLocalNamespace(mixed $prefix)		
registerNamespace(string $prefix, string $namespaceURI)		
registerNodeClass(string $baseclass, string $extendedclass)		
registerPHPFunctions([mixed $restrict = ''])		
registerPhpFunctions([mixed $restrict = ''])		
registerPlugin(Yaf_Plugin_Abstract $plugin)		
registerXPathNamespace(string $prefix, string $ns)		
register_shutdown_function(callable $callback [, mixed $parameter = '' [, mixed $... = '']])		
register_tick_function(callable $function [, mixed $arg = '' [, mixed $... = '']])		
relCurveTo(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3, CairoContext $context)		
relLineTo(float $x, float $y, CairoContext $context)		
relMoveTo(float $x, float $y, CairoContext $context)		
relaxNGValidate(string $filename)		
relaxNGValidateSource(string $source)		
release()		
releaseSavepoint(string $name)		
release_savepoint(string $name, mysqli $link)		
reload()		
remapImage(Imagick $replacement, int $DITHER)		
remove(string $target [, array $properties = ''])		
remove(array $parameter)		
remove(mixed $item)		
remove(string $name)		
remove()		
remove()		
remove(int $index)		
remove(int $index)		
remove(int $index)		
remove(string $search_condition)		
remove(mixed $key [, mixed $default = ''])		
remove()		
remove([mixed $...values = ''])		
remove(object $instance)		
remove(object $object)		
removeAll(SplObjectStorage $storage)		
removeAllExcept(SplObjectStorage $storage)		
removeAttribute(string $name)		
removeAttributeNS(string $namespaceURI, string $localName)		
removeAttributeNode(DOMAttr $oldnode)		
removeBigramPhraseField(string $field)		
removeBoostQuery(string $field)		
removeChild(DOMNode $oldnode)		
removeExpandFilterQuery(string $fq)		
removeExpandSortField(string $field)		
removeFacetDateField(string $field)		
removeFacetDateOther(string $value [, string $field_override = ''])		
removeFacetField(string $field)		
removeFacetQuery(string $value)		
removeField(string $field)		
removeFilterQuery(string $fq)		
removeHeader(string $key, string $type)		
removeHighlightField(string $field)		
removeImage()		
removeImageProfile(string $name)		
removeMltField(string $field)		
removeMltQueryField(string $queryField)		
removeOne(string $id)		
removeOptions(int $option)		
removeOptions(int $options)		
removeParameter(string $namespaceURI, string $localName)		
removePhraseField(string $field)		
removeQueryField(string $field)		
removeRequiredParameter(string $req_params)		
removeServerAlias(string $alias)		
removeSortField(string $field)		
removeStatsFacet(string $value)		
removeStatsField(string $field)		
removeSubscriber(MongoDB\Driver\Monitoring\Subscriber $subscriber)		
removeTrigramPhraseField(string $field)		
removeUserField(string $field)		
removeimage()		
removeimageprofile(string $name)		
rename(string $oldname, string $newname [, resource $context = ''])		
rename(string $old_path, string $new_path)		
rename(string $path_from, string $path_to)		
renameIndex(int $index, string $newname)		
renameName(string $name, string $newname)		
rename_function(string $original_name, string $new_name)		
render()		
render()		
render(string $tpl [, array $parameters = ''])		
render(string $tpl [, array $tpl_vars = ''])		
render(string $tpl [, array $tpl_vars = ''])		
repair([bool $preserve_cloned_files = '' [, bool $backup_original_files = '']])		
repairFile(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = '']]])		
repairString(string $data [, mixed $config = '' [, string $encoding = '']])		
replace(CommonMark\Node $target)		
replace(string $key, mixed $value [, int $expiration = ''])		
replace(string $key, mixed $var [, int $flag = '' [, int $expire = '']])		
replace(array $parameter)		
replace(string $collection_field, string $expression_or_literal)		
replaceByKey(string $server_key, string $key, mixed $value [, int $expiration = ''])		
replaceChild(DOMNode $newnode, DOMNode $oldnode)		
replaceData(int $offset, int $count, string $data)		
replaceOne(string $id, string $doc)		
reportProblem(string $oauthexception [, bool $send_headers = ''])		
request(string $raw_request)		
requireFeatures(int $feature)		
resampleImage(float $x_resolution, float $y_resolution, int $filter, float $blur)		
resampleimage(float $xResolution, float $yResolution, int $filter, float $blur)		
reset(array $array)		
reset()		
reset()		
reset()		
reset()		
reset()		
reset()		
reset(mysqli_stmt $stmt)		
reset(resource $stmt)		
reset()		
reset([int $tokenId = ''])		
reset([int $tokenId = ''])		
reset(int $pos)		
reset(int $pos)		
resetClip(CairoContext $context)		
resetError()		
resetError()		
resetFilters()		
resetGroupBy()		
resetImagePage(string $page)		
resetIterator()		
resetLimit()		
resetServerList()		
resetStream()		
resetVectorGraphics()		
resize(int $size [, mixed $value = ''])		
resize(int $size)		
resizeImage(int $columns, int $rows, int $filter, float $blur [, bool $bestfit = '' [, bool $legacy = '']])		
resizeimage(int $width, int $height, int $filter, float $blur [, bool $fit = ''])		
resourcebundle_count(ResourceBundle $r)		
resourcebundle_create(string $locale, string $bundlename [, bool $fallback = ''])		
resourcebundle_get(string|int $index [, bool $fallback = '', ResourceBundle $r])		
resourcebundle_get_error_code(ResourceBundle $r)		
resourcebundle_get_error_message(ResourceBundle $r)		
resourcebundle_locales(string $bundlename)		
response()		
restartPSession(mysqlnd_connection $connection)		
restore()		
restore(string $log_dir, int $timestamp [, bool $check_consistency = ''])		
restore(CairoContext $context)		
restore_error_handler()		
restore_exception_handler()		
restore_include_path()		
restrictToLevel(int $level)		
restrictToVersion(int $version)		
result_metadata(mysqli_stmt $stmt)		
result_metadata(resource $stmt)		
resume()		
resume()		
resume()		
resume()		
resume(integer $fd)		
returnCode()		
returnCode()		
returnCode()		
returnCode()		
returnResponse(bool $flag)		
returnsReference()		
reverse()		
reverse()		
reverse()		
reverse()		
reverse()		
reversed()		
reversed()		
reversed()		
reversed()		
reversed()		
revert()		
rewind(resource $handle)		
rewind()		
rewind()		
rewind()		
rewind(resource $result)		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind()		
rewind([resource $dir_handle = ''])		
rewinddir([resource $dir_handle = ''])		
right(string $tok)		
right(string $tok)		
rmdir(string $dirname [, resource $context = ''])		
rmdir(string $path, int $options)		
roll(int $field, mixed $amountOrUpOrDown, IntlCalendar $cal)		
rollBack()		
rollImage(int $x, int $y)		
rollback()		
rollback()		
rollback([int $flags = '' [, string $name = '', mysqli $link]])		
rollback(resource $link)		
rollback()		
rollbackTo(string $name)		
rollimage(int $x, int $y)		
root(tidy $object)		
rotate(UI\Point $point, float $amount)		
rotate(float $degrees)		
rotate(float $degrees)		
rotate(float $angle)		
rotate(float $angle, CairoContext $context)		
rotate(int $rotations)		
rotate(int $rotations)		
rotate(int $rotations)		
rotate(string $radians, CairoContext $context)		
rotateImage(mixed $background, float $degrees)		
rotateTo(float $angle)		
rotateTo(float $angle)		
rotateimage(mixed $color, float $degrees)		
rotationalBlurImage(float $angle [, int $channel = Imagick::CHANNEL_DEFAULT])		
round(float $val [, int $precision = '' [, int $mode = PHP_ROUND_HALF_UP]])		
roundCorners(float $x_rounding, float $y_rounding [, float $stroke_width = 10 [, float $displace = 5 [, float $size_correction = -6]]])		
roundRectangle(float $x1, float $y1, float $x2, float $y2, float $rx, float $ry)		
roundrectangle(float $x1, float $y1, float $x2, float $y2, float $rx, float $ry)		
route(Yaf_Request_Abstract $request)		
route(Yaf_Request_Abstract $request)		
route(Yaf_Request_Abstract $request)		
route(Yaf_Request_Abstract $request)		
route(Yaf_Request_Abstract $request)		
route(Yaf_Request_Abstract $request)		
route(Yaf_Request_Abstract $request)		
route(Yaf_Request_Abstract $request)		
routerShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)		
routerStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)		
rowCount()		
rpl_query_type(resource $link)		
rpl_query_type(string $query, mysqli $link)		
rpm_close(resource $rpmr)		
rpm_get_tag(resource $rpmr, int $tagnum)		
rpm_is_valid(string $filename)		
rpm_open(string $filename)		
rpm_version()		
rrd_create(string $filename, array $options)		
rrd_error()		
rrd_fetch(string $filename, array $options)		
rrd_first(string $file [, int $raaindex = ''])		
rrd_graph(string $filename, array $options)		
rrd_info(string $filename)		
rrd_last(string $filename)		
rrd_lastupdate(string $filename)		
rrd_restore(string $xml_file, string $rrd_file [, array $options = ''])		
rrd_tune(string $filename, array $options)		
rrd_update(string $filename, array $options)		
rrd_version()		
rrd_xport(array $options)		
rrdc_disconnect()		
rsort(array $array [, int $sort_flags = SORT_REGULAR])		
rtrim(string $str [, string $character_mask = ''])		
run()		
run()		
run()		
run()		
run([int $flags = ''])		
run([int $flags = ''])		
run([int $flags = ''])		
runQueries()		
runTasks()		
runkit_class_adopt(string $classname, string $parentname)		
runkit_class_emancipate(string $classname)		
runkit_constant_add(string $constname, mixed $value)		
runkit_constant_redefine(string $constname, mixed $newvalue)		
runkit_constant_remove(string $constname)		
runkit_function_add(string $funcname, string $arglist, string $code [, bool $return_by_reference = '' [, string $doc_comment = '', Closure $closure]])		
runkit_function_copy(string $funcname, string $targetname)		
runkit_function_redefine(string $funcname, string $arglist, string $code [, bool $return_by_reference = '' [, string $doc_comment = '', Closure $closure]])		
runkit_function_remove(string $funcname)		
runkit_function_rename(string $funcname, string $newname)		
runkit_import(string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS])		
runkit_lint(string $code)		
runkit_lint_file(string $filename)		
runkit_method_add(string $classname, string $methodname, string $args, string $code [, int $flags = RUNKIT_ACC_PUBLIC [, string $doc_comment = '', Closure $closure]])		
runkit_method_copy(string $dClass, string $dMethod, string $sClass [, string $sMethod = ''])		
runkit_method_redefine(string $classname, string $methodname, string $args, string $code [, int $flags = RUNKIT_ACC_PUBLIC [, string $doc_comment = '', Closure $closure]])		
runkit_method_remove(string $classname, string $methodname)		
runkit_method_rename(string $classname, string $methodname, string $newname)		
runkit_return_value_used()		
runkit_sandbox_output_handler(object $sandbox [, mixed $callback = ''])		
runkit_superglobals()		
running([bool $retphar = ''])		
sampleImage(int $columns, int $rows)		
sapi_windows_cp_conv(int|string $in_codepage, int|string $out_codepage, string $subject)		
sapi_windows_cp_get(string $kind)		
sapi_windows_cp_is_utf8()		
sapi_windows_cp_set(int $cp)		
sapi_windows_vt100_support(resource $stream [, bool $enable = ''])		
save()		
save()		
save()		
save(string $data [, int $offset = ''])		
save(string $file)		
save(string $filename)		
save(string $filename [, int $compression = -1])		
save(string $filename [, int $options = ''])		
save()		
save()		
save(CairoContext $context)		
saveFile()		
saveFile(SDO_XMLDocument $xdoc, string $xml_file [, int $indent = ''])		
saveHTML([DOMNode $node = null])		
saveHTMLFile(string $filename)		
savePicture(string $filename)		
saveString(SDO_XMLDocument $xdoc [, int $indent = ''])		
saveToFile(resource $x [, int $compression = -1])		
saveToFile(string $filename)		
saveToFile(string $filename)		
saveToFile(string $filename)		
saveToFile(string $filename)		
saveToStream()		
saveToString()		
saveToString()		
saveToString()		
saveToString()		
saveVerbose()		
saveXML()		
saveXML([DOMNode $node = '' [, int $options = '']])		
savepoint(string $name, mysqli $link)		
scale(UI\Point $center, UI\Point $point)		
scale(float $x, float $y)		
scale(float $x, float $y)		
scale(float $dx, float $dy)		
scale(float $scale [, int $normalizeFlag = ''])		
scale(float $sx, float $sy, CairoContext $context)		
scale(float $x, float $y, CairoContext $context)		
scaleImage(int $cols, int $rows [, bool $bestfit = '' [, bool $legacy = '']])		
scaleTo(float $x [, float $y = ''])		
scaleTo(float $x [, float $y = ''])		
scaleimage(int $width, int $height [, bool $fit = ''])		
scandir(string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context = '']])		
schemaValidate(string $filename [, int $flags = ''])		
schemaValidateSource(string $source [, int $flags = ''])		
scrollTo(UI\Point $point, UI\Size $size)		
search()		
search(string $what [, int $start = -1 [, int $end = -1]])		
searchEol([int $start = -1 [, int $eol_style = '']])		
seaslog_get_author()		
seaslog_get_version()		
seek(int $offset [, int $whence = ''])		
seek(resource $result, int $rownum)		
seek(int $position)		
seek(int $line_pos)		
seek(int $position)		
seek(int $position)		
seek(int $position)		
seekResult(int $position)		
segmentImage(int $COLORSPACE, float $cluster_threshold, float $smooth_threshold [, bool $verbose = ''])		
select(mixed $columns [, mixed $... = ''])		
selectCollection(string $db, string $collection)		
selectCollection(string $name)		
selectDB(string $name)		
selectDb(mysqlnd_connection $connection, string $database)		
selectFontFace(string $family [, int $slant = '' [, int $weight = '', CairoContext $context]])		
selectServer(MongoDB\Driver\ReadPreference $readPreference)		
select_db(resource $link, string $dbname)		
select_db(string $dbname, mysqli $link)		
selectiveBlurImage(float $radius, float $sigma, float $threshold [, int $channel = Imagick::CHANNEL_DEFAULT])		
sem_acquire(resource $sem_identifier [, bool $nowait = ''])		
sem_get(int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1]]])		
sem_release(resource $sem_identifier)		
sem_remove(resource $sem_identifier)		
send()		
send(string $message [, int $mode = ''])		
send(string $destination, mixed $msg [, array $headers = '', resource $link])		
send(integer $fd, string $data [, integer $reactor_id = ''])		
send(string $data [, string $flag = ''])		
send(string $target, SAMMessage $msg [, array $properties = ''])		
sendClose(mysqlnd_connection $connection)		
sendComplete(string $result)		
sendData(string $data)		
sendData(string $data)		
sendError(int $error [, string $reason = ''])		
sendException(string $exception)		
sendFail()		
sendMessage(integer $worker_id, string $data)		
sendQuery(mysqlnd_connection $connection, string $query)		
sendReply(int $code, string $reason [, EventBuffer $buf = ''])		
sendReplyChunk(EventBuffer $buf)		
sendReplyEnd()		
sendReplyStart(int $code, string $reason)		
sendStatus(int $numerator, int $denominator)		
sendWarning(string $warning)		
sendWorkload(string $data)		
send_long_data(int $param_nr, string $data, mysqli_stmt $stmt)		
send_long_data(resource $stmt, int $param_nr, string $data)		
send_query(resource $link, string $query)		
send_query(string $query, mysqli $link)		
sendfile()		
sendfile(string $filename [, int $offset = ''])		
sendfile(integer $fd, string $filename [, integer $offset = ''])		
sendfile(string $filename [, int $offset = ''])		
sendmulti(array $message [, int $mode = ''])		
sendto()		
sendto(string $ip, integer $port, string $data [, string $server_socket = ''])		
sendto(string $ip, integer $port, string $data)		
sendwait(integer $fd, string $data)		
separate()		
separateImageChannel(int $channel)		
separateimagechannel(int $channel)		
sepiaToneImage(float $threshold)		
serialize(mixed $value)		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serialize()		
serverDumpDebugInformation(mysqlnd_connection $connection)		
server_info(resource $link)		
server_version(resource $link)		
session_abort()		
session_cache_expire([string $new_cache_expire = ''])		
session_cache_limiter([string $cache_limiter = ''])		
session_commit()		
session_create_id([string $prefix = ''])		
session_decode(string $data)		
session_destroy()		
session_encode()		
session_gc()		
session_get_cookie_params()		
session_id([string $id = ''])		
session_is_registered(string $name)		
session_module_name([string $module = ''])		
session_name([string $name = ''])		
session_pgsql_add_error(int $error_level [, string $error_message = ''])		
session_pgsql_get_error([bool $with_error_message = ''])		
session_pgsql_get_field()		
session_pgsql_reset()		
session_pgsql_set_field(string $value)		
session_pgsql_status()		
session_regenerate_id([bool $delete_old_session = ''])		
session_register(mixed $name [, mixed $... = ''])		
session_register_shutdown()		
session_reset()		
session_save_path([string $path = ''])		
session_set_cookie_params(int $lifetime [, string $path = '' [, string $domain = '' [, bool $secure = '' [, bool $httponly = '']]]])		
session_set_save_handler(callable $open, callable $close, callable $read, callable $write, callable $destroy, callable $gc [, callable $create_sid = '' [, callable $validate_sid = '' [, callable $update_timestamp = '', object $sessionhandler [, bool $register_shutdown = '']]]])		
session_start()		
session_status()		
session_unregister(string $name)		
session_unset()		
session_write_close()		
set()		
set()		
set(array $settings)		
set(string $key, array $value)		
set()		
set(EventBase $base, mixed $fd [, int $what = '' [, callable $cb = '' [, mixed $arg = '']]])		
set(int $field, int $value, int $year, int $month [, int $dayOfMonth = null [, int $hour = null [, int $minute = null [, int $second = null, IntlCalendar $cal]]]])		
set(int $key, int $value)		
set(mixed $object_id, mixed $type, mixed $value)		
set(string $key, mixed $value [, int $expiration = ''])		
set(string $key, mixed $var [, int $flag = '' [, int $expire = '']])		
set(string $name, string $value)		
set(string $path, string $value [, int $version = -1 [, array $stat = '']])		
set(int $fd [, string $read_callback = '' [, string $write_callback = '' [, string $events = '']]])		
set(int $key, string $value)		
set(string $key, int $value)		
set(integer $value)		
set(string $collection_field, string $expression_or_literal)		
set(string $table_field, string $expression_or_literal)		
set(array $settings)		
set(array $settings)		
set(array $settings)		
set(array $settings)		
set(float $after, float $repeat)		
set(float $offset, float $interval)		
set(int $index, mixed $value)		
set(int $index, mixed $value)		
set(int $index, mixed $value)		
set(int $pid, bool $trace)		
set(int $signum)		
set(int $value)		
set(mixed $fd, int $events)		
set(object $other)		
set(string $name, string $value)		
set(string $path, float $interval)		
setAccessible(bool $accessible)		
setAccessible(bool $accessible)		
setAcl(string $path, int $version, array $acl)		
setAction(SWFAction $action)		
setActionName(string $action)		
setAlias(string $alias)		
setAlias(string $alias)		
setAllHeaders()		
setAllowBroken(bool $allow_broken, RarArchive $rarfile)		
setAllowedLocales(string $locale_list)		
setAllowedMethods(int $methods)		
setAntialias([int $antialias = '', CairoContext $context])		
setAntialias([int $antialias = '', CairoContext $context])		
setAppDirectory(string $directory)		
setArchiveComment(string $comment)		
setArrayResult(bool $array_result)		
setAttribute(string $name, string $value)		
setAttribute(int $attr, int $val, Collator $coll)		
setAttribute(int $attr, int $value, NumberFormatter $fmt)		
setAttribute(int $attribute, mixed $value)		
setAttribute(int $attribute, mixed $value)		
setAttributeNS(string $namespaceURI, string $qualifiedName, string $value)		
setAttributeNode(DOMAttr $attr)		
setAttributeNodeNS(DOMAttr $attr)		
setAuthType(int $auth_type)		
setAutocommit(mysqlnd_connection $connection, int $mode)		
setBackgroundColor(mixed $background)		
setBasePath(string $base_path)		
setBaseUri(string $uir)		
setBigramPhraseFields(string $fields)		
setBigramPhraseSlop(string $slop)		
setBody(string $content [, string $key = ''])		
setBoost(float $documentBoostValue)		
setBoostFunction(string $function)		
setBoostQuery(string $q)		
setBorderStyle(float $width, int $dash_on, int $dash_off)		
setBorders(bool $borders)		
setBounds(float $width, float $height)		
setBuffering(bool $on_off)		
setByKey(string $server_key, string $key, mixed $value [, int $expiration = ''])		
setCAPath([string $ca_path = '' [, string $ca_info = '']])		
setCMYKFill(float $c, float $m, float $y, float $k)		
setCMYKStroke(float $c, float $m, float $y, float $k)		
setCalendar(mixed $which, IntlDateFormatter $fmt)		
setCallback(callable $callback)		
setCallback(callable $cb [, mixed $arg = ''])		
setCallback(callable $log_function)		
setCallback(string $path, string $cb [, string $arg = ''])		
setCallbacks(callable $readcb, callable $writecb, callable $eventcb [, string $arg = ''])		
setCap(int $cap)		
setChannel(int $channel, float $value)		
setCharSpace(float $char_space)		
setCharset(mysqlnd_connection $connection, string $charset)		
setChecked(bool $checked)		
setChecked(bool $checked)		
setChecks(int $checks)		
setClass(string $class_name [, mixed $args = '' [, mixed $... = '']])		
setClientCallback(callable $callback)		
setClientOption(mysqlnd_connection $connection, int $option, int $value)		
setClipPath(string $clip_mask)		
setClipRule(int $fill_rule)		
setClipUnits(int $clip_units)		
setCloseCallback(callable $callback [, mixed $data = ''])		
setColor(int $color [, int $start = '' [, int $end = '']])		
setColor(int $color)		
setColor(string $color)		
setColor(int $color)		
setColor(int $red, int $green, int $blue [, int $a = 255])		
setColor(int $red, int $green, int $blue [, int $a = 255])		
setColorCount(int $colorCount)		
setColorMask(int $rmin, int $rmax, int $gmin, int $gmax, int $bmin, int $bmax)		
setColorValue(int $color, float $value)		
setColorValueQuantum(int $color, number $value)		
setColorspace(int $COLORSPACE)		
setColumn(string $range, float $width [, resource $format = ''])		
setCommentIndex(int $index, string $comment)		
setCommentName(string $name, string $comment)		
setCompat(int $compat)		
setCompleteCallback(callable $callback)		
setCompressThreshold(int $threshold [, float $min_savings = ''])		
setCompressedBZIP2()		
setCompressedGZ()		
setCompression(int $compression)		
setCompressionIndex(int $index, int $comp_method [, int $comp_flags = ''])		
setCompressionMode(int $mode)		
setCompressionName(string $name, int $comp_method [, int $comp_flags = ''])		
setCompressionQuality(int $quality)		
setCompressionQuality(int $quality)		
setConnectTimeout(float $timeout)		
setContext(string $context)		
setControllerName(string $controller)		
setCookies()		
setCookies(array $cookies)		
setCreatedCallback(string $callback)		
setCsvControl([string $delimiter = "," [, string $enclosure = "\"" [, string $escape = "\\"]]])		
setCurrentEncoder(string $encoding)		
setDash(array $pattern, int $phase)		
setDash(array $dashes [, float $offset = '', CairoContext $context])		
setData()		
setData(string $data)		
setData(string $data)		
setDataCallback(callable $callback)		
setDate(int $year, int $month, int $day, DateTime $object)		
setDate(int $year, int $month, int $day)		
setDatetimeFormat(string $format)		
setDebug(bool $switch)		
setDebugLevel(int $logLevel)		
setDefault(string $locale)		
setDefaultAction(string $action)		
setDefaultCallback(string $cb [, string $arg = ''])		
setDefaultController(string $controller)		
setDefaultModule(string $module)		
setDefaultStub([string $index = '' [, string $webindex = '']])		
setDefaultStub([string $index = '' [, string $webindex = '']])		
setDefer()		
setDefer()		
setDepth(int $depth)		
setDestination(object $destination)		
setDestinationEncoding(string $encoding)		
setDeterministicConnOrder(bool $yesOrNo)		
setDeviceOffset(float $x, float $y)		
setDimension(float $width, float $height)		
setDimension(int $x, int $y)		
setDispatched()		
setDown(SWFShape $shape)		
setEchoHandler(bool $flag)		
setEchoParams(string $type)		
setEncoding(string $encoding)		
setEncryptionIndex(int $index, string $method [, string $password = ''])		
setEncryptionMode(int $mode [, int $key_len = 5])		
setEncryptionName(string $name, int $method [, string $password = ''])		
setEps(bool $level)		
setErrorCallback(string $cb)		
setErrorHandler(call $callback, int $error_types)		
setExceptionCallback(callable $callback)		
setExpand(bool $value)		
setExpandQuery(string $q)		
setExpandRows(int $value)		
setExplainOther(string $query)		
setExtend(int $extend)		
setExtend(int $extend)		
setExternalAttributesIndex(int $index, int $opsys, int $attr [, int $flags = ''])		
setExternalAttributesName(string $name, int $opsys, int $attr [, int $flags = ''])		
setExtractFlags(int $flags)		
setFacet(bool $flag)		
setFacetDateEnd(string $value [, string $field_override = ''])		
setFacetDateGap(string $value [, string $field_override = ''])		
setFacetDateHardEnd(bool $value [, string $field_override = ''])		
setFacetDateStart(string $value [, string $field_override = ''])		
setFacetEnumCacheMinDefaultFrequency(int $frequency [, string $field_override = ''])		
setFacetLimit(int $limit [, string $field_override = ''])		
setFacetMethod(string $method [, string $field_override = ''])		
setFacetMinCount(int $mincount [, string $field_override = ''])		
setFacetMissing(bool $flag [, string $field_override = ''])		
setFacetOffset(int $offset [, string $field_override = ''])		
setFacetPrefix(string $prefix [, string $field_override = ''])		
setFacetSort(int $facetSort [, string $field_override = ''])		
setFailCallback(callable $callback)		
setFallbackResolution(float $x, float $y)		
setFetchMode(int $mode, int $PDO::FETCH_COLUMN, int $colno, int $PDO::FETCH_CLASS, string $classname, array $ctorargs, int $PDO::FETCH_INTO, object $object)		
setField(string $fieldName)		
setFieldBoost(string $fieldName, float $fieldBoostValue)		
setFieldWeights(array $weights)		
setFileClass([string $class_name = "SplFileObject"])		
setFilename(string $filename)		
setFillAlpha(float $opacity)		
setFillColor(ImagickPixel $fill_pixel)		
setFillOpacity(float $fillOpacity)		
setFillPatternURL(string $fill_url)		
setFillRule(int $fill_rule)		
setFillRule(int $setting, CairoContext $context)		
setFilter(string $attribute, array $values [, bool $exclude = ''])		
setFilter(int $filter)		
setFilterFloatRange(string $attribute, float $min, float $max [, bool $exclude = ''])		
setFilterRange(string $attribute, int $min, int $max [, bool $exclude = ''])		
setFirstDayOfWeek(int $dayOfWeek, IntlCalendar $cal)		
setFirstIterator()		
setFit()		
setFitB()		
setFitBH(float $top)		
setFitBV(float $left)		
setFitH(float $top)		
setFitR(float $left, float $bottom, float $right, float $top)		
setFitV(float $left)		
setFlag(int $flag [, bool $set = ''])		
setFlags([int $flags = ''])		
setFlags(int $flags)		
setFlags(int $flags)		
setFlags(int $flags)		
setFlags(int $flags)		
setFlags(int $flags)		
setFlags(string $flags)		
setFlatness(float $flatness)		
setFont(string $font)		
setFont(string $font_name)		
setFont(SWFFont $font)		
setFont(SWFFont $font)		
setFontAndSize(object $font, float $size)		
setFontFace(CairoFontFace $fontface, CairoContext $context)		
setFontFamily(string $font_family)		
setFontMatrix(CairoMatrix $matrix, CairoContext $context)		
setFontOptions(CairoFontOptions $fontoptions, CairoContext $context)		
setFontSize(float $pointsize)		
setFontSize(float $size, CairoContext $context)		
setFontStretch(int $fontStretch)		
setFontStyle(int $style)		
setFontWeight(int $font_weight)		
setFormat(string $format)		
setFrames(int $number)		
setFrames(int $number)		
setFullScreen(bool $full)		
setGarbage()		
setGeoAnchor(string $attrlat, string $attrlong, float $latitude, float $longitude)		
setGravity(int $gravity)		
setGravity(int $gravity)		
setGrayFill(float $value)		
setGrayStroke(float $value)		
setGregorianChange(float $date)		
setGroup(bool $value)		
setGroupBy(string $attribute, int $func [, string $groupsort = "@group desc"])		
setGroupCachePercent(int $percent)		
setGroupDistinct(string $attribute)		
setGroupFacet(bool $value)		
setGroupFormat(string $value)		
setGroupLimit(int $value)		
setGroupMain(string $value)		
setGroupNGroups(bool $value)		
setGroupOffset(int $value)		
setGroupTruncate(bool $value)		
setHSL(float $hue, float $saturation, float $luminosity)		
setHandler(string $command, string $callback [, string $number_of_string_param = '' [, string $type_of_array_param = '']])		
setHeader(string $name, string $value [, bool $replace = ''])		
setHeaders()		
setHeaders(array $headers)		
setHeight(float $size)		
setHeight(float $height)		
setHeight(float $height)		
setHeight(float $height)		
setHighlight(bool $flag)		
setHighlightAlternateField(string $field [, string $field_override = ''])		
setHighlightFormatter(string $formatter [, string $field_override = ''])		
setHighlightFragmenter(string $fragmenter [, string $field_override = ''])		
setHighlightFragsize(int $size [, string $field_override = ''])		
setHighlightHighlightMultiTerm(bool $flag)		
setHighlightMaxAlternateFieldLength(int $fieldLength [, string $field_override = ''])		
setHighlightMaxAnalyzedChars(int $value)		
setHighlightMergeContiguous(bool $flag [, string $field_override = ''])		
setHighlightMode(int $mode)		
setHighlightRegexMaxAnalyzedChars(int $maxAnalyzedChars)		
setHighlightRegexPattern(string $value)		
setHighlightRegexSlop(float $factor)		
setHighlightRequireFieldMatch(bool $flag)		
setHighlightSimplePost(string $simplePost [, string $field_override = ''])		
setHighlightSimplePre(string $simplePre [, string $field_override = ''])		
setHighlightSnippets(int $value [, string $field_override = ''])		
setHighlightUsePhraseHighlighter(bool $flag)		
setHint(string $hint)		
setHintMetrics(int $hint_metrics)		
setHintStyle(int $hint_style)		
setHit(SWFShape $shape)		
setHorizontalScaling(float $scaling)		
setHost(string $host)		
setIDRange(int $min, int $max)		
setISODate(int $year, int $week [, int $day = 1, DateTime $object])		
setISODate(int $year, int $week [, int $day = 1])		
setIcon(int $icon)		
setId(string $id)		
setIdAttribute(string $name, bool $isId)		
setIdAttributeNS(string $namespaceURI, string $localName, bool $isId)		
setIdAttributeNode(DOMAttr $attr, bool $isId)		
setIdent(string $ident)		
setIdleCallback(callable $cb_func, int $timeout [, mixed $user_data = ''])		
setIdleTimeout(int $timeout)		
setImage(Imagick $replace)		
setImageAlphaChannel(int $mode)		
setImageArtifact(string $artifact, string $value)		
setImageAttribute(string $key, string $value)		
setImageBackgroundColor(mixed $background)		
setImageBias(float $bias)		
setImageBiasQuantum(string $bias)		
setImageBluePrimary(float $x, float $y)		
setImageBorderColor(mixed $border)		
setImageChannelDepth(int $channel, int $depth)		
setImageClipMask(Imagick $clip_mask)		
setImageColormapColor(int $index, ImagickPixel $color)		
setImageColorspace(int $colorspace)		
setImageCompose(int $compose)		
setImageCompression(int $compression)		
setImageCompressionQuality(int $quality)		
setImageDelay(int $delay)		
setImageDepth(int $depth)		
setImageDispose(int $dispose)		
setImageExtent(int $columns, int $rows)		
setImageFilename(string $filename)		
setImageFormat(string $format)		
setImageGamma(float $gamma)		
setImageGravity(int $gravity)		
setImageGreenPrimary(float $x, float $y)		
setImageIndex(int $index)		
setImageInterlaceScheme(int $interlace_scheme)		
setImageInterpolateMethod(int $method)		
setImageIterations(int $iterations)		
setImageMatte(bool $matte)		
setImageMatteColor(mixed $matte)		
setImageOpacity(float $opacity)		
setImageOrientation(int $orientation)		
setImagePage(int $width, int $height, int $x, int $y)		
setImageProfile(string $name, string $profile)		
setImageProperty(string $name, string $value)		
setImageRedPrimary(float $x, float $y)		
setImageRenderingIntent(int $rendering_intent)		
setImageResolution(float $x_resolution, float $y_resolution)		
setImageScene(int $scene)		
setImageTicksPerSecond(int $ticks_per_second)		
setImageType(int $image_type)		
setImageUnits(int $units)		
setImageVirtualPixelMethod(int $method)		
setImageWhitePoint(float $x, float $y)		
setIndent(bool $indent, resource $xmlwriter)		
setIndentString(string $indentString, resource $xmlwriter)		
setIndentation(float $width)		
setIndex(int $index)		
setIndex(string $column, int $type)		
setIndexWeights(array $weights)		
setInfo(mixed $data)		
setInfoAttr(int $type, string $info)		
setInfoClass([string $class_name = "SplFileInfo"])		
setInfoDateAttr(int $type, int $year, int $month, int $day, int $hour, int $min, int $sec, string $ind, int $off_hour, int $off_min)		
setInterlaceScheme(int $interlace_scheme)		
setInterval(int $microseconds, int $seconds)		
setIteratorClass(string $iterator_class)		
setIteratorFirstRow()		
setIteratorIndex(int $index)		
setIteratorLastRow()		
setIteratorMode(int $mode)		
setIteratorMode(int $mode)		
setIteratorMode(int $mode)		
setIteratorRow(int $row)		
setJoin(int $join)		
setLastIterator()		
setLeftFill(SWFGradient $fill, int $red, int $green, int $blue [, int $a = ''])		
setLeftMargin(float $width)		
setLenient(bool $isLenient, IntlCalendar $cal)		
setLenient(bool $lenient, IntlDateFormatter $fmt)		
setLevel(int $level)		
setLibraryPath(string $directory [, bool $is_global = ''])		
setLimit([int $max = '' [, int $skip = '']])		
setLimit(string $property, string $low, string $high)		
setLimits(int $offset, int $limit [, int $max_matches = '' [, int $cutoff = '']])		
setLine(SWFShape $shape, int $width, int $red, int $green, int $blue [, int $a = ''])		
setLineCap(int $cap)		
setLineCap(int $setting, CairoContext $context)		
setLineJoin(int $join)		
setLineJoin(int $setting, CairoContext $context)		
setLineSpacing(float $height)		
setLineWidth(float $width)		
setLineWidth(float $width, CairoContext $context)		
setLocalAddress(string $address)		
setLocalPort(int $port)		
setLogStream(resource $stream)		
setLogger(string $logger)		
setMargin(bool $margin)		
setMargin(bool $margin)		
setMargin(int $page, bool $margin)		
setMargins(float $left, float $right)		
setMaskImage(object $mask_image)		
setMaskLevel(int $level)		
setMaster(string $host, int $port, int $timestamp [, bool $check_consistency = ''])		
setMatchMode(int $mode)		
setMatrix(CairoMatrix $matrix, CairoContext $context)		
setMatrix(CairoMatrix $matrix, CairoContext $context)		
setMatrix(float $a, float $b, float $c, float $d, float $x, float $y)		
setMax(string $max)		
setMaxBodySize(int $value)		
setMaxBodySize(string $max_size)		
setMaxDepth([int $max_depth = -1])		
setMaxDispatchInterval(int $max_interval, int $max_callbacks, int $min_priority)		
setMaxHeadersSize(int $value)		
setMaxHeadersSize(string $max_size)		
setMaxLineLen(int $max_len)		
setMaxQueryTime(int $qtime)		
setMenu(int $flag)		
setMetadata(mixed $metadata)		
setMetadata(mixed $metadata)		
setMethod()		
setMethod(string $method)		
setMimeType(string $type)		
setMimeType(string $mime)		
setMin(string $min)		
setMinimalDaysInFirstWeek(int $minimalDays, IntlCalendar $cal)		
setMinimumMatch(string $value)		
setMiterLimit(float $limit)		
setMiterLimit(float $limit)		
setMiterLimit(float $limit, CairoContext $context)		
setMlt(bool $flag)		
setMltBoost(bool $flag)		
setMltCount(int $count)		
setMltMaxNumQueryTerms(int $value)		
setMltMaxNumTokens(int $value)		
setMltMaxWordLength(int $maxWordLength)		
setMltMinDocFrequency(int $minDocFrequency)		
setMltMinTermFrequency(int $minTermFrequency)		
setMltMinWordLength(int $minWordLength)		
setMode(int $mode)		
setModule(int $module)		
setModuleName(string $module)		
setMulti(array $items [, int $expiration = ''])		
setMultiByKey(string $server_key, array $items [, int $expiration = ''])		
setName(string $name)		
setName(string $name)		
setNonce(string $nonce)		
setNullPolicy(string $nullPolicy)		
setObject(object $object)		
setOmitHeader(bool $flag)		
setOpenAction(object $destination)		
setOpened(bool $opened)		
setOpened(bool $opened)		
setOperator(int $setting, CairoContext $context)		
setOpt(int $name, mixed $value)		
setOpt(int $key, mixed $value)		
setOption(int $option, mixed $value)		
setOption(string $key, string $value)		
setOption(string $option, string $value)		
setOptions(array $options)		
setOptions(array $params)		
setOptions(int $option)		
setOptions(int $options)		
setOptions(array $options)		
setOrder(string $name, int $type)		
setOver(SWFShape $shape)		
setOverride(string $attribute, int $type, array $values)		
setPadded(bool $padded)		
setPadded(bool $padded)		
setPadded(bool $padding)		
setPadding(float $padding)		
setPage(int $width, int $height, int $x, int $y)		
setPageLayout(int $layout)		
setPageMode(int $mode)		
setPagesConfiguration(int $page_per_pages)		
setParam(string $name, string $value)		
setParam(string $name [, string $value = ''])		
setParam(string $param_key [, mixed $param_val = ''])		
setParam(string $name, string|integer $value)		
setParameter(string $namespace, string $name, string $value, array $options)		
setParent(UI\Control $parent)		
setParseMode([int $parser_mode = ''])		
setParserProperty(int $property, bool $value)		
setPassword(string $owner_password, string $user_password)		
setPassword(string $password)		
setPattern(string $pattern, IntlDateFormatter $fmt)		
setPattern(string $pattern, MessageFormatter $fmt)		
setPattern(string $pattern, NumberFormatter $fmt)		
setPermission(int $permission)		
setPersistence(int $mode)		
setPhraseDelimiter(string $delimiter)		
setPhraseFields(string $fields)		
setPhraseSlop(string $slop)		
setPicture(string $filename)		
setPointSize(float $point_size)		
setPoolSize(int $size)		
setPort(int $port)		
setPostFilename(string $postname)		
setPostfix(string $postfix)		
setPrefixPart(int $part, string $value)		
setPregFlags(int $preg_flags)		
setPriority(int $priority)		
setPriority(int $priority)		
setPrivate()		
setPrivate()		
setProfiling(string $filename)		
setProfilingLevel(int $level)		
setProgressMonitor(callable $callback)		
setProtected()		
setProtected()		
setQuery(string $query)		
setQueryAlt(string $q)		
setQueryPhraseSlop(string $slop)		
setRGBFill(float $r, float $g, float $b)		
setRGBStroke(float $r, float $g, float $b)		
setRSACertificate(string $cert)		
setRankingMode(int $ranker)		
setRate(float $rate)		
setRatio(float $ratio)		
setReadOnly(bool $readOnly)		
setReadOnly(bool $readOnly)		
setReadPreference(string $read_preference [, array $tags = ''])		
setReadPreference(string $read_preference [, array $tags = ''])		
setReadPreference(string $read_preference [, array $tags = ''])		
setReadPreference(string $read_preference [, array $tags = ''])		
setReadPreference(string $read_preference [, array $tags = ''])		
setReadPreference(string $read_preference [, array $tags = ''])		
setReadTimeout(int $seconds [, int $microseconds = '', resource $link])		
setRedirect()		
setRegistry(string $key, string $value)		
setRelaxNGSchema(string $filename)		
setRelaxNGSchemaSource(string $source)		
setRepeatedWallTimeOption(int $wallTimeOption, IntlCalendar $cal)		
setRequest(Yaf_Request_Abstract $request)		
setRequestEngine(int $reqengine)		
setRequestID(string $request_id)		
setRequestTokenPath(string $path)		
setRequestUri(string $uir)		
setResolution(float $x_resolution, float $y_resolution)		
setResolution(float $x_resolution, float $y_resolution)		
setResourceLimit(int $type, int $limit)		
setResponseWriter(string $responseWriter)		
setRetries(int $count [, int $delay = ''])		
setRetries(int $retries)		
setReturn(int $gearman_return_t)		
setRightFill(SWFGradient $fill, int $red, int $green, int $blue [, int $a = ''])		
setRightMargin(float $width)		
setRotate(int $angle)		
setRouted([string $flag = ''])		
setRow(string $range, float $height [, resource $format = ''])		
setRows(int $rows)		
setSSLChecks(int $sslcheck)		
setSamplingFactors(array $factors)		
setSaslAuthData(string $username, string $password)		
setSavepoint([string $name = ''])		
setScaledFont(CairoScaledFont $scaledfont, CairoContext $context)		
setSchema(string $filename)		
setScriptPath(string $template_dir)		
setScriptPath(string $template_dir)		
setSearchNdots(int $ndots)		
setSecret(string $secret)		
setSecurity(string $sec_level [, string $auth_protocol = '' [, string $auth_passphrase = '' [, string $priv_protocol = '' [, string $priv_passphrase = '' [, string $contextName = '' [, string $contextEngineID = '']]]]]])		
setSecurityPrefs(int $securityPrefs)		
setSelect(string $clause)		
setSelected(int $index)		
setSelected(int $index)		
setServer(string $server, int $port)		
setServerOption(mysqlnd_connection $connection, int $option)		
setServerParams(string $host [, int $port = 11211 [, int $timeout = '' [, int $retry_interval = '' [, bool $status = '' [, callable $failure_callback = '']]]]])		
setServlet(int $type, string $value)		
setShowDebugInfo(bool $flag)		
setSignatureAlgorithm(int $sigtype)		
setSize(UI\Size $size)		
setSize(UI\Size $size)		
setSize(int $size)		
setSize(int $columns, int $rows)		
setSize(int $size)		
setSize(int $size)		
setSize(int $size, int $direction)		
setSize(float $width, float $height)		
setSize(float $width, float $height)		
setSizeOffset(int $columns, int $rows, int $offset)		
setSkippedWallTimeOption(int $wallTimeOption, IntlCalendar $cal)		
setSlaveOkay([bool $ok = ''])		
setSlaveOkay([bool $ok = ''])		
setSlaveOkay([bool $ok = ''])		
setSlideShow(int $type, float $disp_time, float $trans_time)		
setSockOpt(int $key, mixed $value)		
setSocketOption(mixed $socket, int $level, int $optname, mixed $optval)		
setSort(string $sort)		
setSortMode(int $mode [, string $sortby = ''])		
setSource(CairoPattern $pattern, CairoContext $context)		
setSourceEncoding(string $encoding)		
setSourceRGB(float $red, float $green, float $blue, CairoContext $context)		
setSourceRGBA(float $red, float $green, float $blue, float $alpha, CairoContext $context)		
setSourceSurface(CairoSurface $surface [, float $x = '' [, float $y = '', CairoContext $context]])		
setSpacing(float $spacing)		
setStart(int $start)		
setStatic()		
setStatic()		
setStaticPropertyValue(string $name, mixed $value)		
setStats(bool $flag)		
setStatusCallback(callable $callback)		
setStop(int $index, float $position, int $color)		
setStrength(int $strength, Collator $coll)		
setStrokeAlpha(float $opacity)		
setStrokeAntialias(bool $stroke_antialias)		
setStrokeColor(ImagickPixel $stroke_pixel)		
setStrokeDashArray(array $dashArray)		
setStrokeDashOffset(float $dash_offset)		
setStrokeLineCap(int $linecap)		
setStrokeLineJoin(int $linejoin)		
setStrokeMiterLimit(int $miterlimit)		
setStrokeOpacity(float $stroke_opacity)		
setStrokePatternURL(string $stroke_url)		
setStrokeWidth(float $stroke_width)		
setStructure(int $structure)		
setStub(string $stub [, int $len = -1])		
setStub(string $stub [, int $len = -1])		
setSubpixelOrder(int $subpixel_order)		
setSubstChars(string $chars)		
setSymbol(int $attr, string $value, NumberFormatter $fmt)		
setTerms(bool $flag)		
setTermsField(string $fieldname)		
setTermsIncludeLowerBound(bool $flag)		
setTermsIncludeUpperBound(bool $flag)		
setTermsLimit(int $limit)		
setTermsLowerBound(string $lowerBound)		
setTermsMaxCount(int $frequency)		
setTermsMinCount(int $frequency)		
setTermsPrefix(string $prefix)		
setTermsReturnRaw(bool $flag)		
setTermsSort(int $sortType)		
setTermsUpperBound(string $upperBound)		
setText(string $text)		
setText(string $text)		
setText(string $text)		
setText(string $text)		
setText(string $text)		
setText(string $text)		
setText(string $text)		
setTextAlignment(int $alignment)		
setTextAntialias(bool $antiAlias)		
setTextAttribute(int $attr, string $value, NumberFormatter $fmt)		
setTextDecoration(int $decoration)		
setTextEncoding(string $encoding)		
setTextInterlineSpacing(float $spacing)		
setTextInterwordSpacing(float $spacing)		
setTextKerning(float $kerning)		
setTextLeading(float $text_leading)		
setTextMatrix(float $a, float $b, float $c, float $d, float $x, float $y)		
setTextRenderingMode(int $mode)		
setTextRise(float $rise)		
setTextUnderColor(ImagickPixel $under_color)		
setThickness(float $thickness)		
setTieBreaker(string $tieBreaker)		
setTime(int $hour, int $minute [, int $second = '' [, int $microseconds = '', DateTime $object]])		
setTime(int $hour, int $minute [, int $second = '' [, int $microseconds = '']])		
setTime(float $date, IntlCalendar $cal)		
setTimeAllowed(int $timeAllowed)		
setTimeZone(mixed $timeZone, IntlCalendar $cal)		
setTimeZone(mixed $zone, IntlDateFormatter $fmt)		
setTimeZoneId(string $zone, IntlDateFormatter $fmt)		
setTimeout(int $timeout)		
setTimeout(int $timeout)		
setTimeout(int $timeout)		
setTimeout(int $timeout)		
setTimeout(int $value)		
setTimeouts(float $timeout_read, float $timeout_write)		
setTimer(EventBase $base, callable $cb [, mixed $arg = ''])		
setTimerCallback(callable $cb_func, int $timeout [, mixed $user_data = ''])		
setTimerTimeout(int $timeout)		
setTimestamp(int $unixtimestamp, DateTime $object)		
setTimestamp(int $unixtimestamp)		
setTimestamp(string $timestamp)		
setTimezone(DateTimeZone $timezone)		
setTimezone(DateTimeZone $timezone, DateTime $object)		
setTitle(string $title)		
setTitle(string $title)		
setToken(string $token, string $token_secret)		
setTolerance(float $tolerance, CairoContext $context)		
setTrigramPhraseFields(string $fields)		
setTrigramPhraseSlop(string $slop)		
setType(int $image_type)		
setType(int $type)		
setTypeMap(array $typemap)		
setUncompressed()		
setUp(SWFShape $shape)		
setUserFields(string $fields)		
setUsingExceptions(bool $using_exceptions)		
setValue(int $value)		
setValue(int $value)		
setValue(int $value)		
setValue(object $object, mixed $value)		
setVectorGraphics(string $xml)		
setVersion(string $version)		
setView(Yaf_View_Interface $view)		
setViewbox(int $x1, int $y1, int $x2, int $y2)		
setViewpath(string $view_directory)		
setWarningCallback(callable $callback)		
setWatcher(callable $watcher_cb)		
setWatermark(int $events, int $lowmark, int $highmark)		
setWeight(float $weight)		
setWidth(float $size)		
setWidth(float $width)		
setWidth(float $width)		
setWordSpace(float $word_space)		
setWorkloadCallback(callable $callback)		
setWriteConcern(mixed $w [, int $wtimeout = ''])		
setWriteConcern(mixed $w [, int $wtimeout = ''])		
setWriteConcern(mixed $w [, int $wtimeout = ''])		
setX(float $point)		
setXMLDeclaration(bool $xmlDeclatation)		
setXMLVersion(string $xmlVersion)		
setXYZ(float $left, float $top, float $zoom)		
setY(float $point)		
set_charset(string $charset, mysqli $link)		
set_error_handler(callable $error_handler [, int $error_types = E_ALL | E_STRICT])		
set_exception_handler(callable $exception_handler)		
set_file_buffer()		
set_flags(int $options)		
set_include_path(string $new_include_path)		
set_local_infile_default(mysqli $link)		
set_local_infile_handler(mysqli $link, callable $read_func)		
set_magic_quotes_runtime(bool $new_setting)		
set_opt()		
set_socket_blocking()		
set_time_limit(int $seconds)		
setbackground(int $red, int $green, int $blue)		
setcolor(string $color)		
setcolorvalue(int $color, float $value)		
setcommittedversion(array $parameter)		
setcookie(string $name [, string $value = "" [, int $expire = '' [, string $path = "" [, string $domain = "" [, bool $secure = '' [, bool $httponly = '']]]]]])		
setfilename(string $filename)		
setfillcolor(mixed $color)		
setfillopacity(float $fill_opacity)		
setfont(string $font)		
setfontsize(float $pointsize)		
setfontstyle(int $style)		
setfontweight(int $weight)		
setimagebackgroundcolor(GmagickPixel $color)		
setimageblueprimary(float $x, float $y)		
setimagebordercolor(GmagickPixel $color)		
setimagechanneldepth(int $channel, int $depth)		
setimagecolorspace(int $colorspace)		
setimagecompose(int $composite)		
setimagedelay(int $delay)		
setimagedepth(int $depth)		
setimagedispose(int $disposeType)		
setimagefilename(string $filename)		
setimageformat(string $imageFormat)		
setimagegamma(float $gamma)		
setimagegreenprimary(float $x, float $y)		
setimageindex(int $index)		
setimageinterlacescheme(int $interlace)		
setimageiterations(int $iterations)		
setimageprofile(string $name, string $profile)		
setimageredprimary(float $x, float $y)		
setimagerenderingintent(int $rendering_intent)		
setimageresolution(float $xResolution, float $yResolution)		
setimagescene(int $scene)		
setimagetype(int $imgType)		
setimageunits(int $resolution)		
setimagewhitepoint(float $x, float $y)		
setlocale(int $category, array $locale [, string $... = ''])		
setproctitle(string $title)		
setrawcookie(string $name [, string $value = '' [, int $expire = '' [, string $path = '' [, string $domain = '' [, bool $secure = '' [, bool $httponly = '']]]]]])		
setsamplingfactors(array $factors)		
setsize(int $columns, int $rows)		
setstrokecolor(mixed $color)		
setstrokeopacity(float $stroke_opacity)		
setstrokewidth(float $width)		
settextdecoration(int $decoration)		
settextencoding(string $encoding)		
setthreadtitle(string $title)		
settype(mixed $var, string $type)		
sha1(string $str [, bool $raw_output = ''])		
sha1_file(string $filename [, bool $raw_output = ''])		
shadeImage(bool $gray, float $azimuth, float $elevation)		
shadowImage(float $opacity, float $sigma, int $x, int $y)		
sharpenImage(float $radius, float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT])		
shaveImage(int $columns, int $rows)		
shearImage(mixed $background, float $x_shear, float $y_shear)		
shearimage(mixed $color, float $xShear, float $yShear)		
shell_exec(string $cmd)		
shift()		
shift()		
shift()		
shift()		
shift()		
shift()		
shm_attach(int $key [, int $memsize = '' [, int $perm = 0666]])		
shm_detach(resource $shm_identifier)		
shm_get_var(resource $shm_identifier, int $variable_key)		
shm_has_var(resource $shm_identifier, int $variable_key)		
shm_put_var(resource $shm_identifier, int $variable_key, mixed $variable)		
shm_remove(resource $shm_identifier)		
shm_remove_var(resource $shm_identifier, int $variable_key)		
shmop_close(resource $shmid)		
shmop_delete(resource $shmid)		
shmop_open(int $key, string $flags, int $mode, int $size)		
shmop_read(resource $shmid, int $start, int $count)		
shmop_size(resource $shmid)		
shmop_write(resource $shmid, string $data, int $offset)		
show()		
showPage(CairoContext $context)		
showPage(CairoContext $context)		
showText(string $text)		
showText(string $text, CairoContext $context)		
showTextNextLine(string $text [, float $word_space = '' [, float $char_space = '']])		
show_source()		
shuffle(array $array)		
shutdown()		
shutdown()		
shutdown()		
shutdownServer(string $MYSQLND_UH_RES_MYSQLND_NAME, string $level)		
sigil([int $idx = ''])		
sigil([int $idx = ''])		
sigmoidalContrastImage(bool $sharpen, float $alpha, float $beta [, int $channel = Imagick::CHANNEL_DEFAULT])		
signal(int $signum, callable $callback [, mixed $data = '' [, int $priority = '']])		
signal(EventBase $base, int $signum, callable $cb [, mixed $arg = ''])		
signal(int $condition)		
signal(string $signal_no, callable $callback)		
similarNames(string $name [, int $country = ''])		
similar_text(string $first, string $second [, float $percent = ''])		
simpleCommand(mysqlnd_connection $connection, int $command, string $arg, int $ok_packet, bool $silent, bool $ignore_upsert_status)		
simpleCommandHandleResponse(mysqlnd_connection $connection, int $ok_packet, bool $silent, int $command, bool $ignore_upsert_status)		
simplexml_import_dom(DOMNode $node [, string $class_name = "SimpleXMLElement"])		
simplexml_load_file(string $filename [, string $class_name = "SimpleXMLElement" [, int $options = '' [, string $ns = "" [, bool $is_prefix = '']]]])		
simplexml_load_string(string $data [, string $class_name = "SimpleXMLElement" [, int $options = '' [, string $ns = "" [, bool $is_prefix = '']]]])		
sin(float $arg)		
singleQuery(resource $db, string $query [, bool $first_row_only = '' [, bool $decode_binary = '']])		
singularValues(array $a)		
sinh(float $arg)		
size()		
size()		
size()		
size()		
size()		
size()		
size(string $key)		
size()		
sizeof()		
sketchImage(float $radius, float $sigma, float $angle)		
skew(UI\Point $point, UI\Point $amount)		
skewX(float $degrees)		
skewX(float $ddegrees)		
skewXTo(float $degrees)		
skewXTo(float $x)		
skewY(float $degrees)		
skewY(float $ddegrees)		
skewYTo(float $degrees)		
skewYTo(float $y)		
skip(int $position)		
skip(int $num)		
skip(integer $position)		
skip(integer $skip)		
slaveOkay([bool $okay = ''])		
sleep(int $seconds)		
sleep()		
sleep(float $seconds)		
slice(int $index [, int $length = ''])		
slice(int $index [, int $length = ''])		
slice(int $index [, int $length = ''])		
slice(int $index [, int $length = ''])		
slice(int $index [, int $length = ''])		
smushImages(bool $stack, int $offset)		
snapshot()		
snmp2_get(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])		
snmp2_getnext(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])		
snmp2_real_walk(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])		
snmp2_set(string $host, string $community, string $object_id, string $type, string $value [, string $timeout = 1000000 [, string $retries = 5]])		
snmp2_walk(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])		
snmp3_get(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])		
snmp3_getnext(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])		
snmp3_real_walk(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])		
snmp3_set(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id, string $type, string $value [, int $timeout = 1000000 [, int $retries = 5]])		
snmp3_walk(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])		
snmp_get_quick_print()		
snmp_get_valueretrieval()		
snmp_read_mib(string $filename)		
snmp_set_enum_print(int $enum_print)		
snmp_set_oid_numeric_print(int $oid_format)		
snmp_set_oid_output_format(int $oid_format)		
snmp_set_quick_print(bool $quick_print)		
snmp_set_valueretrieval(int $method)		
snmpget(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])		
snmpgetnext(string $host, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])		
snmprealwalk(string $host, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])		
snmpset(string $host, string $community, string $object_id, string $type, mixed $value [, int $timeout = 1000000 [, int $retries = 5]])		
snmpwalk(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])		
snmpwalkoid(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])		
socket_accept(resource $socket)		
socket_addrinfo_bind(resource $addr)		
socket_addrinfo_connect(resource $addr)		
socket_addrinfo_explain(resource $addr)		
socket_addrinfo_lookup(string $host [, string $service = '' [, array $hints = '']])		
socket_bind(resource $socket, string $address [, int $port = ''])		
socket_clear_error([resource $socket = ''])		
socket_close(resource $socket)		
socket_cmsg_space(int $level, int $type [, int $n = ''])		
socket_connect(resource $socket, string $address [, int $port = ''])		
socket_create(int $domain, int $type, int $protocol)		
socket_create_listen(int $port [, int $backlog = 128])		
socket_create_pair(int $domain, int $type, int $protocol, array $fd)		
socket_export_stream(resource $socket)		
socket_get_option(resource $socket, int $level, int $optname)		
socket_get_status()		
socket_getopt()		
socket_getpeername(resource $socket, string $address [, int $port = ''])		
socket_getsockname(resource $socket, string $addr [, int $port = ''])		
socket_import_stream(resource $stream)		
socket_last_error([resource $socket = ''])		
socket_listen(resource $socket [, int $backlog = ''])		
socket_read(resource $socket, int $length [, int $type = PHP_BINARY_READ])		
socket_recv(resource $socket, string $buf, int $len, int $flags)		
socket_recvfrom(resource $socket, string $buf, int $len, int $flags, string $name [, int $port = ''])		
socket_recvmsg(resource $socket, array $message [, int $flags = ''])		
socket_select(array $read, array $write, array $except, int $tv_sec [, int $tv_usec = ''])		
socket_send(resource $socket, string $buf, int $len, int $flags)		
socket_sendmsg(resource $socket, array $message [, int $flags = ''])		
socket_sendto(resource $socket, string $buf, int $len, int $flags, string $addr [, int $port = ''])		
socket_set_block(resource $socket)		
socket_set_blocking()		
socket_set_nonblock(resource $socket)		
socket_set_option(resource $socket, int $level, int $optname, mixed $optval)		
socket_set_timeout()		
socket_setopt()		
socket_shutdown(resource $socket [, int $how = 2])		
socket_strerror(int $errno)		
socket_write(resource $socket, string $buffer [, int $length = ''])		
sodium_add(string $val, string $addv)		
sodium_base642bin(string $b64, int $id [, string $ignore = ''])		
sodium_bin2base64(string $bin, int $id)		
sodium_bin2hex(string $bin)		
sodium_compare(string $buf1, string $buf2)		
sodium_crypto_aead_aes256gcm_decrypt(string $ciphertext, string $ad, string $nonce, string $key)		
sodium_crypto_aead_aes256gcm_encrypt(string $msg, string $ad, string $nonce, string $key)		
sodium_crypto_aead_aes256gcm_is_available()		
sodium_crypto_aead_aes256gcm_keygen()		
sodium_crypto_aead_chacha20poly1305_decrypt(string $ciphertext, string $ad, string $nonce, string $key)		
sodium_crypto_aead_chacha20poly1305_encrypt(string $msg, string $ad, string $nonce, string $key)		
sodium_crypto_aead_chacha20poly1305_ietf_decrypt(string $ciphertext, string $ad, string $nonce, string $key)		
sodium_crypto_aead_chacha20poly1305_ietf_encrypt(string $msg, string $ad, string $nonce, string $key)		
sodium_crypto_aead_chacha20poly1305_ietf_keygen()		
sodium_crypto_aead_chacha20poly1305_keygen()		
sodium_crypto_aead_xchacha20poly1305_ietf_decrypt(string $ciphertext, string $ad, string $nonce, string $key)		
sodium_crypto_aead_xchacha20poly1305_ietf_encrypt(string $msg, string $ad, string $nonce, string $key)		
sodium_crypto_aead_xchacha20poly1305_ietf_keygen()		
sodium_crypto_auth(string $msg, string $key)		
sodium_crypto_auth_keygen()		
sodium_crypto_auth_verify(string $signature, string $msg, string $key)		
sodium_crypto_box(string $msg, string $nonce, string $key)		
sodium_crypto_box_keypair()		
sodium_crypto_box_keypair_from_secretkey_and_publickey(string $secret_key, string $public_key)		
sodium_crypto_box_open(string $ciphertext, string $nonce, string $key)		
sodium_crypto_box_publickey(string $key)		
sodium_crypto_box_publickey_from_secretkey(string $key)		
sodium_crypto_box_seal(string $msg, string $key)		
sodium_crypto_box_seal_open(string $ciphertext, string $key)		
sodium_crypto_box_secretkey(string $key)		
sodium_crypto_box_seed_keypair(string $key)		
sodium_crypto_generichash(string $msg [, string $key = '' [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES]])		
sodium_crypto_generichash_final(string $state [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES])		
sodium_crypto_generichash_init([string $key = '' [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES]])		
sodium_crypto_generichash_keygen()		
sodium_crypto_generichash_update(string $state, string $msg)		
sodium_crypto_kdf_derive_from_key(int $subkey_len, int $subkey_id, string $context, string $key)		
sodium_crypto_kdf_keygen()		
sodium_crypto_kx_client_session_keys(string $client_keypair, string $server_key)		
sodium_crypto_kx_keypair()		
sodium_crypto_kx_publickey(string $key)		
sodium_crypto_kx_secretkey(string $key)		
sodium_crypto_kx_seed_keypair(string $string)		
sodium_crypto_kx_server_session_keys(string $server_keypair, string $client_key)		
sodium_crypto_pwhash(int $length, string $password, string $salt, int $opslimit, int $memlimit [, int $alg = ''])		
sodium_crypto_pwhash_scryptsalsa208sha256(int $length, string $password, string $salt, int $opslimit, int $memlimit)		
sodium_crypto_pwhash_scryptsalsa208sha256_str(string $password, int $opslimit, int $memlimit)		
sodium_crypto_pwhash_scryptsalsa208sha256_str_verify(string $hash, string $password)		
sodium_crypto_pwhash_str(string $password, int $opslimit, int $memlimit)		
sodium_crypto_pwhash_str_needs_rehash(string $password, int $opslimit, int $memlimit)		
sodium_crypto_pwhash_str_verify(string $hash, string $password)		
sodium_crypto_scalarmult(string $n, string $p)		
sodium_crypto_scalarmult_base()		
sodium_crypto_secretbox(string $string, string $nonce, string $key)		
sodium_crypto_secretbox_keygen()		
sodium_crypto_secretbox_open(string $ciphertext, string $nonce, string $key)		
sodium_crypto_secretstream_xchacha20poly1305_init_pull(string $header, string $key)		
sodium_crypto_secretstream_xchacha20poly1305_init_push(string $key)		
sodium_crypto_secretstream_xchacha20poly1305_keygen()		
sodium_crypto_secretstream_xchacha20poly1305_pull(string $state, string $c [, string $ad = ''])		
sodium_crypto_secretstream_xchacha20poly1305_push(string $state, string $msg [, string $ad = '' [, int $tag = '']])		
sodium_crypto_secretstream_xchacha20poly1305_rekey(string $state)		
sodium_crypto_shorthash(string $msg, string $key)		
sodium_crypto_shorthash_keygen()		
sodium_crypto_sign(string $msg, string $secret_key)		
sodium_crypto_sign_detached(string $msg, string $keypair)		
sodium_crypto_sign_ed25519_pk_to_curve25519(string $key)		
sodium_crypto_sign_ed25519_sk_to_curve25519(string $key)		
sodium_crypto_sign_keypair()		
sodium_crypto_sign_keypair_from_secretkey_and_publickey(string $secret_key, string $public_key)		
sodium_crypto_sign_open(string $string, string $keypair)		
sodium_crypto_sign_publickey(string $keypair)		
sodium_crypto_sign_publickey_from_secretkey(string $key)		
sodium_crypto_sign_secretkey(string $key)		
sodium_crypto_sign_seed_keypair(string $key)		
sodium_crypto_sign_verify_detached(string $signature, string $msg, string $key)		
sodium_crypto_stream(int $length, string $nonce, string $key)		
sodium_crypto_stream_keygen()		
sodium_crypto_stream_xor(string $msg, string $nonce, string $key)		
sodium_hex2bin(string $hex [, string $ignore = ''])		
sodium_increment(string $val)		
sodium_memcmp(string $buf1, string $buf2)		
sodium_memzero(string $buf)		
sodium_pad(string $unpadded, int $length)		
sodium_unpad(string $padded, int $length)		
solarizeImage(int $threshold)		
solarizeimage(int $threshold)		
solr_get_version()		
solveLinearEquation(array $a, array $b)		
sort(array $array [, int $sort_flags = SORT_REGULAR])		
sort(array $fields)		
sort(array $arr [, int $sort_flag = '', Collator $coll])		
sort(int $sortOrderBy [, int $sortDirection = SolrDocument::SORT_ASC])		
sort(int $sortOrderBy [, int $sortDirection = SolrInputDocument::SORT_ASC])		
sort(string $sort_expr)		
sort(string $sort_expr)		
sort(string $sort_expr)		
sort(string $sort_expr)		
sort([callable $comparator = ''])		
sort([callable $comparator = ''])		
sort([callable $comparator = ''])		
sort([callable $comparator = ''])		
sort([callable $comparator = ''])		
sortWithSortKeys(array $arr, Collator $coll)		
sorted([callable $comparator = ''])		
sorted([callable $comparator = ''])		
sorted([callable $comparator = ''])		
sorted([callable $comparator = ''])		
sorted([callable $comparator = ''])		
soundex(string $str)		
sparseColorImage(int $SPARSE_METHOD, array $arguments [, int $channel = Imagick::CHANNEL_DEFAULT])		
spl_autoload()		
spl_autoload_call(string $class_name)		
spl_autoload_extensions([string $file_extensions = ''])		
spl_autoload_functions()		
spl_autoload_register([callable $autoload_function = '' [, bool $throw = '' [, bool $prepend = '']]])		
spl_autoload_unregister(mixed $autoload_function)		
spl_classes()		
spl_object_hash(object $obj)		
spl_object_id(object $obj)		
spliceImage(int $width, int $height, int $x, int $y)		
split(string $pattern, string $string [, int $limit = -1])		
splitText(int $offset)		
spliti(string $pattern, string $string [, int $limit = -1])		
spreadImage(float $radius)		
spreadimage(float $radius)		
sprintf(string $format [, mixed $args = '' [, mixed $... = '']])		
sql(string $query)		
sql_regcase(string $string)		
sqliteCreateAggregate(string $function_name, callable $step_func, callable $finalize_func [, int $num_args = ''])		
sqliteCreateCollation(string $name, callable $callback)		
sqliteCreateFunction(string $function_name, callable $callback [, int $num_args = -1 [, int $flags = '']])		
sqlite_array_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
sqlite_busy_timeout(resource $dbhandle, int $milliseconds)		
sqlite_changes(resource $dbhandle)		
sqlite_close(resource $dbhandle)		
sqlite_column(resource $result, mixed $index_or_name [, bool $decode_binary = ''])		
sqlite_create_aggregate(resource $dbhandle, string $function_name, callable $step_func, callable $finalize_func [, int $num_args = -1])		
sqlite_create_function(resource $dbhandle, string $function_name, callable $callback [, int $num_args = -1])		
sqlite_current(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
sqlite_error_string(int $error_code)		
sqlite_escape_string(string $item)		
sqlite_exec(resource $dbhandle, string $query [, string $error_msg = ''])		
sqlite_factory(string $filename [, int $mode = 0666 [, string $error_message = '']])		
sqlite_fetch_all(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
sqlite_fetch_array(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = '']])		
sqlite_fetch_column_types(string $table_name, resource $dbhandle [, int $result_type = SQLITE_ASSOC])		
sqlite_fetch_object(resource $result [, string $class_name = '' [, array $ctor_params = '' [, bool $decode_binary = '']]])		
sqlite_fetch_single(resource $result [, bool $decode_binary = ''])		
sqlite_fetch_string()		
sqlite_field_name(resource $result, int $field_index)		
sqlite_has_more(resource $result)		
sqlite_has_prev(resource $result)		
sqlite_key()		
sqlite_last_error(resource $dbhandle)		
sqlite_last_insert_rowid(resource $dbhandle)		
sqlite_libencoding()		
sqlite_libversion()		
sqlite_next(resource $result)		
sqlite_num_fields(resource $result)		
sqlite_num_rows(resource $result)		
sqlite_open(string $filename [, int $mode = 0666 [, string $error_message = '']])		
sqlite_popen(string $filename [, int $mode = 0666 [, string $error_message = '']])		
sqlite_prev(resource $result)		
sqlite_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, string $error_msg = '']])		
sqlite_rewind(resource $result)		
sqlite_seek(resource $result, int $rownum)		
sqlite_single_query(resource $db, string $query [, bool $first_row_only = '' [, bool $decode_binary = '']])		
sqlite_udf_decode_binary(string $data)		
sqlite_udf_encode_binary(string $data)		
sqlite_unbuffered_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, string $error_msg = '']])		
sqlite_valid(resource $result)		
sqlsrv_begin_transaction(resource $conn)		
sqlsrv_cancel(resource $stmt)		
sqlsrv_client_info(resource $conn)		
sqlsrv_close(resource $conn)		
sqlsrv_commit(resource $conn)		
sqlsrv_configure(string $setting, mixed $value)		
sqlsrv_connect(string $serverName [, array $connectionInfo = ''])		
sqlsrv_errors([int $errorsOrWarnings = ''])		
sqlsrv_execute(resource $stmt)		
sqlsrv_fetch(resource $stmt [, int $row = '' [, int $offset = '']])		
sqlsrv_fetch_array(resource $stmt [, int $fetchType = '' [, int $row = '' [, int $offset = '']]])		
sqlsrv_fetch_object(resource $stmt [, string $className = '' [, array $ctorParams = '' [, int $row = '' [, int $offset = '']]]])		
sqlsrv_field_metadata(resource $stmt)		
sqlsrv_free_stmt(resource $stmt)		
sqlsrv_get_config(string $setting)		
sqlsrv_get_field(resource $stmt, int $fieldIndex [, int $getAsType = ''])		
sqlsrv_has_rows(resource $stmt)		
sqlsrv_next_result(resource $stmt)		
sqlsrv_num_fields(resource $stmt)		
sqlsrv_num_rows(resource $stmt)		
sqlsrv_prepare(resource $conn, string $sql [, array $params = '' [, array $options = '']])		
sqlsrv_query(resource $conn, string $sql [, array $params = '' [, array $options = '']])		
sqlsrv_rollback(resource $conn)		
sqlsrv_rows_affected(resource $stmt)		
sqlsrv_send_stream_data(resource $stmt)		
sqlsrv_server_info(resource $conn)		
sqlstate(resource $link)		
sqrt(float $arg)		
srand([int $seed = ''])		
srcanchors(array $parameter)		
srcsofdst(array $parameter)		
sscanf(string $str, string $format [, mixed $... = ''])		
ssdeep_fuzzy_compare(string $signature1, string $signature2)		
ssdeep_fuzzy_hash(string $to_hash)		
ssdeep_fuzzy_hash_filename(string $file_name)		
ssh2_auth_agent(resource $session, string $username)		
ssh2_auth_hostbased_file(resource $session, string $username, string $hostname, string $pubkeyfile, string $privkeyfile [, string $passphrase = '' [, string $local_username = '']])		
ssh2_auth_none(resource $session, string $username)		
ssh2_auth_password(resource $session, string $username, string $password)		
ssh2_auth_pubkey_file(resource $session, string $username, string $pubkeyfile, string $privkeyfile [, string $passphrase = ''])		
ssh2_connect(string $host [, int $port = 22 [, array $methods = '' [, array $callbacks = '']]])		
ssh2_disconnect(resource $session)		
ssh2_exec(resource $session, string $command [, string $pty = '' [, array $env = '' [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS]]]]])		
ssh2_fetch_stream(resource $channel, int $streamid)		
ssh2_fingerprint(resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX])		
ssh2_methods_negotiated(resource $session)		
ssh2_publickey_add(resource $pkey, string $algoname, string $blob [, bool $overwrite = '' [, array $attributes = '']])		
ssh2_publickey_init(resource $session)		
ssh2_publickey_list(resource $pkey)		
ssh2_publickey_remove(resource $pkey, string $algoname, string $blob)		
ssh2_scp_recv(resource $session, string $remote_file, string $local_file)		
ssh2_scp_send(resource $session, string $local_file, string $remote_file [, int $create_mode = 0644])		
ssh2_sftp(resource $session)		
ssh2_sftp_chmod(resource $sftp, string $filename, int $mode)		
ssh2_sftp_lstat(resource $sftp, string $path)		
ssh2_sftp_mkdir(resource $sftp, string $dirname [, int $mode = 0777 [, bool $recursive = '']])		
ssh2_sftp_readlink(resource $sftp, string $link)		
ssh2_sftp_realpath(resource $sftp, string $filename)		
ssh2_sftp_rename(resource $sftp, string $from, string $to)		
ssh2_sftp_rmdir(resource $sftp, string $dirname)		
ssh2_sftp_stat(resource $sftp, string $path)		
ssh2_sftp_symlink(resource $sftp, string $target, string $link)		
ssh2_sftp_unlink(resource $sftp, string $filename)		
ssh2_shell(resource $session [, string $term_type = "vanilla" [, array $env = '' [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS]]]]])		
ssh2_tunnel(resource $session, string $host, int $port)		
sslError()		
sslFilter(EventBase $base, EventBufferEvent $underlying, EventSslContext $ctx, int $state [, int $options = ''])		
sslGetCipherInfo()		
sslGetCipherName()		
sslGetCipherVersion()		
sslGetProtocol()		
sslRandPoll()		
sslRenegotiate()		
sslSet(mysqlnd_connection $connection, string $key, string $cert, string $ca, string $capath, string $cipher)		
sslSocket(EventBase $base, mixed $socket, EventSslContext $ctx, int $state [, int $options = ''])		
ssl_set(resource $link, string $key, string $cert, string $ca, string $capath, string $cipher)		
ssl_set(string $key, string $cert, string $ca, string $capath, string $cipher, mysqli $link)		
stack(Threaded $work)		
start()		
start([int $options = ''])		
start()		
start()		
start()		
start()		
start()		
start()		
start()		
start()		
startAttribute(string $name, resource $xmlwriter)		
startAttributeNs(string $prefix, string $name, string $uri, resource $xmlwriter)		
startBuffering()		
startCdata(resource $xmlwriter)		
startComment(resource $xmlwriter)		
startDocument([string $version = 1.0 [, string $encoding = '' [, string $standalone = '', resource $xmlwriter]]])		
startDtd(string $qualifiedName [, string $publicId = '' [, string $systemId = '', resource $xmlwriter]])		
startDtdAttlist(string $name, resource $xmlwriter)		
startDtdElement(string $qualifiedName, resource $xmlwriter)		
startDtdEntity(string $name, bool $isparam, resource $xmlwriter)		
startElement(string $name, resource $xmlwriter)		
startElementNs(string $prefix, string $name, string $uri, resource $xmlwriter)		
startPi(string $target, resource $xmlwriter)		
startSession([array $options = ''])		
startSound(SWFSound $sound)		
startSound(SWFSound $sount)		
startTransaction()		
startTransaction(array|object $options)		
stat(string $filename)		
stat(string $path, float $interval, callable $callback [, mixed $data = '' [, int $priority = '']])		
stat()		
stat()		
stat(mysqli $link)		
stat(resource $link)		
statIndex(int $index [, int $flags = ''])		
statName(string $name [, int $flags = ''])		
statQueue()		
statisticImage(int $type, int $width, int $height [, int $channel = Imagick::CHANNEL_DEFAULT])		
stats()		
stats()		
stats_absolute_deviation(array $a)		
stats_cdf_beta(float $par1, float $par2, float $par3, int $which)		
stats_cdf_binomial(float $par1, float $par2, float $par3, int $which)		
stats_cdf_cauchy(float $par1, float $par2, float $par3, int $which)		
stats_cdf_chisquare(float $par1, float $par2, int $which)		
stats_cdf_exponential(float $par1, float $par2, int $which)		
stats_cdf_f(float $par1, float $par2, float $par3, int $which)		
stats_cdf_gamma(float $par1, float $par2, float $par3, int $which)		
stats_cdf_laplace(float $par1, float $par2, float $par3, int $which)		
stats_cdf_logistic(float $par1, float $par2, float $par3, int $which)		
stats_cdf_negative_binomial(float $par1, float $par2, float $par3, int $which)		
stats_cdf_noncentral_chisquare(float $par1, float $par2, float $par3, int $which)		
stats_cdf_noncentral_f(float $par1, float $par2, float $par3, float $par4, int $which)		
stats_cdf_noncentral_t(float $par1, float $par2, float $par3, int $which)		
stats_cdf_normal(float $par1, float $par2, float $par3, int $which)		
stats_cdf_poisson(float $par1, float $par2, int $which)		
stats_cdf_t(float $par1, float $par2, int $which)		
stats_cdf_uniform(float $par1, float $par2, float $par3, int $which)		
stats_cdf_weibull(float $par1, float $par2, float $par3, int $which)		
stats_covariance(array $a, array $b)		
stats_dens_beta(float $x, float $a, float $b)		
stats_dens_cauchy(float $x, float $ave, float $stdev)		
stats_dens_chisquare(float $x, float $dfr)		
stats_dens_exponential(float $x, float $scale)		
stats_dens_f(float $x, float $dfr1, float $dfr2)		
stats_dens_gamma(float $x, float $shape, float $scale)		
stats_dens_laplace(float $x, float $ave, float $stdev)		
stats_dens_logistic(float $x, float $ave, float $stdev)		
stats_dens_normal(float $x, float $ave, float $stdev)		
stats_dens_pmf_binomial(float $x, float $n, float $pi)		
stats_dens_pmf_hypergeometric(float $n1, float $n2, float $N1, float $N2)		
stats_dens_pmf_negative_binomial(float $x, float $n, float $pi)		
stats_dens_pmf_poisson(float $x, float $lb)		
stats_dens_t(float $x, float $dfr)		
stats_dens_uniform(float $x, float $a, float $b)		
stats_dens_weibull(float $x, float $a, float $b)		
stats_harmonic_mean(array $a)		
stats_kurtosis(array $a)		
stats_rand_gen_beta(float $a, float $b)		
stats_rand_gen_chisquare(float $df)		
stats_rand_gen_exponential(float $av)		
stats_rand_gen_f(float $dfn, float $dfd)		
stats_rand_gen_funiform(float $low, float $high)		
stats_rand_gen_gamma(float $a, float $r)		
stats_rand_gen_ibinomial(int $n, float $pp)		
stats_rand_gen_ibinomial_negative(int $n, float $p)		
stats_rand_gen_int()		
stats_rand_gen_ipoisson(float $mu)		
stats_rand_gen_iuniform(int $low, int $high)		
stats_rand_gen_noncenral_chisquare(float $df, float $xnonc)		
stats_rand_gen_noncentral_chisquare(float $df, float $xnonc)		
stats_rand_gen_noncentral_f(float $dfn, float $dfd, float $xnonc)		
stats_rand_gen_noncentral_t(float $df, float $xnonc)		
stats_rand_gen_normal(float $av, float $sd)		
stats_rand_gen_t(float $df)		
stats_rand_get_seeds()		
stats_rand_phrase_to_seeds(string $phrase)		
stats_rand_ranf()		
stats_rand_setall(int $iseed1, int $iseed2)		
stats_skew(array $a)		
stats_standard_deviation(array $a [, bool $sample = ''])		
stats_stat_binomial_coef(int $x, int $n)		
stats_stat_correlation(array $arr1, array $arr2)		
stats_stat_factorial(int $n)		
stats_stat_independent_t(array $arr1, array $arr2)		
stats_stat_innerproduct(array $arr1, array $arr2)		
stats_stat_paired_t(array $arr1, array $arr2)		
stats_stat_percentile(array $arr, float $perc)		
stats_stat_powersum(array $arr, float $power)		
stats_variance(array $a [, bool $sample = ''])		
status(string $http_code)		
status()		
status(int $numerator, int $denominator)		
status(CairoContext $context)		
status(CairoContext $context)		
status(CairoContext $context)		
status(CairoContext $context)		
status(CairoContext $context)		
status(CairoFontFace $fontface)		
statusToString(int $status)		
steganoImage(Imagick $watermark_wand, int $offset)		
stem(string $word)		
stereoImage(Imagick $offset_wand)		
stmtInit(mysqlnd_connection $connection)		
stmt_init(mysqli $link)		
stmt_init(resource $link)		
stomp_abort(string $transaction_id [, array $headers = '', resource $link])		
stomp_ack(mixed $msg [, array $headers = '', resource $link])		
stomp_begin(string $transaction_id [, array $headers = '', resource $link])		
stomp_close(resource $link)		
stomp_commit(string $transaction_id [, array $headers = '', resource $link])		
stomp_connect("stomp.default_broker_uri")		
stomp_connect_error()		
stomp_error(resource $link)		
stomp_get_read_timeout(resource $link)		
stomp_get_session_id(resource $link)		
stomp_has_frame(resource $link)		
stomp_read_frame([string $class_name = "stompFrame", resource $link])		
stomp_send(string $destination, mixed $msg [, array $headers = '', resource $link])		
stomp_set_read_timeout(int $seconds [, int $microseconds = '', resource $link])		
stomp_subscribe(string $destination [, array $headers = '', resource $link])		
stomp_unsubscribe(string $destination [, array $headers = '', resource $link])		
stomp_version()		
stop()		
stop([integer $worker_id = ''])		
stop()		
stop()		
stop()		
stop([int $how = ''])		
stop([int $how = ''])		
stopBuffering()		
stopSound(SWFSound $sound)		
stopSound(SWFSound $sount)		
storeBytes()		
storeFile()		
storeResult(mysqlnd_connection $connection)		
storeUpload(string $name [, array $metadata = ''])		
store_result(mysqli_stmt $stmt)		
store_result([int $option = '', mysqli $link])		
store_result(resource $link)		
store_result(resource $stmt)		
str_getcsv(string $input [, string $delimiter = "," [, string $enclosure = '"' [, string $escape = "\\"]]])		
str_ireplace(mixed $search, mixed $replace, mixed $subject [, int $count = ''])		
str_pad(string $input, int $pad_length [, string $pad_string = " " [, int $pad_type = STR_PAD_RIGHT]])		
str_repeat(string $input, int $multiplier)		
str_replace(mixed $search, mixed $replace, mixed $subject [, int $count = ''])		
str_rot13(string $str)		
str_shuffle(string $str)		
str_split(string $string [, int $split_length = 1])		
str_word_count(string $string [, int $format = '' [, string $charlist = '']])		
strcasecmp(string $str1, string $str2)		
strchr()		
strcmp(string $str1, string $str2)		
strcoll(string $str1, string $str2)		
strcspn(string $subject, string $mask [, int $start = '' [, int $length = '']])		
streamMP3(mixed $mp3file [, float $skip = ''])		
streamWrapper()		
stream_bucket_append(resource $brigade, object $bucket)		
stream_bucket_make_writeable(resource $brigade)		
stream_bucket_new(resource $stream, string $buffer)		
stream_bucket_prepend(resource $brigade, object $bucket)		
stream_cast(int $cast_as)		
stream_close()		
stream_context_create([array $options = '' [, array $params = '']])		
stream_context_get_default([array $options = ''])		
stream_context_get_options(resource $stream_or_context)		
stream_context_get_params(resource $stream_or_context)		
stream_context_set_default(array $options)		
stream_context_set_option(resource $stream_or_context, string $wrapper, string $option, mixed $value, array $options)		
stream_context_set_params(resource $stream_or_context, array $params)		
stream_copy_to_stream(resource $source, resource $dest [, int $maxlength = -1 [, int $offset = '']])		
stream_eof()		
stream_filter_append(resource $stream, string $filtername [, int $read_write = '' [, mixed $params = '']])		
stream_filter_prepend(resource $stream, string $filtername [, int $read_write = '' [, mixed $params = '']])		
stream_filter_register(string $filtername, string $classname)		
stream_filter_remove(resource $stream_filter)		
stream_flush()		
stream_get_contents(resource $handle [, int $maxlength = -1 [, int $offset = -1]])		
stream_get_filters()		
stream_get_line(resource $handle, int $length [, string $ending = ''])		
stream_get_meta_data(resource $stream)		
stream_get_transports()		
stream_get_wrappers()		
stream_is_local(mixed $stream_or_url)		
stream_isatty(resource $stream)		
stream_lock(int $operation)		
stream_metadata(string $path, int $option, mixed $value)		
stream_notification_callback(int $notification_code, int $severity, string $message, int $message_code, int $bytes_transferred, int $bytes_max)		
stream_open(string $path, string $mode, int $options, string $opened_path)		
stream_read(int $count)		
stream_register_wrapper()		
stream_resolve_include_path(string $filename)		
stream_seek(int $offset, int $whence)		
stream_select(array $read, array $write, array $except, int $tv_sec [, int $tv_usec = ''])		
stream_set_blocking(resource $stream, bool $mode)		
stream_set_chunk_size(resource $fp, int $chunk_size)		
stream_set_option(int $option, int $arg1, int $arg2)		
stream_set_read_buffer(resource $stream, int $buffer)		
stream_set_timeout(resource $stream, int $seconds [, int $microseconds = ''])		
stream_set_write_buffer(resource $stream, int $buffer)		
stream_socket_accept("default_socket_timeout")		
stream_socket_client("default_socket_timeout")		
stream_socket_enable_crypto(resource $stream, bool $enable [, int $crypto_type = '' [, resource $session_stream = '']])		
stream_socket_get_name(resource $handle, bool $want_peer)		
stream_socket_pair(int $domain, int $type, int $protocol)		
stream_socket_recvfrom(resource $socket, int $length [, int $flags = '' [, string $address = '']])		
stream_socket_sendto(resource $socket, string $data [, int $flags = '' [, string $address = '']])		
stream_socket_server(string $local_socket [, int $errno = '' [, string $errstr = '' [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context = '']]]])		
stream_socket_shutdown(resource $stream, int $how)		
stream_stat()		
stream_supports_lock(resource $stream)		
stream_tell()		
stream_truncate(int $new_size)		
stream_wrapper_register(string $protocol, string $classname [, int $flags = ''])		
stream_wrapper_restore(string $protocol)		
stream_wrapper_unregister(string $protocol)		
stream_write(string $data)		
strftime()		
strideForWidth(int $format, int $width)		
stripImage()		
strip_tags(string $str [, string $allowable_tags = ''])		
stripcslashes(string $str)		
stripimage()		
stripos(string $haystack, mixed $needle [, int $offset = ''])		
stripslashes(string $str)		
stristr(string $haystack, mixed $needle [, bool $before_needle = ''])		
strlen(string $string)		
strnatcasecmp(string $str1, string $str2)		
strnatcmp(string $str1, string $str2)		
strncasecmp(string $str1, string $str2, int $len)		
strncmp(string $str1, string $str2, int $len)		
stroke(UI\Draw\Path $path, int $with, UI\Draw\Stroke $stroke)		
stroke([bool $close_path = ''])		
stroke(CairoContext $context)		
strokeExtents(CairoContext $context)		
strokePreserve(CairoContext $context)		
strpbrk(string $haystack, string $char_list)		
strpos(string $haystack, mixed $needle [, int $offset = ''])		
strptime(string $date, string $format)		
strrchr(string $haystack, mixed $needle)		
strrev(string $string)		
strripos(string $haystack, mixed $needle [, int $offset = ''])		
strrpos(string $haystack, mixed $needle [, int $offset = ''])		
strspn(string $subject, string $mask [, int $start = '' [, int $length = '']])		
strstr(string $haystack, mixed $needle [, bool $before_needle = ''])		
strtok(string $str, string $token)		
strtolower(string $string)		
strtotime()		
strtoupper(string $string)		
strtr(string $str, string $from, string $to, array $replace_pairs)		
strval(mixed $var)		
sub(DateInterval $interval, DateTime $object)		
sub(DateInterval $interval)		
sub([integer $sub_value = ''])		
subImageMatch(Imagick $Imagick [, array $offset = '' [, float $similarity = '']])		
submit(Threaded $task)		
submitTo(int $worker, Threaded $task)		
subscribe(string $destination [, array $headers = '', resource $link])		
subscribe(string $targetTopic)		
substr(string $string, int $start [, int $length = ''])		
substr(int $start [, int $length = ''])		
substr(integer $offset [, integer $length = '' [, bool $remove = '']])		
substr_compare(string $main_str, string $str, int $offset [, int $length = '' [, bool $case_insensitivity = '']])		
substr_count(string $haystack, string $needle [, int $offset = '' [, int $length = '']])		
substr_replace(mixed $string, mixed $replacement, mixed $start [, mixed $length = ''])		
substringData(int $offset, int $count)		
success()		
sum()		
sum()		
sum()		
sum()		
sum()		
supportedBackends()		
suspend()		
suspend()		
suspend()		
svn_add(string $path [, bool $recursive = '' [, bool $force = '']])		
svn_auth_get_parameter(string $key)		
svn_auth_set_parameter(string $key, string $value)		
svn_blame(string $repository_url [, int $revision_no = SVN_REVISION_HEAD])		
svn_cat(string $repos_url [, int $revision_no = ''])		
svn_checkout(string $repos, string $targetpath [, int $revision = '' [, int $flags = '']])		
svn_cleanup(string $workingdir)		
svn_client_version()		
svn_commit(string $log, array $targets [, bool $recursive = ''])		
svn_delete(string $path [, bool $force = ''])		
svn_diff(string $path1, int $rev1, string $path2, int $rev2)		
svn_export(string $frompath, string $topath [, bool $working_copy = '' [, int $revision_no = -1]])		
svn_fs_abort_txn(resource $txn)		
svn_fs_apply_text(resource $root, string $path)		
svn_fs_begin_txn2(resource $repos, int $rev)		
svn_fs_change_node_prop(resource $root, string $path, string $name, string $value)		
svn_fs_check_path(resource $fsroot, string $path)		
svn_fs_contents_changed(resource $root1, string $path1, resource $root2, string $path2)		
svn_fs_copy(resource $from_root, string $from_path, resource $to_root, string $to_path)		
svn_fs_delete(resource $root, string $path)		
svn_fs_dir_entries(resource $fsroot, string $path)		
svn_fs_file_contents(resource $fsroot, string $path)		
svn_fs_file_length(resource $fsroot, string $path)		
svn_fs_is_dir(resource $root, string $path)		
svn_fs_is_file(resource $root, string $path)		
svn_fs_make_dir(resource $root, string $path)		
svn_fs_make_file(resource $root, string $path)		
svn_fs_node_created_rev(resource $fsroot, string $path)		
svn_fs_node_prop(resource $fsroot, string $path, string $propname)		
svn_fs_props_changed(resource $root1, string $path1, resource $root2, string $path2)		
svn_fs_revision_prop(resource $fs, int $revnum, string $propname)		
svn_fs_revision_root(resource $fs, int $revnum)		
svn_fs_txn_root(resource $txn)		
svn_fs_youngest_rev(resource $fs)		
svn_import(string $path, string $url, bool $nonrecursive)		
svn_log(string $repos_url [, int $start_revision = '' [, int $end_revision = '' [, int $limit = '' [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY]]]])		
svn_ls(string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = '' [, bool $peg = '']]])		
svn_mkdir(string $path [, string $log_message = ''])		
svn_repos_create(string $path [, array $config = '' [, array $fsconfig = '']])		
svn_repos_fs(resource $repos)		
svn_repos_fs_begin_txn_for_commit(resource $repos, int $rev, string $author, string $log_msg)		
svn_repos_fs_commit_txn(resource $txn)		
svn_repos_hotcopy(string $repospath, string $destpath, bool $cleanlogs)		
svn_repos_open(string $path)		
svn_repos_recover(string $path)		
svn_revert(string $path [, bool $recursive = ''])		
svn_status(string $path [, int $flags = ''])		
svn_update(string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = '']])		
sweep()		
swirlImage(float $degrees)		
swirlimage(float $degrees)		
switchSlave()		
swoole_async_dns_lookup(string $hostname, callable $callback)		
swoole_async_read(string $filename, callable $callback [, int $chunk_size = 65536 [, int $offset = '']])		
swoole_async_readfile(string $filename, callable $callback)		
swoole_async_set(array $settings)		
swoole_async_write(string $filename, string $content [, integer $offset = '' [, callable $callback = '']])		
swoole_async_writefile(string $filename, string $content [, callable $callback = '' [, int $flags = '']])		
swoole_client_select(array $read_array, array $write_array, array $error_array [, float $timeout = 0.5])		
swoole_cpu_num()		
swoole_errno()		
swoole_event_add(int $fd [, callable $read_callback = '' [, callable $write_callback = '' [, int $events = '']]])		
swoole_event_defer(callable $callback)		
swoole_event_del(int $fd)		
swoole_event_exit()		
swoole_event_set(int $fd [, callable $read_callback = '' [, callable $write_callback = '' [, int $events = '']]])		
swoole_event_wait()		
swoole_event_write(int $fd, string $data)		
swoole_get_local_ip()		
swoole_last_error()		
swoole_load_module(string $filename)		
swoole_select(array $read_array, array $write_array, array $error_array [, float $timeout = ''])		
swoole_set_process_name(string $process_name [, int $size = 128])		
swoole_strerror(int $errno [, int $error_type = ''])		
swoole_timer_after(int $ms, callable $callback [, mixed $param = ''])		
swoole_timer_exists(int $timer_id)		
swoole_timer_tick(int $ms, callable $callback [, mixed $param = ''])		
swoole_version()		
sybase_affected_rows([resource $link_identifier = ''])		
sybase_close([resource $link_identifier = ''])		
sybase_connect([string $servername = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, string $appname = '' [, bool $new = '']]]]]])		
sybase_data_seek(resource $result_identifier, int $row_number)		
sybase_deadlock_retry_count(int $retry_count)		
sybase_fetch_array(resource $result)		
sybase_fetch_assoc(resource $result)		
sybase_fetch_field(resource $result [, int $field_offset = -1])		
sybase_fetch_object(resource $result [, mixed $object = ''])		
sybase_fetch_row(resource $result)		
sybase_field_seek(resource $result, int $field_offset)		
sybase_free_result(resource $result)		
sybase_get_last_message()		
sybase_min_client_severity(int $severity)		
sybase_min_error_severity(int $severity)		
sybase_min_message_severity(int $severity)		
sybase_min_server_severity(int $severity)		
sybase_num_fields(resource $result)		
sybase_num_rows(resource $result)		
sybase_pconnect([string $servername = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, string $appname = '']]]]])		
sybase_query(string $query [, resource $link_identifier = ''])		
sybase_result(resource $result, int $row, mixed $field)		
sybase_select_db(string $database_name [, resource $link_identifier = ''])		
sybase_set_message_handler(callable $handler [, resource $link_identifier = ''])		
sybase_unbuffered_query(string $query, resource $link_identifier [, bool $store_result = ''])		
symlink(string $target, string $link)		
sync()		
syncIterator()		
synchronized(Closure $block [, mixed $... = ''])		
sys_get_temp_dir()		
sys_getloadavg()		
syslog(int $priority, string $message)		
system(string $command [, int $return_var = ''])		
system()		
tailable([bool $tail = ''])		
taint(string $string [, string $... = ''])		
tan(float $arg)		
tanh(float $arg)		
task(string $data [, integer $dst_worker_id = '' [, callable $callback = '']])		
taskCount()		
taskDenominator()		
taskNumerator()		
taskWaitMulti(array $tasks [, double $timeout_ms = ''])		
taskwait(string $data [, float $timeout = '' [, integer $worker_id = '']])		
tcpwrap_check(string $daemon, string $address [, string $user = '' [, bool $nodns = '']])		
tell()		
tell(string $path [, int $read_length = 1024])		
tempnam(string $dir, string $prefix)		
text(string $content, resource $xmlwriter)		
textExtents(string $text, CairoContext $context)		
textExtents(string $text, CairoContext $context)		
textOut(float $x, float $y, string $text)		
textPath(string $string, CairoContext $context, string $text)		
textRect(float $left, float $top, float $right, float $bottom, string $text [, int $align = HaruPage::TALIGN_LEFT])		
textdomain(string $text_domain)		
textureImage(Imagick $texture_wand)		
thread_id(resource $link)		
thread_safe()		
threads()		
thresholdImage(float $threshold [, int $channel = Imagick::CHANNEL_DEFAULT])		
throwException([bool $flag = ''])		
thumbnailImage(int $columns, int $rows [, bool $bestfit = '' [, bool $fill = '' [, bool $legacy = '']]])		
thumbnailimage(int $width, int $height [, bool $fit = ''])		
tick(integer $interval_ms, callable $callback [, string $param = ''])		
tick(integer $interval_ms, callable $callback)		
tidy([string $filename = '' [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = '']]]])		
tidy_access_count(tidy $object)		
tidy_clean_repair(tidy $object)		
tidy_config_count(tidy $object)		
tidy_diagnose(tidy $object)		
tidy_error_count(tidy $object)		
tidy_get_body(tidy $object)		
tidy_get_config(tidy $object)		
tidy_get_head(tidy $object)		
tidy_get_html(tidy $object)		
tidy_get_html_ver(tidy $object)		
tidy_get_opt_doc(string $optname, tidy $object)		
tidy_get_output(tidy $object)		
tidy_get_release()		
tidy_get_root(tidy $object)		
tidy_get_status(tidy $object)		
tidy_getopt(string $option, tidy $object)		
tidy_is_xhtml(tidy $object)		
tidy_is_xml(tidy $object)		
tidy_load_config(string $filename, string $encoding)		
tidy_parse_file(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = '']]])		
tidy_parse_string(string $input [, mixed $config = '' [, string $encoding = '']])		
tidy_repair_file(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = '']]])		
tidy_repair_string(string $data [, mixed $config = '' [, string $encoding = '']])		
tidy_reset_config()		
tidy_save_config(string $filename)		
tidy_set_encoding(string $encoding)		
tidy_setopt(string $option, mixed $value)		
tidy_warning_count(tidy $object)		
time()		
time()		
time_nanosleep(int $seconds, int $nanoseconds)		
time_sleep_until(float $timestamp)		
timeout(int $ms)		
timeout(int $ms)		
timeout(int $ms)		
timeout()		
timeout()		
timer(float $after, float $repeat, callable $callback [, mixed $data = '' [, int $priority = '']])		
timer(EventBase $base, callable $cb [, mixed $arg = ''])		
timestampNonceHandler(callable $callback_function)		
timezone_abbreviations_list()		
timezone_identifiers_list()		
timezone_location_get()		
timezone_name_from_abbr(string $abbr [, int $gmtOffset = -1 [, int $isdst = -1]])		
timezone_name_get()		
timezone_offset_get()		
timezone_open()		
timezone_transitions_get()		
timezone_version_get()		
tintImage(mixed $tint, mixed $opacity [, bool $legacy = ''])		
title(array $parameter)		
tmpfile()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toArray()		
toCanonicalExtendedJSON(string $bson)		
toDateTime()		
toDateTime()		
toDateTime()		
toDateTime(IntlCalendar $cal)		
toDateTimeZone()		
toIndexString(mixed $keys)		
toJSON(string $bson)		
toPHP()		
toRelaxedExtendedJSON(string $bson)		
toString([bool $url_encode = ''])		
toUCallback(int $reason, string $source, string $codeUnits, int $error)		
token(string $tok)		
token(string $tok)		
tokenHandler(callable $callback_function)		
tokenId(string $tok)		
tokenId(string $tok)		
token_get_all(string $source [, int $flags = ''])		
token_name(int $token)		
tolower(mixed $codepoint)		
top()		
top()		
top()		
totitle(mixed $codepoint)		
touch()		
touch(string $key, int $expiration)		
touchByKey(string $server_key, string $key, int $expiration)		
toupper(mixed $codepoint)		
trace()		
trace()		
trader_acos(array $real)		
trader_ad(array $high, array $low, array $close, array $volume)		
trader_add(array $real0, array $real1)		
trader_adosc(array $high, array $low, array $close, array $volume [, int $fastPeriod = '' [, int $slowPeriod = '']])		
trader_adx(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_adxr(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_apo(array $real [, int $fastPeriod = '' [, int $slowPeriod = '' [, int $mAType = '']]])		
trader_aroon(array $high, array $low [, int $timePeriod = ''])		
trader_aroonosc(array $high, array $low [, int $timePeriod = ''])		
trader_asin(array $real)		
trader_atan(array $real)		
trader_atr(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_avgprice(array $open, array $high, array $low, array $close)		
trader_bbands(array $real [, int $timePeriod = '' [, float $nbDevUp = '' [, float $nbDevDn = '' [, int $mAType = '']]]])		
trader_beta(array $real0, array $real1 [, int $timePeriod = ''])		
trader_bop(array $open, array $high, array $low, array $close)		
trader_cci(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_cdl2crows(array $open, array $high, array $low, array $close)		
trader_cdl3blackcrows(array $open, array $high, array $low, array $close)		
trader_cdl3inside(array $open, array $high, array $low, array $close)		
trader_cdl3linestrike(array $open, array $high, array $low, array $close)		
trader_cdl3outside(array $open, array $high, array $low, array $close)		
trader_cdl3starsinsouth(array $open, array $high, array $low, array $close)		
trader_cdl3whitesoldiers(array $open, array $high, array $low, array $close)		
trader_cdlabandonedbaby(array $open, array $high, array $low, array $close [, float $penetration = ''])		
trader_cdladvanceblock(array $open, array $high, array $low, array $close)		
trader_cdlbelthold(array $open, array $high, array $low, array $close)		
trader_cdlbreakaway(array $open, array $high, array $low, array $close)		
trader_cdlclosingmarubozu(array $open, array $high, array $low, array $close)		
trader_cdlconcealbabyswall(array $open, array $high, array $low, array $close)		
trader_cdlcounterattack(array $open, array $high, array $low, array $close)		
trader_cdldarkcloudcover(array $open, array $high, array $low, array $close [, float $penetration = ''])		
trader_cdldoji(array $open, array $high, array $low, array $close)		
trader_cdldojistar(array $open, array $high, array $low, array $close)		
trader_cdldragonflydoji(array $open, array $high, array $low, array $close)		
trader_cdlengulfing(array $open, array $high, array $low, array $close)		
trader_cdleveningdojistar(array $open, array $high, array $low, array $close [, float $penetration = ''])		
trader_cdleveningstar(array $open, array $high, array $low, array $close [, float $penetration = ''])		
trader_cdlgapsidesidewhite(array $open, array $high, array $low, array $close)		
trader_cdlgravestonedoji(array $open, array $high, array $low, array $close)		
trader_cdlhammer(array $open, array $high, array $low, array $close)		
trader_cdlhangingman(array $open, array $high, array $low, array $close)		
trader_cdlharami(array $open, array $high, array $low, array $close)		
trader_cdlharamicross(array $open, array $high, array $low, array $close)		
trader_cdlhighwave(array $open, array $high, array $low, array $close)		
trader_cdlhikkake(array $open, array $high, array $low, array $close)		
trader_cdlhikkakemod(array $open, array $high, array $low, array $close)		
trader_cdlhomingpigeon(array $open, array $high, array $low, array $close)		
trader_cdlidentical3crows(array $open, array $high, array $low, array $close)		
trader_cdlinneck(array $open, array $high, array $low, array $close)		
trader_cdlinvertedhammer(array $open, array $high, array $low, array $close)		
trader_cdlkicking(array $open, array $high, array $low, array $close)		
trader_cdlkickingbylength(array $open, array $high, array $low, array $close)		
trader_cdlladderbottom(array $open, array $high, array $low, array $close)		
trader_cdllongleggeddoji(array $open, array $high, array $low, array $close)		
trader_cdllongline(array $open, array $high, array $low, array $close)		
trader_cdlmarubozu(array $open, array $high, array $low, array $close)		
trader_cdlmatchinglow(array $open, array $high, array $low, array $close)		
trader_cdlmathold(array $open, array $high, array $low, array $close [, float $penetration = ''])		
trader_cdlmorningdojistar(array $open, array $high, array $low, array $close [, float $penetration = ''])		
trader_cdlmorningstar(array $open, array $high, array $low, array $close [, float $penetration = ''])		
trader_cdlonneck(array $open, array $high, array $low, array $close)		
trader_cdlpiercing(array $open, array $high, array $low, array $close)		
trader_cdlrickshawman(array $open, array $high, array $low, array $close)		
trader_cdlrisefall3methods(array $open, array $high, array $low, array $close)		
trader_cdlseparatinglines(array $open, array $high, array $low, array $close)		
trader_cdlshootingstar(array $open, array $high, array $low, array $close)		
trader_cdlshortline(array $open, array $high, array $low, array $close)		
trader_cdlspinningtop(array $open, array $high, array $low, array $close)		
trader_cdlstalledpattern(array $open, array $high, array $low, array $close)		
trader_cdlsticksandwich(array $open, array $high, array $low, array $close)		
trader_cdltakuri(array $open, array $high, array $low, array $close)		
trader_cdltasukigap(array $open, array $high, array $low, array $close)		
trader_cdlthrusting(array $open, array $high, array $low, array $close)		
trader_cdltristar(array $open, array $high, array $low, array $close)		
trader_cdlunique3river(array $open, array $high, array $low, array $close)		
trader_cdlupsidegap2crows(array $open, array $high, array $low, array $close)		
trader_cdlxsidegap3methods(array $open, array $high, array $low, array $close)		
trader_ceil(array $real)		
trader_cmo(array $real [, int $timePeriod = ''])		
trader_correl(array $real0, array $real1 [, int $timePeriod = ''])		
trader_cos(array $real)		
trader_cosh(array $real)		
trader_dema(array $real [, int $timePeriod = ''])		
trader_div(array $real0, array $real1)		
trader_dx(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_ema(array $real [, int $timePeriod = ''])		
trader_errno()		
trader_exp(array $real)		
trader_floor(array $real)		
trader_get_compat()		
trader_get_unstable_period(int $functionId)		
trader_ht_dcperiod(array $real)		
trader_ht_dcphase(array $real)		
trader_ht_phasor(array $real)		
trader_ht_sine(array $real)		
trader_ht_trendline(array $real)		
trader_ht_trendmode(array $real)		
trader_kama(array $real [, int $timePeriod = ''])		
trader_linearreg(array $real [, int $timePeriod = ''])		
trader_linearreg_angle(array $real [, int $timePeriod = ''])		
trader_linearreg_intercept(array $real [, int $timePeriod = ''])		
trader_linearreg_slope(array $real [, int $timePeriod = ''])		
trader_ln(array $real)		
trader_log10(array $real)		
trader_ma(array $real [, int $timePeriod = '' [, int $mAType = '']])		
trader_macd(array $real [, int $fastPeriod = '' [, int $slowPeriod = '' [, int $signalPeriod = '']]])		
trader_macdext(array $real [, int $fastPeriod = '' [, int $fastMAType = '' [, int $slowPeriod = '' [, int $slowMAType = '' [, int $signalPeriod = '' [, int $signalMAType = '']]]]]])		
trader_macdfix(array $real [, int $signalPeriod = ''])		
trader_mama(array $real [, float $fastLimit = '' [, float $slowLimit = '']])		
trader_mavp(array $real, array $periods [, int $minPeriod = '' [, int $maxPeriod = '' [, int $mAType = '']]])		
trader_max(array $real [, int $timePeriod = ''])		
trader_maxindex(array $real [, int $timePeriod = ''])		
trader_medprice(array $high, array $low)		
trader_mfi(array $high, array $low, array $close, array $volume [, int $timePeriod = ''])		
trader_midpoint(array $real [, int $timePeriod = ''])		
trader_midprice(array $high, array $low [, int $timePeriod = ''])		
trader_min(array $real [, int $timePeriod = ''])		
trader_minindex(array $real [, int $timePeriod = ''])		
trader_minmax(array $real [, int $timePeriod = ''])		
trader_minmaxindex(array $real [, int $timePeriod = ''])		
trader_minus_di(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_minus_dm(array $high, array $low [, int $timePeriod = ''])		
trader_mom(array $real [, int $timePeriod = ''])		
trader_mult(array $real0, array $real1)		
trader_natr(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_obv(array $real, array $volume)		
trader_plus_di(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_plus_dm(array $high, array $low [, int $timePeriod = ''])		
trader_ppo(array $real [, int $fastPeriod = '' [, int $slowPeriod = '' [, int $mAType = '']]])		
trader_roc(array $real [, int $timePeriod = ''])		
trader_rocp(array $real [, int $timePeriod = ''])		
trader_rocr(array $real [, int $timePeriod = ''])		
trader_rocr100(array $real [, int $timePeriod = ''])		
trader_rsi(array $real [, int $timePeriod = ''])		
trader_sar(array $high, array $low [, float $acceleration = '' [, float $maximum = '']])		
trader_sarext(array $high, array $low [, float $startValue = '' [, float $offsetOnReverse = '' [, float $accelerationInitLong = '' [, float $accelerationLong = '' [, float $accelerationMaxLong = '' [, float $accelerationInitShort = '' [, float $accelerationShort = '' [, float $accelerationMaxShort = '']]]]]]]])		
trader_set_compat(int $compatId)		
trader_set_unstable_period(int $functionId, int $timePeriod)		
trader_sin(array $real)		
trader_sinh(array $real)		
trader_sma(array $real [, int $timePeriod = ''])		
trader_sqrt(array $real)		
trader_stddev(array $real [, int $timePeriod = '' [, float $nbDev = '']])		
trader_stoch(array $high, array $low, array $close [, int $fastK_Period = '' [, int $slowK_Period = '' [, int $slowK_MAType = '' [, int $slowD_Period = '' [, int $slowD_MAType = '']]]]])		
trader_stochf(array $high, array $low, array $close [, int $fastK_Period = '' [, int $fastD_Period = '' [, int $fastD_MAType = '']]])		
trader_stochrsi(array $real [, int $timePeriod = '' [, int $fastK_Period = '' [, int $fastD_Period = '' [, int $fastD_MAType = '']]]])		
trader_sub(array $real0, array $real1)		
trader_sum(array $real [, int $timePeriod = ''])		
trader_t3(array $real [, int $timePeriod = '' [, float $vFactor = '']])		
trader_tan(array $real)		
trader_tanh(array $real)		
trader_tema(array $real [, int $timePeriod = ''])		
trader_trange(array $high, array $low, array $close)		
trader_trima(array $real [, int $timePeriod = ''])		
trader_trix(array $real [, int $timePeriod = ''])		
trader_tsf(array $real [, int $timePeriod = ''])		
trader_typprice(array $high, array $low, array $close)		
trader_ultosc(array $high, array $low, array $close [, int $timePeriod1 = '' [, int $timePeriod2 = '' [, int $timePeriod3 = '']]])		
trader_var(array $real [, int $timePeriod = '' [, float $nbDev = '']])		
trader_wclprice(array $high, array $low, array $close)		
trader_willr(array $high, array $low, array $close [, int $timePeriod = ''])		
trader_wma(array $real [, int $timePeriod = ''])		
train(array $problem [, array $weights = ''])		
trait_exists(string $traitname [, bool $autoload = ''])		
transcode(string $str, string $toEncoding, string $fromEncoding [, array $options = ''])		
transform(UI\Draw\Matrix $matrix)		
transform(CairoMatrix $matrix, CairoContext $context)		
transformDistance(float $dx, float $dy)		
transformImage(string $crop, string $geometry)		
transformImageColorspace(int $colorspace)		
transformPoint(float $dx, float $dy)		
transformToDoc(DOMNode $doc)		
transformToUri(DOMDocument $doc, string $uri)		
transformToXml(object $doc)		
translate(UI\Point $point)		
translate(float $x, float $y)		
translate(float $tx, float $ty, CairoContext $context, float $x, float $y)		
translate(float $x, float $y, CairoContext $context)		
transliterate(string $subject [, int $start = '' [, int $end = '', mixed $transliterator]])		
transliterator_create(string $id [, int $direction = ''])		
transliterator_create_from_rules(string $rules [, int $direction = '', string $id])		
transliterator_create_inverse()		
transliterator_get_error_code()		
transliterator_get_error_message()		
transliterator_list_ids()		
transliterator_transliterate(string $subject [, int $start = '' [, int $end = '', mixed $transliterator]])		
transparentPaintImage(mixed $target, float $alpha, float $fuzz, bool $invert)		
transposeImage()		
transverseImage()		
trigger_error(string $error_msg [, int $error_type = E_USER_NOTICE])		
trim(string $str [, string $character_mask = " \t\n\r\0\x0B"])		
trim(int $num)		
trimImage(float $fuzz)		
trimimage(float $fuzz)		
truncate([int $length = ''])		
trylock(int $mutex)		
trylock()		
trylock_read()		
tune(float $timeout [, int $options = TokyoTyrant::RDBT_RECON])		
txCommit(mysqlnd_connection $connection)		
txRollback(mysqlnd_connection $connection)		
type()		
uasort(array $array, callable $value_compare_func)		
uasort(callable $cmp_function)		
uasort(callable $cmp_function)		
ucfirst(string $str)		
ucwords(string $str [, string $delimiters = " \t\r\n\f\v"])		
udm_add_search_limit(resource $agent, int $var, string $val)		
udm_alloc_agent(string $dbaddr [, string $dbmode = ''])		
udm_alloc_agent_array(array $databases)		
udm_api_version()		
udm_cat_list(resource $agent, string $category)		
udm_cat_path(resource $agent, string $category)		
udm_check_charset(resource $agent, string $charset)		
udm_clear_search_limits(resource $agent)		
udm_crc32(resource $agent, string $str)		
udm_errno(resource $agent)		
udm_error(resource $agent)		
udm_find(resource $agent, string $query)		
udm_free_agent(resource $agent)		
udm_free_ispell_data(int $agent)		
udm_free_res(resource $res)		
udm_get_doc_count(resource $agent)		
udm_get_res_field(resource $res, int $row, int $field)		
udm_get_res_param(resource $res, int $param)		
udm_hash32(resource $agent, string $str)		
udm_load_ispell_data(resource $agent, int $var, string $val1, string $val2, int $flag)		
udm_set_agent_param(resource $agent, int $var, string $val)		
uksort(array $array, callable $key_compare_func)		
uksort(callable $cmp_function)		
uksort(callable $cmp_function)		
umask([int $mask = ''])		
unbind(string $dsn)		
unbufferedQuery(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, string $error_msg = '']])		
unchangeAll()		
unchangeArchive()		
unchangeIndex(int $index)		
unchangeName(string $name)		
uncompressAllFiles()		
underline(resource $handle, int $style)		
unfreeze(bool $at_front)		
union(Ds\Map $map)		
union(Ds\Set $set)		
uniqid([string $prefix = "" [, bool $more_entropy = '']])		
unique()		
unique()		
uniqueImageColors()		
unixtojd()		
unlink(string $filename [, resource $context = ''])		
unlink(string $path)		
unlink()		
unlinkArchive(string $archive)		
unlock()		
unlock()		
unlock([bool $all = ''])		
unlock([int $prevcount = ''])		
unlock(array $parameter)		
unlock(int $mutex [, bool $destroy = ''])		
unlock()		
unlock()		
unlock()		
unlock()		
unlock()		
unlock()		
unpack(string $format, string $data [, int $offset = ''])		
unpack(string $data [, string $args = ''])		
unpack(binary $data)		
unregister(string $function_name)		
unregisterAll()		
unregister_tick_function(string $function_name)		
unserialize(string $str [, array $options = ''])		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unserialize(string $serialized)		
unset(mixed $var [, mixed $... = ''])		
unset(array $fields)		
unsharpMaskImage(float $radius, float $sigma, float $amount, float $threshold [, int $channel = Imagick::CHANNEL_DEFAULT])		
unshift([mixed $values = ''])		
unshift([mixed $values = ''])		
unshift([mixed $values = ''])		
unshift(mixed $value)		
unshift(mixed $value)		
unstack()		
unsubscribe(string $destination [, array $headers = '', resource $link])		
unsubscribe(string $subscriptionId [, string $targetTopic = ''])		
untaint(string $string [, string $... = ''])		
uopz_add_function(string $function, Closure $handler [, int $flags = ZEND_ACC_PUBLIC, string $class [, int $all = '']])		
uopz_allow_exit(bool $allow)		
uopz_backup(string $function, string $class)		
uopz_compose(string $name, array $classes [, array $methods = '' [, array $properties = '' [, int $flags = '']]])		
uopz_copy(string $function, string $class)		
uopz_del_function(string $function, string $class [, int $all = ''])		
uopz_delete(string $function, string $class)		
uopz_extend(string $class, string $parent)		
uopz_flags(string $function, int $flags, string $class)		
uopz_function(string $function, Closure $handler [, int $modifiers = '', string $class])		
uopz_get_exit_status()		
uopz_get_hook(string $function, string $class)		
uopz_get_mock(string $class)		
uopz_get_property(string $class, string $property, object $instance)		
uopz_get_return(string $function, string $class)		
uopz_get_static(string $class, string $function)		
uopz_implement(string $class, string $interface)		
uopz_overload(int $opcode, Callable $callable)		
uopz_redefine(string $constant, mixed $value, string $class)		
uopz_rename(string $function, string $rename, string $class)		
uopz_restore(string $function, string $class)		
uopz_set_hook(string $function, Closure $hook, string $class)		
uopz_set_mock(string $class, mixed $mock)		
uopz_set_property(string $class, string $property, mixed $value, object $instance)		
uopz_set_return(string $function, mixed $value [, bool $execute = '', string $class])		
uopz_set_static(string $function, array $static, string $class)		
uopz_undefine(string $constant, string $class)		
uopz_unset_hook(string $function, string $class)		
uopz_unset_mock(string $class)		
uopz_unset_return(string $function, string $class)		
update()		
update(int $key, int $value)		
update(int $key, string $value)		
update(string $key, int $value)		
update()		
update()		
update(SplSubject $subject)		
update(array|object $filter, array|object $newObj [, array $updateOptions = ''])		
updateAt(mixed $value, int $offset)		
updateAttributes(string $index, array $attributes, array $values [, bool $mva = ''])		
updateTimestamp(string $key, string $val)		
upgrade(string $path, string $callback)		
url_stat(string $path, int $flags)		
urldecode(string $str)		
urlencode(string $str)		
useCNSEncodings()		
useCNSFonts()		
useCNTEncodings()		
useCNTFonts()		
useDaylightTime()		
useDisMaxQueryParser()		
useEDisMaxQueryParser()		
useJPEncodings()		
useJPFonts()		
useKREncodings()		
useKRFonts()		
useQueue(integer $key [, integer $mode = ''])		
useResult(mysqlnd_connection $connection)		
use_result(mysqli $link)		
use_result(resource $link)		
use_soap_error_handler([bool $handler = ''])		
user(array $parameter)		
userToDevice(float $x, float $y, CairoContext $context)		
userToDeviceDistance(float $x, float $y, CairoContext $context)		
user_error()		
userlist(array $parameter)		
usleep(int $micro_seconds)		
usort(array $array, callable $value_compare_func)		
utf8_decode(string $data)		
utf8_encode(string $data)		
uuid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid(resource $result)		
valid(resource $result)		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
valid()		
validate([bool $scan_data = ''])		
validate()		
validate(string $data, Parle\Lexer $lexer)		
validate(string $data, Parle\RLexer $lexer)		
validateId(string $key)		
value()		
value(string $name)		
values()		
values()		
values(array $row_values)		
vanish()		
var_dump(mixed $expression [, mixed $... = ''])		
var_export(mixed $expression [, bool $return = ''])		
variant_abs(mixed $val)		
variant_add(mixed $left, mixed $right)		
variant_and(mixed $left, mixed $right)		
variant_cast(variant $variant, int $type)		
variant_cat(mixed $left, mixed $right)		
variant_cmp(mixed $left, mixed $right [, int $lcid = '' [, int $flags = '']])		
variant_date_from_timestamp(int $timestamp)		
variant_date_to_timestamp(variant $variant)		
variant_div(mixed $left, mixed $right)		
variant_eqv(mixed $left, mixed $right)		
variant_fix(mixed $variant)		
variant_get_type(variant $variant)		
variant_idiv(mixed $left, mixed $right)		
variant_imp(mixed $left, mixed $right)		
variant_int(mixed $variant)		
variant_mod(mixed $left, mixed $right)		
variant_mul(mixed $left, mixed $right)		
variant_neg(mixed $variant)		
variant_not(mixed $variant)		
variant_or(mixed $left, mixed $right)		
variant_pow(mixed $left, mixed $right)		
variant_round(mixed $variant, int $decimals)		
variant_set(variant $variant, mixed $value)		
variant_set_type(variant $variant, int $type)		
variant_sub(mixed $left, mixed $right)		
variant_xor(mixed $left, mixed $right)		
verify()		
verify()		
version()		
version()		
versionString()		
versionToString(int $version)		
version_compare(string $version1, string $version2, string $operator)		
vfprintf(resource $handle, string $format, array $args)		
vignetteImage(float $blackPoint, float $whitePoint, int $x, int $y)		
virtual(string $filename)		
vpopmail_add_alias_domain(string $domain, string $aliasdomain)		
vpopmail_add_alias_domain_ex(string $olddomain, string $newdomain)		
vpopmail_add_domain(string $domain, string $dir, int $uid, int $gid)		
vpopmail_add_domain_ex(string $domain, string $passwd [, string $quota = '' [, string $bounce = '' [, bool $apop = '']]])		
vpopmail_add_user(string $user, string $domain, string $password [, string $gecos = '' [, bool $apop = '']])		
vpopmail_alias_add(string $user, string $domain, string $alias)		
vpopmail_alias_del(string $user, string $domain)		
vpopmail_alias_del_domain(string $domain)		
vpopmail_alias_get(string $alias, string $domain)		
vpopmail_alias_get_all(string $domain)		
vpopmail_auth_user(string $user, string $domain, string $password [, string $apop = ''])		
vpopmail_del_domain(string $domain)		
vpopmail_del_domain_ex(string $domain)		
vpopmail_del_user(string $user, string $domain)		
vpopmail_error()		
vpopmail_passwd(string $user, string $domain, string $password [, bool $apop = ''])		
vpopmail_set_user_quota(string $user, string $domain, string $quota)		
vprintf(string $format, array $args)		
vsprintf(string $format, array $args)		
wait([boolean $blocking = ''])		
wait()		
wait([int $timeout = ''])		
wait([int $wait = -1])		
wait(int $condition, int $mutex [, int $timeout = ''])		
wait()		
wakeup()		
walk(string $object_id [, bool $suffix_as_key = '' [, int $max_repetitions = '' [, int $non_repeaters = '']]])		
warning(string $message [, array $content = '' [, string $logger = '']])		
warning(string $warning)		
warning_count(resource $link)		
waveImage(float $amplitude, float $length)		
wddx_add_vars(resource $packet_id, mixed $var_name [, mixed $... = ''])		
wddx_deserialize(string $packet)		
wddx_packet_end(resource $packet_id)		
wddx_packet_start([string $comment = ''])		
wddx_serialize_value(mixed $var [, string $comment = ''])		
wddx_serialize_vars(mixed $var_name [, mixed $... = ''])		
webPhar([string $alias = '' [, string $index = "index.php" [, string $f404 = '' [, array $mimetypes = '' [, callable $rewrites = '']]]]])		
where(string $where_expr)		
where(string $where_expr)		
where(string $where_expr)		
whiteThresholdImage(mixed $threshold)		
win32_continue_service(string $servicename [, string $machine = ''])		
win32_create_service(array $details [, string $machine = ''])		
win32_delete_service(string $servicename [, string $machine = ''])		
win32_get_last_control_message()		
win32_pause_service(string $servicename [, string $machine = ''])		
win32_ps_list_procs()		
win32_ps_stat_mem()		
win32_ps_stat_proc([int $pid = ''])		
win32_query_service_status(string $servicename [, string $machine = ''])		
win32_set_service_status(int $status [, int $checkpoint = ''])		
win32_start_service(string $servicename [, string $machine = ''])		
win32_start_service_ctrl_dispatcher(string $name)		
win32_stop_service(string $servicename [, string $machine = ''])		
wincache_fcache_fileinfo([bool $summaryonly = ''])		
wincache_fcache_meminfo()		
wincache_lock(string $key [, bool $isglobal = ''])		
wincache_ocache_fileinfo([bool $summaryonly = ''])		
wincache_ocache_meminfo()		
wincache_refresh_if_changed([array $files = null])		
wincache_rplist_fileinfo([bool $summaryonly = ''])		
wincache_rplist_meminfo()		
wincache_scache_info([bool $summaryonly = ''])		
wincache_scache_meminfo()		
wincache_ucache_add(string $key, mixed $value [, int $ttl = '', array $values [, mixed $unused = null]])		
wincache_ucache_cas(string $key, int $old_value, int $new_value)		
wincache_ucache_clear()		
wincache_ucache_dec(string $key [, int $dec_by = 1 [, bool $success = '']])		
wincache_ucache_delete(mixed $key)		
wincache_ucache_exists(string $key)		
wincache_ucache_get(mixed $key [, bool $success = ''])		
wincache_ucache_inc(string $key [, int $inc_by = 1 [, bool $success = '']])		
wincache_ucache_info([bool $summaryonly = '' [, string $key = null]])		
wincache_ucache_meminfo()		
wincache_ucache_set(mixed $key, mixed $value [, int $ttl = '', array $values [, mixed $unused = null]])		
wincache_unlock(string $key)		
wordwrap(string $str [, int $width = 75 [, string $break = "\n" [, bool $cut = '']]])		
work()		
workload()		
workloadSize()		
write()		
write(UI\Point $point, UI\Draw\Text\Layout $layout)		
write([string $string = '' [, int $start = '']])		
write(string $data)		
write(string $path, string $buffer [, int $mode = ''])		
write(string $session_id, string $session_data)		
write(string $session_id, string $session_data)		
write([string $filename = ''])		
write(mixed $fd [, int $howmuch = ''])		
write(string $data [, int $length = ''])		
write(string $data)		
write(integer $offset, string $data)		
write(string $content)		
write(string $fd, string $data)		
write(string $filename, string $content [, integer $offset = '' [, callable $callback = '']])		
writeAttribute(string $name, string $value, resource $xmlwriter)		
writeAttributeNs(string $prefix, string $name, string $uri, string $content, resource $xmlwriter)		
writeBuffer(EventBuffer $buf)		
writeCdata(string $content, resource $xmlwriter)		
writeComment(string $content, resource $xmlwriter)		
writeDtd(string $name [, string $publicId = '' [, string $systemId = '' [, string $subset = '', resource $xmlwriter]]])		
writeDtdAttlist(string $name, string $content, resource $xmlwriter)		
writeDtdElement(string $name, string $content, resource $xmlwriter)		
writeDtdEntity(string $name, string $content, bool $pe, string $pubid, string $sysid, string $ndataid, resource $xmlwriter)		
writeElement(string $name [, string $content = '', resource $xmlwriter])		
writeElementNs(string $prefix, string $name, string $uri [, string $content = '', resource $xmlwriter])		
writeExports()		
writeFile(string $filename, string $content [, callable $callback = '' [, string $flags = '']])		
writeImage([string $filename = null])		
writeImageFile(resource $filehandle [, string $format = ''])		
writeImages(string $filename, bool $adjoin)		
writeImagesFile(resource $filehandle [, string $format = ''])		
writePi(string $target, string $content, resource $xmlwriter)		
writeRaw(string $content, resource $xmlwriter)		
writeTemporary(string $data [, int $lob_type = OCI_TEMP_CLOB])		
writeToFile()		
writeToPng(string $file)		
writeimage(string $filename [, bool $all_frames = ''])		
writelock([int $wait = -1])		
writeunlock()		
xattr_get(string $filename, string $name [, int $flags = ''])		
xattr_list(string $filename [, int $flags = ''])		
xattr_remove(string $filename, string $name [, int $flags = ''])		
xattr_set(string $filename, string $name, string $value [, int $flags = ''])		
xattr_supported(string $filename [, int $flags = ''])		
xdiff_file_bdiff(string $old_file, string $new_file, string $dest)		
xdiff_file_bdiff_size(string $file)		
xdiff_file_bpatch(string $file, string $patch, string $dest)		
xdiff_file_diff(string $old_file, string $new_file, string $dest [, int $context = 3 [, bool $minimal = '']])		
xdiff_file_diff_binary(string $old_file, string $new_file, string $dest)		
xdiff_file_merge3(string $old_file, string $new_file1, string $new_file2, string $dest)		
xdiff_file_patch(string $file, string $patch, string $dest [, int $flags = DIFF_PATCH_NORMAL])		
xdiff_file_patch_binary(string $file, string $patch, string $dest)		
xdiff_file_rabdiff(string $old_file, string $new_file, string $dest)		
xdiff_string_bdiff(string $old_data, string $new_data)		
xdiff_string_bdiff_size(string $patch)		
xdiff_string_bpatch(string $str, string $patch)		
xdiff_string_diff(string $old_data, string $new_data [, int $context = 3 [, bool $minimal = '']])		
xdiff_string_diff_binary(string $old_data, string $new_data)		
xdiff_string_merge3(string $old_data, string $new_data1, string $new_data2 [, string $error = ''])		
xdiff_string_patch(string $str, string $patch [, int $flags = '' [, string $error = '']])		
xdiff_string_patch_binary(string $str, string $patch)		
xdiff_string_rabdiff(string $old_data, string $new_data)		
xhprof_disable()		
xhprof_enable([int $flags = '' [, array $options = '']])		
xhprof_sample_disable()		
xhprof_sample_enable()		
xinclude([int $options = ''])		
xml_error_string(int $code)		
xml_get_current_byte_index(resource $parser)		
xml_get_current_column_number(resource $parser)		
xml_get_current_line_number(resource $parser)		
xml_get_error_code(resource $parser)		
xml_parse(resource $parser, string $data [, bool $is_final = ''])		
xml_parse_into_struct(resource $parser, string $data, array $values [, array $index = ''])		
xml_parser_create([string $encoding = ''])		
xml_parser_create_ns([string $encoding = '' [, string $separator = ":"]])		
xml_parser_free(resource $parser)		
xml_parser_get_option(resource $parser, int $option)		
xml_parser_set_option(resource $parser, int $option, mixed $value)		
xml_set_character_data_handler(resource $parser, callable $handler)		
xml_set_default_handler(resource $parser, callable $handler)		
xml_set_element_handler(resource $parser, callable $start_element_handler, callable $end_element_handler)		
xml_set_end_namespace_decl_handler(resource $parser, callable $handler)		
xml_set_external_entity_ref_handler(resource $parser, callable $handler)		
xml_set_notation_decl_handler(resource $parser, callable $handler)		
xml_set_object(resource $parser, object $object)		
xml_set_processing_instruction_handler(resource $parser, callable $handler)		
xml_set_start_namespace_decl_handler(resource $parser, callable $handler)		
xml_set_unparsed_entity_decl_handler(resource $parser, callable $handler)		
xmlrpc_decode(string $xml [, string $encoding = "iso-8859-1"])		
xmlrpc_decode_request(string $xml, string $method [, string $encoding = ''])		
xmlrpc_encode(mixed $value)		
xmlrpc_encode_request(string $method, mixed $params [, array $output_options = ''])		
xmlrpc_get_type(mixed $value)		
xmlrpc_is_fault(array $arg)		
xmlrpc_parse_method_descriptions(string $xml)		
xmlrpc_server_add_introspection_data(resource $server, array $desc)		
xmlrpc_server_call_method(resource $server, string $xml, mixed $user_data [, array $output_options = ''])		
xmlrpc_server_create()		
xmlrpc_server_destroy(resource $server)		
xmlrpc_server_register_introspection_callback(resource $server, string $function)		
xmlrpc_server_register_method(resource $server, string $method_name, string $function)		
xmlrpc_set_type(string $value, string $type)		
xmlwriter_end_attribute(resource $xmlwriter)		
xmlwriter_end_cdata(resource $xmlwriter)		
xmlwriter_end_comment(resource $xmlwriter)		
xmlwriter_end_document(resource $xmlwriter)		
xmlwriter_end_dtd(resource $xmlwriter)		
xmlwriter_end_dtd_attlist(resource $xmlwriter)		
xmlwriter_end_dtd_element(resource $xmlwriter)		
xmlwriter_end_dtd_entity(resource $xmlwriter)		
xmlwriter_end_element(resource $xmlwriter)		
xmlwriter_end_pi(resource $xmlwriter)		
xmlwriter_flush([bool $empty = '', resource $xmlwriter])		
xmlwriter_full_end_element(resource $xmlwriter)		
xmlwriter_open_memory()		
xmlwriter_open_uri(string $uri)		
xmlwriter_output_memory([bool $flush = '', resource $xmlwriter])		
xmlwriter_set_indent(bool $indent, resource $xmlwriter)		
xmlwriter_set_indent_string(string $indentString, resource $xmlwriter)		
xmlwriter_start_attribute(string $name, resource $xmlwriter)		
xmlwriter_start_attribute_ns(string $prefix, string $name, string $uri, resource $xmlwriter)		
xmlwriter_start_cdata(resource $xmlwriter)		
xmlwriter_start_comment(resource $xmlwriter)		
xmlwriter_start_document([string $version = 1.0 [, string $encoding = '' [, string $standalone = '', resource $xmlwriter]]])		
xmlwriter_start_dtd(string $qualifiedName [, string $publicId = '' [, string $systemId = '', resource $xmlwriter]])		
xmlwriter_start_dtd_attlist(string $name, resource $xmlwriter)		
xmlwriter_start_dtd_element(string $qualifiedName, resource $xmlwriter)		
xmlwriter_start_dtd_entity(string $name, bool $isparam, resource $xmlwriter)		
xmlwriter_start_element(string $name, resource $xmlwriter)		
xmlwriter_start_element_ns(string $prefix, string $name, string $uri, resource $xmlwriter)		
xmlwriter_start_pi(string $target, resource $xmlwriter)		
xmlwriter_text(string $content, resource $xmlwriter)		
xmlwriter_write_attribute(string $name, string $value, resource $xmlwriter)		
xmlwriter_write_attribute_ns(string $prefix, string $name, string $uri, string $content, resource $xmlwriter)		
xmlwriter_write_cdata(string $content, resource $xmlwriter)		
xmlwriter_write_comment(string $content, resource $xmlwriter)		
xmlwriter_write_dtd(string $name [, string $publicId = '' [, string $systemId = '' [, string $subset = '', resource $xmlwriter]]])		
xmlwriter_write_dtd_attlist(string $name, string $content, resource $xmlwriter)		
xmlwriter_write_dtd_element(string $name, string $content, resource $xmlwriter)		
xmlwriter_write_dtd_entity(string $name, string $content, bool $pe, string $pubid, string $sysid, string $ndataid, resource $xmlwriter)		
xmlwriter_write_element(string $name [, string $content = '', resource $xmlwriter])		
xmlwriter_write_element_ns(string $prefix, string $name, string $uri [, string $content = '', resource $xmlwriter])		
xmlwriter_write_pi(string $target, string $content, resource $xmlwriter)		
xmlwriter_write_raw(string $content, resource $xmlwriter)		
xor(Ds\Map $map)		
xor(Ds\Set $set)		
xpath(string $path)		
yaml_emit(mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = '']]])		
yaml_emit_file(string $filename, mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = '']]])		
yaml_parse(string $input [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])		
yaml_parse_file(string $filename [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])		
yaml_parse_url(string $url [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])		
yaz_addinfo(resource $id)		
yaz_ccl_conf(resource $id, array $config)		
yaz_ccl_parse(resource $id, string $query, array $result)		
yaz_close(resource $id)		
yaz_connect(string $zurl [, mixed $options = ''])		
yaz_database(resource $id, string $databases)		
yaz_element(resource $id, string $elementset)		
yaz_errno(resource $id)		
yaz_error(resource $id)		
yaz_es(resource $id, string $type, array $args)		
yaz_es_result(resource $id)		
yaz_get_option(resource $id, string $name)		
yaz_hits(resource $id [, array $searchresult = ''])		
yaz_itemorder(resource $id, array $args)		
yaz_present(resource $id)		
yaz_range(resource $id, int $start, int $number)		
yaz_record(resource $id, int $pos, string $type)		
yaz_scan(resource $id, string $type, string $startterm [, array $flags = ''])		
yaz_scan_result(resource $id [, array $result = ''])		
yaz_schema(resource $id, string $schema)		
yaz_search(resource $id, string $type, string $query)		
yaz_set_option(resource $id, string $name, string $value, array $options)		
yaz_sort(resource $id, string $criteria)		
yaz_syntax(resource $id, string $syntax)		
yaz_wait([array $options = ''])		
yp_all(string $domain, string $map, string $callback)		
yp_cat(string $domain, string $map)		
yp_err_string(int $errorcode)		
yp_errno()		
yp_first(string $domain, string $map)		
yp_get_default_domain()		
yp_master(string $domain, string $map)		
yp_match(string $domain, string $map, string $key)		
yp_next(string $domain, string $map, string $key)		
yp_order(string $domain, string $map)		
zend_logo_guid()		
zend_thread_id()		
zend_version()		
zip_close(resource $zip)		
zip_entry_close(resource $zip_entry)		
zip_entry_compressedsize(resource $zip_entry)		
zip_entry_compressionmethod(resource $zip_entry)		
zip_entry_filesize(resource $zip_entry)		
zip_entry_name(resource $zip_entry)		
zip_entry_open(resource $zip, resource $zip_entry [, string $mode = ''])		
zip_entry_read(resource $zip_entry [, int $length = 1024])		
zip_open(string $filename)		
zip_read(resource $zip)		
zlib_decode(string $data [, string $max_decoded_len = ''])		
zlib_encode(string $data, int $encoding [, int $level = -1])		
zlib_get_coding_type()		
